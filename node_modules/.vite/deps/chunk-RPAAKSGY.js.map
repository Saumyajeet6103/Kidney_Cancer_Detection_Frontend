{
  "version": 3,
  "sources": ["../../.pnpm/highlight.run@9.1.2/node_modules/highlight.run/src/integrations/amplitude.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/utils/sessionStorage/sessionStorageKeys.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/highlight.run/src/integrations/mixpanel.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/utils/utils.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/stackframe/stackframe.js", "../../.pnpm/highlight.run@9.1.2/node_modules/error-stack-parser/error-stack-parser.js", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/listeners/console-listener.tsx", "../../.pnpm/highlight.run@9.1.2/node_modules/json-stringify-safe/stringify.js", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/listeners/error-listener.tsx", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/types/client.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/constants/errors.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/listeners/network-listener/utils/network-sanitizer.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/utils/storage.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/constants/sessions.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/utils/sessionStorage/highlightSession.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/listeners/network-listener/utils/utils.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/listeners/network-listener/utils/xhr-listener.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/listeners/network-listener/utils/fetch-listener.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/listeners/network-listener/utils/web-socket-listener.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/listeners/network-listener/network-listener.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/listeners/first-load-listeners.tsx", "../../.pnpm/highlight.run@9.1.2/node_modules/client/src/utils/secure-id.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/highlight.run/src/integrations/segment.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/highlight.run/src/environments/electron.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/highlight.run/src/__generated/version.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/highlight.run/src/listeners/fetch/index.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/highlight.run/src/listeners/web-socket/index.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/highlight.run/src/browserExtension/extensionListener.ts", "../../.pnpm/highlight.run@9.1.2/node_modules/highlight.run/src/index.tsx"],
  "sourcesContent": ["// @ts-nocheck\nimport type { AmplitudeIntegrationOptions } from '@highlight-run/client/src/types/client'\nimport type { Integration } from '@highlight-run/client/src/types/types'\n\ninterface Window {\n\tamplitude?: AmplitudeAPI\n}\n\ndeclare var window: Window\n\nexport const setupAmplitudeIntegration: Integration = ({\n\tapiKey,\n}: AmplitudeIntegrationOptions) => {\n\t;(function (e, t) {\n\t\tvar n = e.amplitude || { _q: [], _iq: {} }\n\t\tvar r = t.createElement('script')\n\t\tr.type = 'text/javascript'\n\t\tr.integrity =\n\t\t\t'sha384-+EO59vL/X7v6VE2s6/F4HxfHlK0nDUVWKVg8K9oUlvffAeeaShVBmbORTC2D3UF+'\n\t\tr.crossOrigin = 'anonymous'\n\t\tr.async = true\n\t\tr.src = 'https://cdn.amplitude.com/libs/amplitude-8.17.0-min.gz.js'\n\t\tr.onload = function () {\n\t\t\tif (!e.amplitude.runQueuedFunctions) {\n\t\t\t\tconsole.log('[Amplitude] Error: could not load SDK')\n\t\t\t}\n\t\t\tamplitude.getInstance().init(apiKey)\n\t\t}\n\t\tvar i = t.getElementsByTagName('script')[0]\n\t\ti.parentNode.insertBefore(r, i)\n\t\tfunction s(e, t) {\n\t\t\te.prototype[t] = function () {\n\t\t\t\tthis._q.push(\n\t\t\t\t\t[t].concat(Array.prototype.slice.call(arguments, 0)),\n\t\t\t\t)\n\t\t\t\treturn this\n\t\t\t}\n\t\t}\n\t\tvar o = function () {\n\t\t\tthis._q = []\n\t\t\treturn this\n\t\t}\n\t\tvar a = [\n\t\t\t'add',\n\t\t\t'append',\n\t\t\t'clearAll',\n\t\t\t'prepend',\n\t\t\t'set',\n\t\t\t'setOnce',\n\t\t\t'unset',\n\t\t\t'preInsert',\n\t\t\t'postInsert',\n\t\t\t'remove',\n\t\t]\n\t\tfor (var c = 0; c < a.length; c++) {\n\t\t\ts(o, a[c])\n\t\t}\n\t\tn.Identify = o\n\t\tvar u = function () {\n\t\t\tthis._q = []\n\t\t\treturn this\n\t\t}\n\t\tvar l = [\n\t\t\t'setProductId',\n\t\t\t'setQuantity',\n\t\t\t'setPrice',\n\t\t\t'setRevenueType',\n\t\t\t'setEventProperties',\n\t\t]\n\t\tfor (var p = 0; p < l.length; p++) {\n\t\t\ts(u, l[p])\n\t\t}\n\t\tn.Revenue = u\n\t\tvar d = [\n\t\t\t'init',\n\t\t\t'logEvent',\n\t\t\t'logRevenue',\n\t\t\t'setUserId',\n\t\t\t'setUserProperties',\n\t\t\t'setOptOut',\n\t\t\t'setVersionName',\n\t\t\t'setDomain',\n\t\t\t'setDeviceId',\n\t\t\t'enableTracking',\n\t\t\t'setGlobalUserProperties',\n\t\t\t'identify',\n\t\t\t'clearUserProperties',\n\t\t\t'setGroup',\n\t\t\t'logRevenueV2',\n\t\t\t'regenerateDeviceId',\n\t\t\t'groupIdentify',\n\t\t\t'onInit',\n\t\t\t'logEventWithTimestamp',\n\t\t\t'logEventWithGroups',\n\t\t\t'setSessionId',\n\t\t\t'resetSessionId',\n\t\t]\n\t\tfunction v(e) {\n\t\t\tfunction t(t) {\n\t\t\t\te[t] = function () {\n\t\t\t\t\te._q.push(\n\t\t\t\t\t\t[t].concat(Array.prototype.slice.call(arguments, 0)),\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var n = 0; n < d.length; n++) {\n\t\t\t\tt(d[n])\n\t\t\t}\n\t\t}\n\t\tv(n)\n\t\tn.getInstance = function (e) {\n\t\t\te = (!e || e.length === 0 ? '$default_instance' : e).toLowerCase()\n\t\t\tif (!Object.prototype.hasOwnProperty.call(n._iq, e)) {\n\t\t\t\tn._iq[e] = { _q: [] }\n\t\t\t\tv(n._iq[e])\n\t\t\t}\n\t\t\treturn n._iq[e]\n\t\t}\n\t\te.amplitude = n\n\t})(window, document)\n}\n\nexport interface AmplitudeAPI {\n\tinit: (token: string) => void\n\ttrack: (event_name: string, properties?: any, options?: any) => void\n\tidentify: (unique_id: string) => void\n\tIdentify: any\n\tgetInstance: () => any\n}\n", "export enum SESSION_STORAGE_KEYS {\n\tRECORDING_START_TIME = 'highlightRecordingStartTime',\n\tSEGMENT_LAST_SENT_HASH_KEY = 'HIGHLIGHT_SEGMENT_LAST_SENT_HASH_KEY',\n\tSESSION_DATA = 'sessionData',\n\tSESSION_SECURE_ID = 'sessionSecureID',\n\tUSER_IDENTIFIER = 'highlightIdentifier',\n\tUSER_OBJECT = 'highlightUserObject',\n\tPAYLOAD_ID = 'payloadId',\n}\n", "// @ts-nocheck\nimport type { MixpanelIntegrationOptions } from '@highlight-run/client/src/types/client'\nimport type { Integration } from '@highlight-run/client/src/types/types'\n\ninterface Window {\n\tmixpanel?: MixpanelAPI\n}\n\ndeclare var window: Window\n\nexport const setupMixpanelIntegration: Integration = ({\n\tprojectToken,\n}: MixpanelIntegrationOptions) => {\n\tif (window.mixpanel) {\n\t\treturn\n\t}\n\n\t;(function (f, b) {\n\t\tif (!b.__SV) {\n\t\t\tvar i, h\n\t\t\twindow.mixpanel = b\n\t\t\tb._i = []\n\t\t\tb.init = function (e, f, c) {\n\t\t\t\tfunction g(a, d) {\n\t\t\t\t\tvar b = d.split('.')\n\t\t\t\t\t2 == b.length && ((a = a[b[0]]), (d = b[1]))\n\t\t\t\t\ta[d] = function () {\n\t\t\t\t\t\ta.push(\n\t\t\t\t\t\t\t[d].concat(\n\t\t\t\t\t\t\t\tArray.prototype.slice.call(arguments, 0),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar a = b\n\t\t\t\t'undefined' !== typeof c ? (a = b[c] = []) : (c = 'mixpanel')\n\t\t\t\ta.people = a.people || []\n\t\t\t\ta.toString = function (a) {\n\t\t\t\t\tvar d = 'mixpanel'\n\t\t\t\t\t'mixpanel' !== c && (d += '.' + c)\n\t\t\t\t\ta || (d += ' (stub)')\n\t\t\t\t\treturn d\n\t\t\t\t}\n\t\t\t\ta.people.toString = function () {\n\t\t\t\t\treturn a.toString(1) + '.people (stub)'\n\t\t\t\t}\n\t\t\t\ti =\n\t\t\t\t\t'disable time_event track track_pageview track_links track_forms track_with_groups add_group set_group remove_group register register_once alias unregister identify name_tag set_config reset opt_in_tracking opt_out_tracking has_opted_in_tracking has_opted_out_tracking clear_opt_in_out_tracking start_batch_senders people.set people.set_once people.unset people.increment people.append people.union people.track_charge people.clear_charges people.delete_user people.remove'.split(\n\t\t\t\t\t\t' ',\n\t\t\t\t\t)\n\t\t\t\tfor (h = 0; h < i.length; h++) g(a, i[h])\n\t\t\t\tvar j = 'set set_once union unset remove delete'.split(' ')\n\t\t\t\ta.get_group = function () {\n\t\t\t\t\tfunction b(c) {\n\t\t\t\t\t\td[c] = function () {\n\t\t\t\t\t\t\tcall2_args = arguments\n\t\t\t\t\t\t\tcall2 = [c].concat(\n\t\t\t\t\t\t\t\tArray.prototype.slice.call(call2_args, 0),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\ta.push([e, call2])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar d = {},\n\t\t\t\t\t\t\te = ['get_group'].concat(\n\t\t\t\t\t\t\t\tArray.prototype.slice.call(arguments, 0),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\tc < j.length;\n\t\t\t\t\t\tc++\n\t\t\t\t\t)\n\t\t\t\t\t\tb(j[c])\n\t\t\t\t\treturn d\n\t\t\t\t}\n\t\t\t\tb._i.push([e, f, c])\n\t\t\t}\n\t\t\tb.__SV = 1.2\n\t\t}\n\t})(document, window.mixpanel || [])\n\tconst script = document.createElement('script')\n\tscript.src = MixpanelBundle\n\tdocument.head.appendChild(script)\n\n\tscript.addEventListener('load', () => {\n\t\twindow.mixpanel?.init(projectToken)\n\t})\n}\n\nconst MixpanelBundle = 'https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js'\n\nexport interface MixpanelPeopleAPI {\n\tset: (metadata: { [k: string]: any }) => void\n}\n\nexport interface MixpanelAPI {\n\tinit: (token: string, config?: any, name?: string) => void\n\ttrack: (event_name: string, properties?: any, options?: any) => void\n\tidentify: (unique_id: string) => void\n\tpeople: MixpanelPeopleAPI\n}\n", "import { StringifyOptions } from '../listeners/console-listener'\n\nexport function patch(\n\t// tslint:disable-next-line:no-any\n\tsource: { [key: string]: any },\n\tname: string,\n\t// tslint:disable-next-line:no-any\n\treplacement: (...args: any[]) => any,\n): () => void {\n\ttry {\n\t\tif (!(name in source)) {\n\t\t\treturn () => {}\n\t\t}\n\n\t\tconst original = source[name] as () => unknown\n\t\tconst wrapped = replacement(original)\n\n\t\t// Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n\t\t// otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n\t\t// tslint:disable-next-line:strict-type-predicates\n\t\tif (typeof wrapped === 'function') {\n\t\t\twrapped.prototype = wrapped.prototype || {}\n\t\t\tObject.defineProperties(wrapped, {\n\t\t\t\t__rrweb_original__: {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: original,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\n\t\tsource[name] = wrapped\n\n\t\treturn () => {\n\t\t\tsource[name] = original\n\t\t}\n\t} catch {\n\t\treturn () => {}\n\t}\n}\n\n/**\n * transfer the node path in Event to string\n * @param node the first node in a node path array\n */\nfunction pathToSelector(node: HTMLElement): string | '' {\n\tif (!node || !node.outerHTML) {\n\t\treturn ''\n\t}\n\n\tlet path = ''\n\twhile (node.parentElement) {\n\t\tlet name = node.localName\n\t\tif (!name) {\n\t\t\tbreak\n\t\t}\n\t\tname = name.toLowerCase()\n\t\tlet parent = node.parentElement\n\n\t\tlet domSiblings = []\n\n\t\tif (parent.children && parent.children.length > 0) {\n\t\t\t// tslint:disable-next-line:prefer-for-of\n\t\t\tfor (let i = 0; i < parent.children.length; i++) {\n\t\t\t\tlet sibling = parent.children[i]\n\t\t\t\tif (sibling.localName && sibling.localName.toLowerCase) {\n\t\t\t\t\tif (sibling.localName.toLowerCase() === name) {\n\t\t\t\t\t\tdomSiblings.push(sibling)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (domSiblings.length > 1) {\n\t\t\tname += ':eq(' + domSiblings.indexOf(node) + ')'\n\t\t}\n\t\tpath = name + (path ? '>' + path : '')\n\t\tnode = parent\n\t}\n\n\treturn path\n}\n\n/**\n * judge is object\n */\nfunction isObject(obj: any): boolean {\n\treturn Object.prototype.toString.call(obj) === '[object Object]'\n}\n\n/**\n * judge the object's depth\n */\nfunction isObjTooDeep(obj: any, limit: number): boolean {\n\tif (limit === 0) {\n\t\treturn true\n\t}\n\n\tconst keys = Object.keys(obj)\n\tfor (const key of keys) {\n\t\tif (isObject(obj[key]) && isObjTooDeep(obj[key], limit - 1)) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n}\n\n/**\n * stringify any js object\n * @param obj the object to stringify\n */\nexport function stringify(\n\tobj: any,\n\tstringifyOptions?: StringifyOptions,\n): string {\n\tconst options: StringifyOptions = {\n\t\tnumOfKeysLimit: 50,\n\t\tdepthOfLimit: 4,\n\t}\n\tObject.assign(options, stringifyOptions)\n\tconst stack: any[] = []\n\tconst keys: any[] = []\n\treturn JSON.stringify(obj, function (key, value) {\n\t\t/**\n\t\t * forked from https://github.com/moll/json-stringify-safe/blob/master/stringify.js\n\t\t * to deCycle the object\n\t\t */\n\t\tif (stack.length > 0) {\n\t\t\tconst thisPos = stack.indexOf(this)\n\t\t\t~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n\t\t\t~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n\t\t\tif (~stack.indexOf(value)) {\n\t\t\t\tif (stack[0] === value) {\n\t\t\t\t\tvalue = '[Circular ~]'\n\t\t\t\t} else {\n\t\t\t\t\tvalue =\n\t\t\t\t\t\t'[Circular ~.' +\n\t\t\t\t\t\tkeys.slice(0, stack.indexOf(value)).join('.') +\n\t\t\t\t\t\t']'\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tstack.push(value)\n\t\t}\n\t\t/* END of the FORK */\n\n\t\tif (value === null || value === undefined) {\n\t\t\treturn value\n\t\t}\n\t\tif (shouldIgnore(value)) {\n\t\t\treturn toString(value)\n\t\t}\n\t\tif (value instanceof Event) {\n\t\t\tconst eventResult: any = {}\n\t\t\tfor (const eventKey in value) {\n\t\t\t\tconst eventValue = (value as any)[eventKey]\n\t\t\t\tif (Array.isArray(eventValue)) {\n\t\t\t\t\teventResult[eventKey] = pathToSelector(\n\t\t\t\t\t\teventValue.length ? eventValue[0] : null,\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\teventResult[eventKey] = eventValue\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn eventResult\n\t\t} else if (value instanceof Node) {\n\t\t\tif (value instanceof HTMLElement) {\n\t\t\t\treturn value ? value.outerHTML : ''\n\t\t\t}\n\t\t\treturn value.nodeName\n\t\t} else if (value instanceof Error) {\n\t\t\treturn value.name + ': ' + value.message\n\t\t}\n\t\treturn value\n\t})\n\n\t/**\n\t * whether we should ignore obj's info and call toString() function instead\n\t */\n\tfunction shouldIgnore(_obj: object): boolean {\n\t\t// outof keys limit\n\t\tif (\n\t\t\tisObject(_obj) &&\n\t\t\tObject.keys(_obj).length > options.numOfKeysLimit\n\t\t) {\n\t\t\treturn true\n\t\t}\n\n\t\t// is function\n\t\tif (typeof _obj === 'function') {\n\t\t\treturn true\n\t\t}\n\n\t\t// if a non-user event with only the `isTrusted` key\n\t\t// We ignore this because some frameworks/library can output these non-stop.\n\t\t// There's no value in recording/showing these to the end user so we ignore.\n\t\tif (_obj instanceof Event && _obj.isTrusted === false) {\n\t\t\tconst eventKeys = Object.keys(_obj)\n\n\t\t\treturn eventKeys.length === 1\n\t\t}\n\n\t\t/**\n\t\t * judge object's depth to avoid browser's OOM\n\t\t *\n\t\t * issues: https://github.com/rrweb-io/rrweb/issues/653\n\t\t */\n\t\tif (isObject(_obj) && isObjTooDeep(_obj, options.depthOfLimit)) {\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\t/**\n\t * limit the toString() result according to option\n\t */\n\tfunction toString(_obj: object): string {\n\t\tlet str = _obj.toString()\n\t\tif (\n\t\t\toptions.stringLengthLimit &&\n\t\t\tstr.length > options.stringLengthLimit\n\t\t) {\n\t\t\tstr = `${str.slice(0, options.stringLengthLimit)}...`\n\t\t}\n\t\treturn str\n\t}\n}\n\nfunction supportsWebP(): boolean {\n\tvar elem = document.createElement('canvas')\n\tif (!!(elem.getContext && elem.getContext('2d'))) {\n\t\treturn elem.toDataURL('image/webp').indexOf('data:image/webp') == 0\n\t}\n\treturn false\n}\n\nexport function getDefaultDataURLOptions(): {\n\ttype: string\n\tquality: number\n} {\n\tif (supportsWebP()) {\n\t\treturn {\n\t\t\ttype: 'image/webp',\n\t\t\tquality: 0.9,\n\t\t}\n\t}\n\treturn {\n\t\ttype: 'image/jpeg',\n\t\tquality: 0.6,\n\t}\n}\n", "(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n", "(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(\\),.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\((.+):(\\d+):(\\d+)\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                var tokens = sanitizedLine.split(/\\s+/).slice(1);\n                // if a location was matched, pass it to extractLocation() otherwise pop the last token\n                var locationParts = this.extractLocation(location ? location[1] : tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n", "import { ConsoleMessage } from '../types/shared-types'\nimport { ConsoleMethods } from '../types/client'\nimport { patch, stringify } from '../utils/utils'\nimport ErrorStackParser from 'error-stack-parser'\n\nexport type StringifyOptions = {\n\t// limit of string length\n\tstringLengthLimit?: number\n\t/**\n\t * limit of number of keys in an object\n\t * if an object contains more keys than this limit, we would call its toString function directly\n\t */\n\tnumOfKeysLimit: number\n\t/**\n\t * limit number of depth in an object\n\t * if an object is too deep, toString process may cause browser OOM\n\t */\n\tdepthOfLimit: number\n}\n\nexport type LogRecordOptions = {\n\tlevel: ConsoleMethods[]\n\tstringifyOptions: StringifyOptions\n\t/**\n\t * Set to try to serialize console object arguments into the message body.\n\t */\n\tserializeConsoleAttributes?: boolean\n\tlogger: Logger | 'console'\n}\n\nexport type Logger = {\n\tassert?: typeof console.assert\n\tclear?: typeof console.clear\n\tcount?: typeof console.count\n\tcountReset?: typeof console.countReset\n\tdebug?: typeof console.debug\n\tdir?: typeof console.dir\n\tdirxml?: typeof console.dirxml\n\terror?: typeof console.error\n\tgroup?: typeof console.group\n\tgroupCollapsed?: typeof console.groupCollapsed\n\tgroupEnd?: () => void\n\tinfo?: typeof console.info\n\tlog?: typeof console.log\n\ttable?: typeof console.table\n\ttime?: typeof console.time\n\ttimeEnd?: typeof console.timeEnd\n\ttimeLog?: typeof console.timeLog\n\ttrace?: typeof console.trace\n\twarn?: typeof console.warn\n}\n\nexport function ConsoleListener(\n\tcallback: (c: ConsoleMessage) => void,\n\tlogOptions: LogRecordOptions,\n) {\n\tconst loggerType = logOptions.logger\n\tif (!loggerType) {\n\t\treturn () => {}\n\t}\n\tlet logger: Logger\n\tif (typeof loggerType === 'string') {\n\t\tlogger = window[loggerType]\n\t} else {\n\t\tlogger = loggerType\n\t}\n\tconst cancelHandlers: (() => void)[] = []\n\n\t// add listener to thrown errors\n\tif (logOptions.level.includes('error')) {\n\t\tif (window) {\n\t\t\tconst errorHandler = (event: ErrorEvent) => {\n\t\t\t\tconst { message, error } = event\n\t\t\t\tlet trace: any[] = []\n\t\t\t\tif (error) {\n\t\t\t\t\ttrace = ErrorStackParser.parse(error)\n\t\t\t\t}\n\t\t\t\tconst payload = [\n\t\t\t\t\tstringify(message, logOptions.stringifyOptions),\n\t\t\t\t]\n\t\t\t\tcallback({\n\t\t\t\t\ttype: 'Error',\n\t\t\t\t\ttrace,\n\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\tvalue: payload,\n\t\t\t\t})\n\t\t\t}\n\t\t\twindow.addEventListener('error', errorHandler)\n\t\t\tcancelHandlers.push(() => {\n\t\t\t\tif (window) window.removeEventListener('error', errorHandler)\n\t\t\t})\n\t\t}\n\t}\n\n\tfor (const levelType of logOptions.level) {\n\t\tcancelHandlers.push(replace(logger, levelType))\n\t}\n\treturn () => {\n\t\tcancelHandlers.forEach((h) => h())\n\t}\n\n\t/**\n\t * replace the original console function and record logs\n\t * @param logger the logger object such as Console\n\t * @param level the name of log function to be replaced\n\t */\n\tfunction replace(_logger: Logger, level: ConsoleMethods) {\n\t\tif (!_logger[level]) {\n\t\t\treturn () => {}\n\t\t}\n\t\t// replace the logger.{level}. return a restore function\n\t\treturn patch(_logger, level, (original) => {\n\t\t\treturn (...data: Array<any>) => {\n\t\t\t\t// @ts-expect-error\n\t\t\t\toriginal.apply(this, data)\n\t\t\t\ttry {\n\t\t\t\t\tconst trace = ErrorStackParser.parse(new Error())\n\t\t\t\t\tconst message = logOptions.serializeConsoleAttributes\n\t\t\t\t\t\t? data.map((o) =>\n\t\t\t\t\t\t\t\ttypeof o === 'object'\n\t\t\t\t\t\t\t\t\t? stringify(o, logOptions.stringifyOptions)\n\t\t\t\t\t\t\t\t\t: o,\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: data\n\t\t\t\t\t\t\t\t.filter((o) => typeof o !== 'object')\n\t\t\t\t\t\t\t\t.map((o) => `${o}`)\n\t\t\t\t\tcallback({\n\t\t\t\t\t\ttype: level,\n\t\t\t\t\t\ttrace: trace.slice(1),\n\t\t\t\t\t\tvalue: message,\n\t\t\t\t\t\tattributes: stringify(\n\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t\t\t.filter((d) => typeof d === 'object')\n\t\t\t\t\t\t\t\t.reduce((a, b) => ({ ...a, ...b }), {}),\n\t\t\t\t\t\t\tlogOptions.stringifyOptions,\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\t})\n\t\t\t\t} catch (error) {\n\t\t\t\t\toriginal('highlight logger error:', error, ...data)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n}\n", "exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n", "import { ErrorMessage } from '../types/shared-types'\nimport stringify from 'json-stringify-safe'\nimport ErrorStackParser from 'error-stack-parser'\nimport { HighlightOptions } from '../types/types'\nimport { HighlightClassOptions } from '../index'\n\ninterface HighlightPromise<T> extends Promise<T> {\n\tpromiseCreationError: Error\n\tgetStack(): Error | undefined\n}\n\nfunction handleError(\n\tcallback: (e: ErrorMessage) => void,\n\tevent: any,\n\tsource: string | undefined,\n\terror?: Error,\n) {\n\tlet res: ErrorStackParser.StackFrame[] = []\n\ttry {\n\t\tres = ErrorStackParser.parse(error ?? event)\n\t} catch (e) {\n\t\tres = ErrorStackParser.parse(new Error())\n\t}\n\tlet payload: Object = {}\n\tif (event instanceof Error) {\n\t\tevent = event.message\n\t\tif (event.cause) {\n\t\t\tpayload = { 'exception.cause': event.cause }\n\t\t}\n\t}\n\tconst framesToUse = removeHighlightFrameIfExists(res)\n\tcallback({\n\t\tevent: stringify(event),\n\t\ttype: 'window.onerror',\n\t\turl: window.location.href,\n\t\tsource: source ?? '',\n\t\tlineNumber: framesToUse[0]?.lineNumber ? framesToUse[0]?.lineNumber : 0,\n\t\tcolumnNumber: framesToUse[0]?.columnNumber\n\t\t\t? framesToUse[0]?.columnNumber\n\t\t\t: 0,\n\t\tstackTrace: framesToUse,\n\t\ttimestamp: new Date().toISOString(),\n\t\tpayload: payload ? stringify(payload) : undefined,\n\t})\n}\n\nexport const ErrorListener = (\n\tcallback: (e: ErrorMessage) => void,\n\t{ enablePromisePatch }: { enablePromisePatch: boolean },\n) => {\n\tif (typeof window === 'undefined') return () => {}\n\n\tconst initialOnError = (window.onerror = (\n\t\tevent: any,\n\t\tsource: string | undefined,\n\t\tlineno: number | undefined,\n\t\tcolno: number | undefined,\n\t\terror: Error | undefined,\n\t): void => {\n\t\thandleError(callback, event, source, error)\n\t})\n\n\tconst initialOnUnhandledRejection = (window.onunhandledrejection = (\n\t\tevent: PromiseRejectionEvent,\n\t) => {\n\t\tif (event.reason) {\n\t\t\tconst hPromise = event.promise as HighlightPromise<any>\n\t\t\tif (hPromise.getStack) {\n\t\t\t\thandleError(\n\t\t\t\t\tcallback,\n\t\t\t\t\tevent.reason,\n\t\t\t\t\tevent.type,\n\t\t\t\t\thPromise.getStack(),\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\thandleError(callback, event.reason, event.type)\n\t\t\t}\n\t\t}\n\t})\n\n\tconst initialPromise = window.Promise\n\tconst highlightPromise = class Promise<T> extends initialPromise<T> {\n\t\tprivate readonly promiseCreationError: Error\n\n\t\tconstructor(\n\t\t\texecutor: (\n\t\t\t\tresolve: (value: T | PromiseLike<T>) => void,\n\t\t\t\treject: (reason?: Error) => void,\n\t\t\t) => void,\n\t\t) {\n\t\t\tsuper(executor)\n\t\t\tthis.promiseCreationError = new Error()\n\t\t}\n\n\t\tgetStack() {\n\t\t\treturn this.promiseCreationError\n\t\t}\n\n\t\tstatic shouldPatch() {\n\t\t\t// @ts-ignore\n\t\t\tconst zoneUndefined = typeof window.Zone === 'undefined'\n\t\t\treturn enablePromisePatch && zoneUndefined\n\t\t}\n\t}\n\tif (highlightPromise.shouldPatch()) {\n\t\twindow.Promise = highlightPromise\n\t}\n\treturn () => {\n\t\twindow.Promise = initialPromise\n\t\twindow.onunhandledrejection = initialOnUnhandledRejection\n\t\twindow.onerror = initialOnError\n\t}\n}\n\nconst removeHighlightFrameIfExists = (\n\tframes: ErrorStackParser.StackFrame[],\n): ErrorStackParser.StackFrame[] => {\n\tif (frames.length === 0) {\n\t\treturn frames\n\t}\n\n\tconst firstFrame = frames[0]\n\tif (\n\t\tfirstFrame.fileName?.includes('highlight.run') ||\n\t\tfirstFrame.fileName?.includes('highlight.io') ||\n\t\tfirstFrame.functionName === 'new highlightPromise'\n\t) {\n\t\treturn frames.slice(1)\n\t}\n\treturn frames\n}\n", "import { RequestResponsePair } from '../listeners/network-listener/utils/models'\n\nexport const ALL_CONSOLE_METHODS = [\n\t'assert',\n\t'count',\n\t'countReset',\n\t'debug',\n\t'dir',\n\t'dirxml',\n\t'error',\n\t'group',\n\t'groupCollapsed',\n\t'groupEnd',\n\t'info',\n\t'log',\n\t'table',\n\t'time',\n\t'timeEnd',\n\t'timeLog',\n\t'trace',\n\t'warn',\n] as const\ntype ConsoleMethodsTuple = typeof ALL_CONSOLE_METHODS\nexport declare type ConsoleMethods = ConsoleMethodsTuple[number]\n\nexport declare type DebugOptions = {\n\tclientInteractions?: boolean\n\tdomRecording?: boolean\n}\n\nexport declare type NetworkRecordingOptions = {\n\t/**\n\t * Enables recording of network requests.\n\t * The data includes the URLs, the size of the request, and how long the request took.\n\t * @default true\n\t */\n\tenabled?: boolean\n\t/**\n\t * This enables recording XMLHttpRequest and Fetch headers and bodies.\n\t * @default false\n\t */\n\trecordHeadersAndBody?: boolean\n\t/**\n\t * This disables recording WebSocket events.\n\t * WebSocket events are recorded by default if recordHeadersAndBody is set.\n\t * @default false\n\t */\n\tdisableWebSocketEventRecordings?: boolean\n\t/**\n\t * Request and response headers where the value is not recorded.\n\t * The header value is replaced with '[REDACTED]'.\n\t * These headers are case-insensitive.\n\t * `recordHeadersAndBody` needs to be enabled.\n\t * This option will be ignored if `headerKeysToRecord` is set.\n\t * @example\n\t * networkHeadersToRedact: ['Secret-Header', 'Plain-Text-Password']\n\t */\n\tnetworkHeadersToRedact?: string[]\n\t/**\n\t * Specifies the keys for request/response JSON body that should not be recorded.\n\t * The body value is replaced with '[REDACTED]'.\n\t * These keys are case-insensitive.\n\t * `enabled` and `recordHeadersAndBody` need to be `true`. Otherwise this option will be ignored.\n\t * @example bodyKeysToRedact: ['secret-token', 'plain-text-password']\n\t * // Only `body.id` and `body.pageNumber` will be recorded.\n\t * body = {\n\t * 'id': '123',\n\t * 'pageNumber': '1',\n\t * 'secret-token': 'super-sensitive-value',\n\t * 'plain-text-password': 'password123',\n\t * }\n\t */\n\tnetworkBodyKeysToRedact?: string[]\n\t/**\n\t * URLs to not record headers and bodies for.\n\t * To disable recording headers and bodies for all URLs, set `recordHeadersAndBody` to `false`.\n\t * @default ['https://www.googleapis.com/identitytoolkit', 'https://securetoken.googleapis.com']\n\t */\n\turlBlocklist?: string[]\n\t/**\n\t * Specifies the keys for request/response headers to record.\n\t * This option will override `networkHeadersToRedact` if specified.\n\t * `enabled` and `recordHeadersAndBody` need to be `true`. Otherwise this option will be ignored.\n\t * @example headerKeysToRecord: ['id', 'pageNumber']\n\t * // Only `headers.id` and `headers.pageNumber` will be recorded.\n\t * headers = {\n\t * 'id': '123',\n\t * 'pageNumber': '1',\n\t * 'secret-token': 'super-sensitive-value',\n\t * 'plain-text-password': 'password123',\n\t * }\n\t */\n\theaderKeysToRecord?: string[]\n\t/**\n\t * Specifies the keys for request/response JSON body to record.\n\t * This option will override `networkBodyKeysToRedact` if specified.\n\t * `enabled` and `recordHeadersAndBody` need to be `true`. Otherwise this option will be ignored.\n\t * @example bodyKeysToRecord: ['id', 'pageNumber']\n\t * // Only `body.id` and `body.pageNumber` will be recorded.\n\t * body = {\n\t * 'id': '123',\n\t * 'pageNumber': '1',\n\t * 'secret-token': 'super-sensitive-value',\n\t * 'plain-text-password': 'password123',\n\t * }\n\t */\n\tbodyKeysToRecord?: string[]\n\t/**\n\t * Record frontend network request metrics that are sent to\n\t * the following list of domains. A domain substring match is used to\n\t * determine if a network request matches one of the following values.\n\t * @example destinationDomains: ['backend.example.com']\n\t * // if your frontend makes requests to `backend.example.com` that you would like to record\n\t */\n\tdestinationDomains?: string[]\n\t/**\n\t * Function to edit/remove data in request/response pairs or ignore the pair entirely.\n\t * @example\n\t * ```\n\t * requestResponseSanitizer: pair => {\n\t *   if (pair.request.url.toLowerCase().indexOf('ignore') !== -1) {\n\t *      // ignore the entire request/response pair (no network logs)\n\t *      return null\n\t *    }\n\t *\n\t *    if (pair.response.body.indexOf('secret') !== -1) {\n\t *        // remove the body in the response\n\t * \t\t\t\tdelete pair.response.body;\n\t *    }\n\t *\n\t *    return pair\n\t * }\n\t * ```\n\t *\n\t */\n\trequestResponseSanitizer?: (\n\t\tpair: RequestResponsePair,\n\t) => RequestResponsePair | null\n}\n\nexport declare type IntegrationOptions = {\n\tamplitude?: AmplitudeIntegrationOptions\n\tintercom?: IntercomIntegrationOptions\n\tmixpanel?: MixpanelIntegrationOptions\n}\n\nexport declare type SessionShortcutOptions = false | string\n\ntype DefaultIntegrationOptions = {\n\tdisabled?: boolean\n}\n\nexport declare interface MixpanelIntegrationOptions\n\textends DefaultIntegrationOptions {\n\tprojectToken?: string\n}\n\nexport declare interface AmplitudeIntegrationOptions\n\textends DefaultIntegrationOptions {\n\tapiKey?: string\n}\n\nexport declare interface IntercomIntegrationOptions\n\textends DefaultIntegrationOptions {}\n\nexport enum MetricName {\n\tDeviceMemory = 'DeviceMemory',\n\tViewportHeight = 'ViewportHeight',\n\tViewportWidth = 'ViewportWidth',\n\tScreenHeight = 'ScreenHeight',\n\tScreenWidth = 'ScreenWidth',\n\tViewportArea = 'ViewportArea',\n}\nexport enum MetricCategory {\n\tDevice = 'Device',\n\tWebVital = 'WebVital',\n\tPerformance = 'Performance',\n\tFrontend = 'Frontend',\n\tBackend = 'Backend',\n}\n", "export const ERRORS_TO_IGNORE = [\n\t'[\"\\\\\"Script error.\\\\\"\"]' /** This is an error that happens from a script that is on a different origin than the origin that Highlight is running on. See: https://sentry.io/answers/script-error/*/,\n\t'\"Script error.\"' /** This is an error that happens from a script that is on a different origin than the origin that Highlight is running on. See: https://sentry.io/answers/script-error/*/,\n\t'[\"\\\\\"Load failed.\\\\\"\"]',\n\t'\"Load failed.\"',\n\t'[\"\\\\\"Network request failed.\\\\\"\"]',\n\t'\"Network request failed.\"',\n\t'[\"\\\\\"Document is not focused.\\\\\"\"]',\n\t'\"Document is not focused.\"',\n\t'[\"\\\\\"Failed to fetch\\\\\"\"]',\n\t'\"Failed to fetch\"',\n\t'[{\"isTrusted\":true}]' /** Cross-origin errors: https://stackoverflow.com/questions/44815172/log-shows-error-object-istrustedtrue-instead-of-actual-error-data */,\n\t'{\"isTrusted\":true}' /** Cross-origin errors: https://stackoverflow.com/questions/44815172/log-shows-error-object-istrustedtrue-instead-of-actual-error-data */,\n\t'[\"{}\"]',\n\t'\"{}\"',\n\t'[\"\"]',\n\t'\"\"',\n\t'[\"\\\\\"\\\\\"\"]',\n\t'\"\"',\n]\n\nexport const ERROR_PATTERNS_TO_IGNORE = [\n\t'websocket error',\n\t'\\\\\"ResizeObserver loop',\n]\n", "import { Request, Response, Headers } from './models'\n\nexport const sanitizeResource = <T extends Request | Response>(\n\tresource: T,\n\theadersToRedact: string[],\n\theadersToRecord?: string[],\n): T => {\n\tconst newHeaders = sanitizeHeaders(\n\t\theadersToRedact,\n\t\tresource.headers,\n\t\theadersToRecord,\n\t)\n\n\treturn {\n\t\t...resource,\n\t\theaders: newHeaders,\n\t}\n}\n\nexport const sanitizeHeaders = (\n\theadersToRedact: string[],\n\theaders?: Headers,\n\theadersToRecord?: string[],\n) => {\n\tconst newHeaders = { ...headers }\n\n\t// `headersToRecord` overrides `headersToRedact`.\n\tif (headersToRecord) {\n\t\tObject.keys(newHeaders)?.forEach((header: string) => {\n\t\t\t// Only keep the keys that are specified in `headersToRecord`.\n\t\t\tif (![...headersToRecord].includes(header?.toLowerCase())) {\n\t\t\t\tnewHeaders[header] = '[REDACTED]'\n\t\t\t}\n\t\t})\n\n\t\treturn newHeaders\n\t}\n\n\tObject.keys(newHeaders)?.forEach((header: string) => {\n\t\t// Redact all the keys in `headersToRedact`.\n\t\tif (\n\t\t\t[...SENSITIVE_HEADERS, ...headersToRedact].includes(\n\t\t\t\theader?.toLowerCase(),\n\t\t\t)\n\t\t) {\n\t\t\tnewHeaders[header] = '[REDACTED]'\n\t\t}\n\t})\n\n\treturn newHeaders\n}\n\n/** These are known headers that are secrets. */\nconst SENSITIVE_HEADERS = [\n\t'authorization',\n\t'cookie',\n\t'proxy-authorization',\n\t'token',\n]\n\n/** Known URLs that contains secrets. */\nexport const DEFAULT_URL_BLOCKLIST = [\n\t'https://www.googleapis.com/identitytoolkit',\n\t'https://securetoken.googleapis.com',\n]\n", "type Mode = 'localStorage' | 'sessionStorage'\n\nlet mode: Mode = 'localStorage'\n\nclass Storage {\n\tprivate storage: { [key: string]: string } = {}\n\tpublic getItem(key: string) {\n\t\treturn this.storage[key] ?? ''\n\t}\n\tpublic setItem(key: string, value: string) {\n\t\tthis.storage[key] = value\n\t}\n\tpublic removeItem(key: string) {\n\t\tdelete this.storage[key]\n\t}\n}\n\nlet globalStorage = new Storage()\n\nconst getPersistentStorage = () => {\n\ttry {\n\t\tswitch (mode) {\n\t\t\tcase 'localStorage':\n\t\t\t\treturn window.localStorage\n\t\t\tcase 'sessionStorage':\n\t\t\t\treturn window.sessionStorage\n\t\t}\n\t} catch (e) {\n\t\treturn globalStorage\n\t}\n}\n\nexport const setStorageMode = (m: Mode) => {\n\tmode = m\n}\n\nexport const getItem = (key: string) => {\n\treturn getPersistentStorage().getItem(key)\n}\n\nexport const setItem = (key: string, value: string) => {\n\treturn getPersistentStorage().setItem(key, value)\n}\n\nexport const removeItem = (key: string) => {\n\treturn getPersistentStorage().removeItem(key)\n}\n\nexport const monkeyPatchLocalStorage = (\n\tonSetItemHandler: ({\n\t\tkeyName,\n\t\tkeyValue,\n\t}: {\n\t\tkeyName: string\n\t\tkeyValue: string\n\t}) => void,\n) => {\n\tif (mode === 'sessionStorage') {\n\t\tconsole.warn(\n\t\t\t`highlight.io cannot use local storage; segment integration will not work`,\n\t\t)\n\t\treturn\n\t}\n\n\tconst originalSetItem = window.localStorage.setItem\n\twindow.localStorage.setItem = function () {\n\t\tconst [keyName, keyValue] = arguments as unknown as [\n\t\t\tkey: string,\n\t\t\tvalue: string,\n\t\t]\n\t\tonSetItemHandler({ keyName, keyValue })\n\t\toriginalSetItem.apply(this, [keyName, keyValue])\n\t}\n}\n", "/**\n *  The amount of time to wait until sending the first payload.\n */\nexport const FIRST_SEND_FREQUENCY = 1000\n/**\n * The amount of time between sending the client-side payload to Highlight backend client.\n * In milliseconds.\n */\nexport const SEND_FREQUENCY = 1000 * 2\n\n/**\n * Maximum length of a session\n */\nexport const MAX_SESSION_LENGTH = 4 * 60 * 60 * 1000\n\n/**\n * The amount of time allowed after the last push before creating a new session.\n * In milliseconds.\n */\nexport const SESSION_PUSH_THRESHOLD = 15 * 60 * 1000\n\n/*\n * Don't take another full snapshot unless it's been at least\n * 4 minutes AND the cumulative payload size since the last\n * snapshot is > 10MB.\n */\nexport const SNAPSHOT_SETTINGS = {\n\tnormal: {\n\t\tbytes: 10e6,\n\t\ttime: 4 * 60 * 1000,\n\t},\n\tcanvas: {\n\t\tbytes: 16e6,\n\t\ttime: 5000,\n\t},\n} as const\n\n// Debounce duplicate visibility events\nexport const VISIBILITY_DEBOUNCE_MS = 100\n", "import { SESSION_STORAGE_KEYS } from './sessionStorageKeys'\nimport { getItem, removeItem, setItem } from '../storage'\nimport { SESSION_PUSH_THRESHOLD } from '../../constants/sessions'\n\nexport type SessionData = {\n\tsessionSecureID: string\n\tprojectID: number\n\tsessionStartTime?: number\n\tlastPushTime?: number\n\tuserIdentifier?: string\n\tuserObject?: Object\n}\n\nexport const getPreviousSessionData = (): SessionData | undefined => {\n\tlet storedSessionData = JSON.parse(\n\t\tgetItem(SESSION_STORAGE_KEYS.SESSION_DATA) || '{}',\n\t)\n\tif (\n\t\tstoredSessionData &&\n\t\tstoredSessionData.lastPushTime &&\n\t\tDate.now() - storedSessionData.lastPushTime < SESSION_PUSH_THRESHOLD\n\t) {\n\t\treturn storedSessionData as SessionData\n\t}\n}\n\nexport const setSessionData = function (sessionData: SessionData | null) {\n\tif (sessionData === null) {\n\t\tremoveItem(SESSION_STORAGE_KEYS.SESSION_DATA)\n\t\t// preserve SESSION_STORAGE_KEYS.SESSION_SECURE_ID as that is used by network listeners\n\t\treturn\n\t}\n\tsetItem(SESSION_STORAGE_KEYS.SESSION_DATA, JSON.stringify(sessionData))\n\tsetSessionSecureID(sessionData.sessionSecureID)\n}\n\nexport const getSessionSecureID = function () {\n\treturn getItem(SESSION_STORAGE_KEYS.SESSION_SECURE_ID) ?? ''\n}\n\nexport const setSessionSecureID = function (sessionSecureID: string) {\n\treturn setItem(SESSION_STORAGE_KEYS.SESSION_SECURE_ID, sessionSecureID)\n}\n", "import { RequestResponsePair } from './models'\nimport { sanitizeResource } from './network-sanitizer'\nimport { getSessionSecureID } from '../../../utils/sessionStorage/highlightSession'\n\nexport const HIGHLIGHT_REQUEST_HEADER = 'X-Highlight-Request'\n\nexport const normalizeUrl = (url: string) => {\n\tlet urlToMutate = url\n\t/**\n\t * Make sure URL includes the protocol and the host.\n\t * For Next.js API routes, the URL is only the pathname.\n\t * @example There's a Next.js API route called `/api/todo/create` on an app hosted at `https://todos.com`\n\t * The URL we get from the XHR/Fetch listener is `/api/todo/create`.\n\t * The Performance API's URL is `https://todos.com/api/todo/create`.\n\t * Because of this mismatch, we fail to match the request with the headers/payload.\n\t */\n\tif (!url.startsWith('https://') && !url.startsWith('http://')) {\n\t\turlToMutate = `${window.location.origin}${urlToMutate}`\n\t}\n\n\t// Remove trailing forward slashes\n\treturn urlToMutate.replace(/\\/+$/, '')\n}\n\ntype GroupedPerformanceTimings = {\n\txmlhttprequest: { [url: string]: PerformanceResourceTiming[] }\n\tothers: { [url: string]: PerformanceResourceTiming[] }\n\tfetch: { [url: string]: PerformanceResourceTiming[] }\n}\n\ntype PerformanceResourceTimingWithRequestResponsePair =\n\tPerformanceResourceTiming & {\n\t\trequestResponsePair: RequestResponsePair\n\t}\n\ntype SanitizeOptions = {\n\theadersToRedact: string[]\n\theadersToRecord?: string[]\n\trequestResponseSanitizer?: (\n\t\tpair: RequestResponsePair,\n\t) => RequestResponsePair | null\n}\n\nconst sanitizeRequestResponsePair = (\n\tpair: RequestResponsePair,\n\t{\n\t\theadersToRedact,\n\t\theadersToRecord,\n\t\trequestResponseSanitizer,\n\t}: SanitizeOptions,\n): RequestResponsePair | null => {\n\t// body keys are already be redacted at this point (see getBodyThatShouldBeRecorded)\n\tlet sanitizedPair: RequestResponsePair | null = pair\n\n\t// step 1: pass through user defined sanitizer\n\tif (requestResponseSanitizer) {\n\t\tlet stringifyRequestBody = true\n\t\ttry {\n\t\t\tsanitizedPair.request.body = JSON.parse(sanitizedPair.request.body)\n\t\t} catch (err) {\n\t\t\tstringifyRequestBody = false\n\t\t}\n\n\t\tlet stringifyResponseBody = true\n\t\ttry {\n\t\t\tsanitizedPair.response.body = JSON.parse(\n\t\t\t\tsanitizedPair.response.body,\n\t\t\t)\n\t\t} catch (err) {\n\t\t\tstringifyResponseBody = false\n\t\t}\n\n\t\ttry {\n\t\t\tsanitizedPair = requestResponseSanitizer(sanitizedPair)\n\t\t} catch (err) {\n\t\t} finally {\n\t\t\tstringifyRequestBody =\n\t\t\t\tstringifyRequestBody && !!sanitizedPair?.request?.body\n\t\t\tstringifyResponseBody =\n\t\t\t\tstringifyResponseBody && !!sanitizedPair?.response?.body\n\n\t\t\tif (stringifyRequestBody) {\n\t\t\t\tsanitizedPair!.request.body = JSON.stringify(\n\t\t\t\t\tsanitizedPair!.request.body,\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (stringifyResponseBody) {\n\t\t\t\tsanitizedPair!.response.body = JSON.stringify(\n\t\t\t\t\tsanitizedPair!.response.body,\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\tif (!sanitizedPair) {\n\t\t\treturn null\n\t\t}\n\t}\n\n\t// step 2: redact any specified headers\n\tconst { request, response, ...rest } = sanitizedPair\n\n\treturn {\n\t\trequest: sanitizeResource(request, headersToRedact, headersToRecord),\n\t\tresponse: sanitizeResource(response, headersToRedact, headersToRecord),\n\t\t...rest,\n\t}\n}\n\nexport const matchPerformanceTimingsWithRequestResponsePair = (\n\tperformanceTimings: PerformanceResourceTiming[],\n\trequestResponsePairs: RequestResponsePair[],\n\ttype: 'xmlhttprequest' | 'fetch',\n\tsanitizeOptions: SanitizeOptions,\n) => {\n\t// Request response pairs are sorted by end time; sort performance timings the same way\n\tperformanceTimings.sort((a, b) => a.responseEnd - b.responseEnd)\n\n\tconst initialGroupedPerformanceTimings: GroupedPerformanceTimings = {\n\t\txmlhttprequest: {},\n\t\tothers: {},\n\t\tfetch: {},\n\t}\n\n\tconst groupedPerformanceTimings: {\n\t\t[type: string]: { [url: string]: any[] }\n\t} = performanceTimings.reduce((previous, performanceTiming) => {\n\t\tconst url = normalizeUrl(performanceTiming.name)\n\t\tif (performanceTiming.initiatorType === type) {\n\t\t\tprevious[type][url] = [\n\t\t\t\t...(previous[type][url] || []),\n\t\t\t\tperformanceTiming,\n\t\t\t]\n\t\t} else {\n\t\t\tprevious.others[url] = [\n\t\t\t\t...(previous.others[url] || []),\n\t\t\t\tperformanceTiming,\n\t\t\t]\n\t\t}\n\t\treturn previous\n\t}, initialGroupedPerformanceTimings)\n\n\tlet groupedRequestResponsePairs: {\n\t\t[url: string]: RequestResponsePair[]\n\t} = {}\n\tgroupedRequestResponsePairs = requestResponsePairs.reduce(\n\t\t(previous, requestResponsePair) => {\n\t\t\tconst url = normalizeUrl(requestResponsePair.request.url)\n\t\t\tprevious[url] = [...(previous[url] || []), requestResponsePair]\n\t\t\treturn previous\n\t\t},\n\t\tgroupedRequestResponsePairs,\n\t)\n\n\tfor (let url in groupedPerformanceTimings[type]) {\n\t\tconst performanceTimingsForUrl = groupedPerformanceTimings[type][url]\n\t\tconst requestResponsePairsForUrl = groupedRequestResponsePairs[url]\n\t\tif (!requestResponsePairsForUrl) {\n\t\t\tcontinue\n\t\t}\n\t\t/**\n\t\t * We offset the starting because performanceTimings starts recording\n\t\t * immediately and requestResponsePairs only start recording when Highlight\n\t\t * is loaded. Because of this requestResponsePairs will not always have the\n\t\t * first few requests made when a page loads.\n\t\t */\n\t\tconst offset = Math.max(\n\t\t\tperformanceTimingsForUrl.length - requestResponsePairsForUrl.length,\n\t\t\t0,\n\t\t)\n\t\tfor (let i = offset; i < performanceTimingsForUrl.length; i++) {\n\t\t\tif (performanceTimingsForUrl[i]) {\n\t\t\t\tperformanceTimingsForUrl[i].requestResponsePair =\n\t\t\t\t\trequestResponsePairsForUrl[i - offset]\n\t\t\t}\n\t\t}\n\t}\n\n\tlet result: PerformanceResourceTimingWithRequestResponsePair[] = []\n\tfor (let type in groupedPerformanceTimings) {\n\t\tfor (let url in groupedPerformanceTimings[type]) {\n\t\t\tresult = result.concat(groupedPerformanceTimings[type][url])\n\t\t}\n\t}\n\n\treturn result\n\t\t.sort((a, b) => a.fetchStart - b.fetchStart)\n\t\t.reduce(\n\t\t\t(\n\t\t\t\tresources: PerformanceResourceTimingWithRequestResponsePair[],\n\t\t\t\tperformanceTiming: PerformanceResourceTimingWithRequestResponsePair,\n\t\t\t) => {\n\t\t\t\tlet requestResponsePair: RequestResponsePair | null =\n\t\t\t\t\tperformanceTiming.requestResponsePair\n\n\t\t\t\tif (requestResponsePair) {\n\t\t\t\t\trequestResponsePair = sanitizeRequestResponsePair(\n\t\t\t\t\t\tperformanceTiming.requestResponsePair,\n\t\t\t\t\t\tsanitizeOptions,\n\t\t\t\t\t)\n\n\t\t\t\t\t// ignore request if it was filtered out by the user defined sanitizer\n\t\t\t\t\tif (!requestResponsePair) {\n\t\t\t\t\t\treturn resources\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tperformanceTiming.toJSON = function () {\n\t\t\t\t\t// offset by `window.performance.timeOrigin` to get absolute timestamps\n\t\t\t\t\tconst o = window.performance.timeOrigin\n\t\t\t\t\treturn {\n\t\t\t\t\t\tinitiatorType: this.initiatorType,\n\t\t\t\t\t\tstartTimeAbs: o + this.startTime,\n\t\t\t\t\t\tconnectStartAbs: o + this.connectStart,\n\t\t\t\t\t\tconnectEndAbs: o + this.connectEnd,\n\t\t\t\t\t\tdomainLookupStartAbs: o + this.domainLookupStart,\n\t\t\t\t\t\tdomainLookupEndAbs: o + this.domainLookupEnd,\n\t\t\t\t\t\tfetchStartAbs: o + this.fetchStart,\n\t\t\t\t\t\tredirectStartAbs: o + this.redirectStart,\n\t\t\t\t\t\tredirectEndAbs: o + this.redirectEnd,\n\t\t\t\t\t\trequestStartAbs: o + this.requestStart,\n\t\t\t\t\t\tresponseStartAbs: o + this.responseStart,\n\t\t\t\t\t\tresponseEndAbs: o + this.responseEnd,\n\t\t\t\t\t\tsecureConnectionStartAbs:\n\t\t\t\t\t\t\to + this.secureConnectionStart,\n\t\t\t\t\t\tworkerStartAbs: o + this.workerStart,\n\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\ttransferSize: this.transferSize,\n\t\t\t\t\t\tencodedBodySize: this.encodedBodySize,\n\t\t\t\t\t\tdecodedBodySize: this.decodedBodySize,\n\t\t\t\t\t\tnextHopProtocol: this.nextHopProtocol,\n\t\t\t\t\t\trequestResponsePairs: requestResponsePair,\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresources.push(performanceTiming)\n\t\t\t\treturn resources\n\t\t\t},\n\t\t\t[],\n\t\t)\n}\n\n/**\n * Returns true if the name is a Highlight network resource.\n * This is used to filter out Highlight requests/responses from showing up on end application's network resources.\n */\nconst isHighlightNetworkResourceFilter = (name: string, backendUrl: string) =>\n\tname\n\t\t.toLocaleLowerCase()\n\t\t.includes(\n\t\t\timport.meta.env.REACT_APP_PUBLIC_GRAPH_URI ?? 'highlight.io',\n\t\t) ||\n\tname.toLocaleLowerCase().includes('highlight.io') ||\n\tname.toLocaleLowerCase().includes(backendUrl)\n\nexport const shouldNetworkRequestBeRecorded = (\n\turl: string,\n\thighlightBackendUrl: string,\n\ttracingOrigins?: boolean | (string | RegExp)[],\n) => {\n\treturn (\n\t\t!isHighlightNetworkResourceFilter(url, highlightBackendUrl) ||\n\t\tshouldNetworkRequestBeTraced(url, tracingOrigins)\n\t)\n}\n\nexport const shouldNetworkRequestBeTraced = (\n\turl: string,\n\ttracingOrigins?: boolean | (string | RegExp)[],\n) => {\n\tlet patterns: (string | RegExp)[] = []\n\tif (tracingOrigins === true) {\n\t\tpatterns = ['localhost', /^\\//]\n\t\tif (window?.location?.host) {\n\t\t\tpatterns.push(window.location.host)\n\t\t}\n\t} else if (tracingOrigins instanceof Array) {\n\t\tpatterns = tracingOrigins\n\t}\n\n\tlet result = false\n\tpatterns.forEach((pattern) => {\n\t\tif (url.match(pattern)) {\n\t\t\tresult = true\n\t\t}\n\t})\n\treturn result\n}\n\nfunction makeId(length: number) {\n\tvar result = ''\n\tvar characters =\n\t\t'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n\tvar charactersLength = characters.length\n\tfor (var i = 0; i < length; i++) {\n\t\tresult += characters.charAt(\n\t\t\tMath.floor(Math.random() * charactersLength),\n\t\t)\n\t}\n\treturn result\n}\n\nexport const createNetworkRequestId = () => {\n\t// Long enough to avoid collisions, not long enough to be unguessable\n\treturn [getSessionSecureID(), makeId(10)]\n}\n\nexport const getHighlightRequestHeader = (\n\tsessionSecureID: string,\n\trequestId: string,\n) => {\n\treturn sessionSecureID + '/' + requestId\n}\n", "import stringify from 'json-stringify-safe'\n\nimport { NetworkListenerCallback } from '../network-listener'\nimport { Headers, Request, RequestResponsePair, Response } from './models'\nimport {\n\tcreateNetworkRequestId,\n\tgetHighlightRequestHeader,\n\tHIGHLIGHT_REQUEST_HEADER,\n\tshouldNetworkRequestBeRecorded,\n\tshouldNetworkRequestBeTraced,\n} from './utils'\n\nexport interface BrowserXHR extends XMLHttpRequest {\n\t_method: string\n\t_url: string\n\t_requestHeaders: Headers\n\t_responseSize?: number\n\t_shouldRecordHeaderAndBody: boolean\n\t_body?: any\n}\n\n/**\n * Listens to all XMLHttpRequests made.\n */\nexport const XHRListener = (\n\tcallback: NetworkListenerCallback,\n\tbackendUrl: string,\n\ttracingOrigins: boolean | (string | RegExp)[],\n\turlBlocklist: string[],\n\tbodyKeysToRedact?: string[],\n\tbodyKeysToRecord?: string[],\n) => {\n\tconst XHR = XMLHttpRequest.prototype\n\n\tconst originalOpen = XHR.open\n\tconst originalSend = XHR.send\n\tconst originalSetRequestHeader = XHR.setRequestHeader\n\n\t/**\n\t * When a request gets initiated, store metadata for that specific request.\n\t */\n\tXHR.open = function (this: BrowserXHR, method: string, url: string | URL) {\n\t\tif (typeof url === 'string') {\n\t\t\tthis._url = url\n\t\t} else {\n\t\t\tthis._url = url.toString()\n\t\t}\n\t\tthis._method = method\n\t\tthis._requestHeaders = {}\n\t\tthis._shouldRecordHeaderAndBody = !urlBlocklist.some((blockedUrl) =>\n\t\t\tthis._url.toLowerCase().includes(blockedUrl),\n\t\t)\n\n\t\t// @ts-expect-error\n\t\treturn originalOpen.apply(this, arguments)\n\t}\n\n\tXHR.setRequestHeader = function (\n\t\tthis: BrowserXHR,\n\t\theader: string,\n\t\tvalue: string,\n\t) {\n\t\tthis._requestHeaders[header] = value\n\n\t\t// @ts-expect-error\n\t\treturn originalSetRequestHeader.apply(this, arguments)\n\t}\n\n\tXHR.send = function (this: BrowserXHR, postData: any) {\n\t\tif (\n\t\t\t!shouldNetworkRequestBeRecorded(\n\t\t\t\tthis._url,\n\t\t\t\tbackendUrl,\n\t\t\t\ttracingOrigins,\n\t\t\t)\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\treturn originalSend.apply(this, arguments)\n\t\t}\n\n\t\tconst [sessionSecureID, requestId] = createNetworkRequestId()\n\t\tif (shouldNetworkRequestBeTraced(this._url, tracingOrigins)) {\n\t\t\tthis.setRequestHeader(\n\t\t\t\tHIGHLIGHT_REQUEST_HEADER,\n\t\t\t\tgetHighlightRequestHeader(sessionSecureID, requestId),\n\t\t\t)\n\t\t}\n\n\t\tconst shouldRecordHeaderAndBody = this._shouldRecordHeaderAndBody\n\t\tconst requestModel: Request = {\n\t\t\tsessionSecureID,\n\t\t\tid: requestId,\n\t\t\turl: this._url,\n\t\t\tverb: this._method,\n\t\t\theaders: shouldRecordHeaderAndBody ? this._requestHeaders : {},\n\t\t\tbody: undefined,\n\t\t}\n\n\t\tif (shouldRecordHeaderAndBody) {\n\t\t\tif (postData) {\n\t\t\t\tconst bodyData = getBodyData(postData, requestModel.url)\n\t\t\t\tif (bodyData) {\n\t\t\t\t\tthis._body = bodyData\n\t\t\t\t\trequestModel['body'] = getBodyThatShouldBeRecorded(\n\t\t\t\t\t\tbodyData,\n\t\t\t\t\t\tbodyKeysToRedact,\n\t\t\t\t\t\tbodyKeysToRecord,\n\t\t\t\t\t\trequestModel.headers,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The load event for XMLHttpRequest is fired when a request completes successfully.\n\t\tthis.addEventListener('load', async function () {\n\t\t\tconst responseModel: Response = {\n\t\t\t\tstatus: this.status,\n\t\t\t\theaders: {},\n\t\t\t\tbody: undefined,\n\t\t\t}\n\n\t\t\tif (shouldRecordHeaderAndBody) {\n\t\t\t\tconst responseHeaders = this.getAllResponseHeaders()\n\t\t\t\t// Convert the header string into an array\n\t\t\t\t// of individual headers\n\t\t\t\tconst normalizedResponseHeaders = responseHeaders\n\t\t\t\t\t.trim()\n\t\t\t\t\t.split(/[\\r\\n]+/)\n\n\t\t\t\t// Create a map of header names to values\n\t\t\t\tconst headerMap: { [key: string]: any } = {}\n\t\t\t\tnormalizedResponseHeaders.forEach(function (line) {\n\t\t\t\t\tconst parts = line.split(': ')\n\t\t\t\t\tconst header = parts.shift() as string\n\t\t\t\t\theaderMap[header] = parts.join(': ')\n\t\t\t\t})\n\t\t\t\tresponseModel.headers = headerMap\n\n\t\t\t\tif (postData) {\n\t\t\t\t\tconst bodyData = getBodyData(postData, requestModel.url)\n\t\t\t\t\tif (bodyData) {\n\t\t\t\t\t\trequestModel['body'] = getBodyThatShouldBeRecorded(\n\t\t\t\t\t\t\tbodyData,\n\t\t\t\t\t\t\tbodyKeysToRedact,\n\t\t\t\t\t\t\tbodyKeysToRecord,\n\t\t\t\t\t\t\tresponseModel.headers,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.responseType === '' || this.responseType === 'text') {\n\t\t\t\t\tresponseModel['body'] = getBodyThatShouldBeRecorded(\n\t\t\t\t\t\tthis.responseText,\n\t\t\t\t\t\tbodyKeysToRedact,\n\t\t\t\t\t\tbodyKeysToRecord,\n\t\t\t\t\t\tresponseModel.headers,\n\t\t\t\t\t)\n\t\t\t\t\t// Each character is 8 bytes, total size is number of characters multiplied by 8.\n\t\t\t\t\tresponseModel['size'] = this.responseText.length * 8\n\t\t\t\t} else if (this.responseType === 'blob') {\n\t\t\t\t\tif (this.response instanceof Blob) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = await this.response.text()\n\n\t\t\t\t\t\t\tresponseModel['body'] = getBodyThatShouldBeRecorded(\n\t\t\t\t\t\t\t\tresponse,\n\t\t\t\t\t\t\t\tbodyKeysToRedact,\n\t\t\t\t\t\t\t\tbodyKeysToRecord,\n\t\t\t\t\t\t\t\tresponseModel.headers,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tresponseModel['size'] = this.response.size\n\t\t\t\t\t\t} catch {}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresponseModel['body'] = getBodyThatShouldBeRecorded(\n\t\t\t\t\t\t\tthis.response,\n\t\t\t\t\t\t\tbodyKeysToRedact,\n\t\t\t\t\t\t\tbodyKeysToRecord,\n\t\t\t\t\t\t\tresponseModel.headers,\n\t\t\t\t\t\t)\n\t\t\t\t\t} catch {}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst event: RequestResponsePair = {\n\t\t\t\trequest: requestModel,\n\t\t\t\tresponse: responseModel,\n\t\t\t\turlBlocked: !shouldRecordHeaderAndBody,\n\t\t\t}\n\n\t\t\tcallback(event)\n\t\t})\n\n\t\t/**\n\t\t * The error event happens when a network request fails. A 4xx or 5xx\n\t\t * response will not trigger this, those will still trigger a load event.\n\t\t * An error is if the request is blocked, some scenarios:\n\t\t * 1. The request is blocked by an extension\n\t\t * 2. The request is blocked by the DevTools\n\t\t * 3. The client is offline\n\t\t */\n\t\tthis.addEventListener('error', async function () {\n\t\t\tconst responseModel: Response = {\n\t\t\t\tstatus: this.status,\n\t\t\t\theaders: undefined,\n\t\t\t\tbody: undefined,\n\t\t\t}\n\n\t\t\tconst event: RequestResponsePair = {\n\t\t\t\trequest: requestModel,\n\t\t\t\tresponse: responseModel,\n\t\t\t\turlBlocked: false,\n\t\t\t}\n\n\t\t\tcallback(event)\n\t\t})\n\n\t\t// @ts-expect-error\n\t\treturn originalSend.apply(this, arguments)\n\t}\n\n\treturn () => {\n\t\tXHR.open = originalOpen\n\t\tXHR.send = originalSend\n\t\tXHR.setRequestHeader = originalSetRequestHeader\n\t}\n}\n\nconst getBodyData = (postData: any, url: string | undefined) => {\n\tif (typeof postData === 'string') {\n\t\t// TODO: This should be removed when we move recording logic from client to firstload.\n\t\t// This is only for development purposes. We don't want to send the body of pushPayload requests because it'll end up being recursive.\n\t\tif (\n\t\t\t!(\n\t\t\t\t(url?.includes('localhost') ||\n\t\t\t\t\turl?.includes('highlight.run')) &&\n\t\t\t\tpostData.includes('pushPayload')\n\t\t\t)\n\t\t) {\n\t\t\treturn postData\n\t\t}\n\t} else if (\n\t\ttypeof postData === 'object' ||\n\t\ttypeof postData === 'number' ||\n\t\ttypeof postData === 'boolean'\n\t) {\n\t\treturn stringify(postData)\n\t}\n\n\treturn null\n}\n\nconst DEFAULT_BODY_LIMIT = 64 * 1024 // KB\nconst BODY_SIZE_LIMITS = {\n\t'application/json': 64 * 1024 * 1024, // MB\n\t'text/plain': 64 * 1024 * 1024, // MB\n} as const\n\nexport const getBodyThatShouldBeRecorded = (\n\tbodyData: any,\n\tbodyKeysToRedact?: string[],\n\tbodyKeysToRecord?: string[],\n\theaders?: Headers | { [key: string]: string },\n) => {\n\tlet bodyLimit: number = DEFAULT_BODY_LIMIT\n\tif (headers) {\n\t\tlet contentType: string = ''\n\t\tif (typeof headers['get'] === 'function') {\n\t\t\tcontentType = headers.get('content-type') ?? ''\n\t\t} else {\n\t\t\tcontentType = headers['content-type'] ?? ''\n\t\t}\n\t\ttry {\n\t\t\tcontentType = contentType.split(';')[0]\n\t\t} catch {}\n\t\tbodyLimit =\n\t\t\tBODY_SIZE_LIMITS[contentType as keyof typeof BODY_SIZE_LIMITS] ??\n\t\t\tDEFAULT_BODY_LIMIT\n\t}\n\n\tif (bodyData) {\n\t\tif (bodyKeysToRedact) {\n\t\t\ttry {\n\t\t\t\tconst json = JSON.parse(bodyData)\n\n\t\t\t\tif (Array.isArray(json)) {\n\t\t\t\t\tjson.forEach((element) => {\n\t\t\t\t\t\tObject.keys(element).forEach((key) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tbodyKeysToRedact.includes(\n\t\t\t\t\t\t\t\t\tkey.toLocaleLowerCase(),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\telement[key] = '[REDACTED]'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tObject.keys(json).forEach((key) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tbodyKeysToRedact.includes(key.toLocaleLowerCase())\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tjson[key] = '[REDACTED]'\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tbodyData = JSON.stringify(json)\n\t\t\t} catch {}\n\t\t}\n\n\t\tif (bodyKeysToRecord) {\n\t\t\ttry {\n\t\t\t\tconst json = JSON.parse(bodyData)\n\n\t\t\t\tObject.keys(json).forEach((key) => {\n\t\t\t\t\tif (!bodyKeysToRecord.includes(key.toLocaleLowerCase())) {\n\t\t\t\t\t\tjson[key] = '[REDACTED]'\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tbodyData = JSON.stringify(json)\n\t\t\t} catch {}\n\t\t}\n\t}\n\n\ttry {\n\t\tbodyData = bodyData.slice(0, bodyLimit)\n\t} catch {}\n\n\treturn bodyData\n}\n", "import {\n\tHIGHLIGHT_REQUEST_HEADER,\n\tcreateNetworkRequestId,\n\tgetHighlightRequestHeader,\n\tshouldNetworkRequestBeRecorded,\n\tshouldNetworkRequestBeTraced,\n} from './utils'\nimport {\n\tRequest as HighlightRequest,\n\tResponse as HighlightResponse,\n\tRequestResponsePair,\n} from './models'\n\nimport { NetworkListenerCallback } from '../network-listener'\nimport { getBodyThatShouldBeRecorded } from './xhr-listener'\n\nexport interface HighlightFetchWindow extends WindowOrWorkerGlobalScope {\n\t_originalFetch: WindowOrWorkerGlobalScope['fetch']\n\t_highlightFetchPatch: WindowOrWorkerGlobalScope['fetch']\n\t_fetchProxy: WindowOrWorkerGlobalScope['fetch']\n}\n\ndeclare var window: HighlightFetchWindow & Window\n\nexport const FetchListener = (\n\tcallback: NetworkListenerCallback,\n\tbackendUrl: string,\n\ttracingOrigins: boolean | (string | RegExp)[],\n\turlBlocklist: string[],\n\tbodyKeysToRedact?: string[],\n\tbodyKeysToRecord?: string[],\n) => {\n\tconst originalFetch = window._fetchProxy\n\n\twindow._fetchProxy = function (input, init) {\n\t\tconst { method, url } = getFetchRequestProperties(input, init)\n\t\tif (!shouldNetworkRequestBeRecorded(url, backendUrl, tracingOrigins)) {\n\t\t\treturn originalFetch.call(this, input, init)\n\t\t}\n\n\t\tconst [sessionSecureID, requestId] = createNetworkRequestId()\n\t\tif (shouldNetworkRequestBeTraced(url, tracingOrigins)) {\n\t\t\tinit = init || {}\n\t\t\t// Pre-existing headers could be one of three different formats; this reads all of them.\n\t\t\tlet headers = new Headers(init.headers)\n\n\t\t\tif (input instanceof Request) {\n\t\t\t\t;[...input.headers].forEach(([key, value]) =>\n\t\t\t\t\theaders.set(key, value),\n\t\t\t\t)\n\t\t\t}\n\n\t\t\theaders.set(\n\t\t\t\tHIGHLIGHT_REQUEST_HEADER,\n\t\t\t\tgetHighlightRequestHeader(sessionSecureID, requestId),\n\t\t\t)\n\n\t\t\tinit.headers = Object.fromEntries(headers.entries())\n\t\t}\n\n\t\tconst request: HighlightRequest = {\n\t\t\tsessionSecureID,\n\t\t\tid: requestId,\n\t\t\theaders: {},\n\t\t\tbody: undefined,\n\t\t\turl,\n\t\t\tverb: method,\n\t\t}\n\t\tconst shouldRecordHeaderAndBody = !urlBlocklist.some((blockedUrl) =>\n\t\t\turl.toLowerCase().includes(blockedUrl),\n\t\t)\n\t\tif (shouldRecordHeaderAndBody) {\n\t\t\trequest.headers = Object.fromEntries(\n\t\t\t\tnew Headers(init?.headers).entries(),\n\t\t\t)\n\t\t\trequest.body = getBodyThatShouldBeRecorded(\n\t\t\t\tinit?.body,\n\t\t\t\tbodyKeysToRedact,\n\t\t\t\tbodyKeysToRecord,\n\t\t\t\tinit?.headers,\n\t\t\t)\n\t\t}\n\n\t\tlet responsePromise = originalFetch.call(this, input, init)\n\t\tlogRequest(\n\t\t\tresponsePromise,\n\t\t\trequest,\n\t\t\tcallback,\n\t\t\tshouldRecordHeaderAndBody,\n\t\t\tbodyKeysToRedact,\n\t\t\tbodyKeysToRecord,\n\t\t)\n\t\treturn responsePromise\n\t}\n\n\treturn () => {\n\t\twindow._fetchProxy = originalFetch\n\t}\n}\n\nexport const getFetchRequestProperties = (\n\tinput: RequestInfo | URL,\n\tinit?: RequestInit,\n) => {\n\tconst method =\n\t\t(init && init.method) ||\n\t\t(typeof input === 'object' && 'method' in input && input.method) ||\n\t\t'GET'\n\tlet url: string\n\tif (typeof input === 'object') {\n\t\tif ('url' in input && input.url) {\n\t\t\turl = input.url\n\t\t} else {\n\t\t\turl = input.toString()\n\t\t}\n\t} else {\n\t\turl = input\n\t}\n\n\treturn {\n\t\tmethod,\n\t\turl,\n\t}\n}\n\n/** Logs the Fetch request once it resolves. */\nconst logRequest = (\n\tresponsePromise: Promise<Response>,\n\trequestPayload: HighlightRequest,\n\tcallback: NetworkListenerCallback,\n\tshouldRecordHeaderAndBody: boolean,\n\tbodyKeysToRedact?: string[],\n\tbodyKeysToRecord?: string[],\n) => {\n\tconst onPromiseResolveHandler = async (response: Response | Error) => {\n\t\tlet responsePayload: HighlightResponse = {\n\t\t\tbody: undefined,\n\t\t\theaders: undefined,\n\t\t\tstatus: 0,\n\t\t\tsize: 0,\n\t\t}\n\t\tlet requestHandled = false\n\t\tlet urlBlocked = !shouldRecordHeaderAndBody\n\n\t\tif ('stack' in response || response instanceof Error) {\n\t\t\tresponsePayload = {\n\t\t\t\t...responsePayload,\n\t\t\t\tbody: response.message,\n\t\t\t\tstatus: 0,\n\t\t\t\tsize: undefined,\n\t\t\t}\n\n\t\t\trequestHandled = true\n\t\t} else if ('status' in response) {\n\t\t\tresponsePayload = {\n\t\t\t\t...responsePayload,\n\t\t\t\tstatus: response.status,\n\t\t\t}\n\n\t\t\tif (shouldRecordHeaderAndBody) {\n\t\t\t\tresponsePayload.body = await getResponseBody(\n\t\t\t\t\tresponse,\n\t\t\t\t\tbodyKeysToRecord,\n\t\t\t\t\tbodyKeysToRedact,\n\t\t\t\t)\n\t\t\t\t// response.headers must be used as an iterable via `.entries()` to get headers\n\t\t\t\tresponsePayload.headers = Object.fromEntries(\n\t\t\t\t\tresponse.headers.entries(),\n\t\t\t\t)\n\t\t\t\tresponsePayload.size = responsePayload.body.length * 8\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tresponse.type === 'opaque' ||\n\t\t\t\tresponse.type === 'opaqueredirect'\n\t\t\t) {\n\t\t\t\turlBlocked = true\n\t\t\t\tresponsePayload = {\n\t\t\t\t\t...responsePayload,\n\t\t\t\t\tbody: 'CORS blocked request',\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trequestHandled = true\n\t\t}\n\n\t\tif (requestHandled) {\n\t\t\tconst event: RequestResponsePair = {\n\t\t\t\trequest: requestPayload,\n\t\t\t\tresponse: responsePayload,\n\t\t\t\turlBlocked,\n\t\t\t}\n\n\t\t\tcallback(event)\n\t\t}\n\t}\n\t// Swallow any error thrown by responsePromise\n\tresponsePromise.then(onPromiseResolveHandler).catch(() => {})\n}\n\nexport const getResponseBody = async (\n\tresponse: Response,\n\tbodyKeysToRecord: string[] | undefined,\n\tbodyKeysToRedact: string[] | undefined,\n) => {\n\tlet text: string\n\ttry {\n\t\t/**\n\t\t * We are using the TextDecoder because it supports a larger number of use cases.\n\t\t * Using just `response.text()` sometimes causes the body to fail due to the request being aborted.\n\t\t * https://stackoverflow.com/questions/41946457/getting-text-from-fetch-response-object\n\t\t */\n\t\tconst clone = response.clone()\n\t\tconst body = clone.body\n\t\tif (body) {\n\t\t\tlet reader = body.getReader()\n\t\t\tlet utf8Decoder = new TextDecoder()\n\t\t\tlet nextChunk\n\n\t\t\tlet result = ''\n\n\t\t\twhile (!(nextChunk = await reader.read()).done) {\n\t\t\t\tlet partialData = nextChunk.value\n\t\t\t\tresult += utf8Decoder.decode(partialData)\n\t\t\t}\n\t\t\ttext = result\n\t\t\ttext = getBodyThatShouldBeRecorded(\n\t\t\t\ttext,\n\t\t\t\tbodyKeysToRedact,\n\t\t\t\tbodyKeysToRecord,\n\t\t\t\tresponse.headers,\n\t\t\t)\n\t\t} else {\n\t\t\ttext = ''\n\t\t}\n\t} catch (e) {\n\t\ttext = `Unable to clone response: ${e as string}`\n\t}\n\n\treturn text\n}\n", "import { WebSocketEvent, WebSocketRequest } from '../utils/models'\n\nexport type WebSocketRequestListenerCallback = (event: WebSocketRequest) => void\n\nexport type WebSocketEventListenerCallback = (event: WebSocketEvent) => void\n\nexport type HighlightWebSocketWindow = Window & {\n\t/**\n\t * Callback for web socket open and close events that are displayed in the network requests\n\t */\n\t_highlightWebSocketRequestCallback: WebSocketRequestListenerCallback\n\t/**\n\t * Callback for web socket message and error events that are displayed under the websocket requests\n\t */\n\t_highlightWebSocketEventCallback: WebSocketEventListenerCallback\n\tWebSocket: any\n}\n\ndeclare var window: HighlightWebSocketWindow\n\nconst WebSocketListener = (\n\trequestCallback: WebSocketRequestListenerCallback,\n\teventCallback: WebSocketEventListenerCallback,\n\turlBlocklist: string[],\n) => {\n\tconst initialHighlightWebSocketRequestCallback =\n\t\twindow._highlightWebSocketRequestCallback\n\twindow._highlightWebSocketRequestCallback = requestCallback\n\n\tconst initialHighlightWebSocketEventCallback =\n\t\twindow._highlightWebSocketEventCallback\n\twindow._highlightWebSocketEventCallback = (eventData: WebSocketEvent) => {\n\t\tconst { message, size, ...visibleEventData } = eventData\n\t\tconst blockedUrl = urlBlocklist.some((blockedUrl) =>\n\t\t\teventData.name.toLowerCase().includes(blockedUrl),\n\t\t)\n\n\t\tconst redactedEventData = blockedUrl ? visibleEventData : eventData\n\n\t\teventCallback(redactedEventData)\n\t}\n\n\treturn () => {\n\t\twindow._highlightWebSocketRequestCallback =\n\t\t\tinitialHighlightWebSocketRequestCallback\n\t\twindow._highlightWebSocketEventCallback =\n\t\t\tinitialHighlightWebSocketEventCallback\n\t}\n}\n\nexport { WebSocketListener }\n", "import { NetworkRecordingOptions } from '../../types/client'\nimport { FetchListener } from './utils/fetch-listener'\nimport { RequestResponsePair } from './utils/models'\nimport { XHRListener } from './utils/xhr-listener'\nimport {\n\tWebSocketEventListenerCallback,\n\tWebSocketListener,\n\tWebSocketRequestListenerCallback,\n} from './utils/web-socket-listener'\n\nexport type NetworkListenerCallback = (\n\trequestResponsePair: RequestResponsePair,\n) => void\n\ntype NetworkListenerArguments = {\n\txhrCallback: NetworkListenerCallback\n\tfetchCallback: NetworkListenerCallback\n\twebSocketRequestCallback: WebSocketRequestListenerCallback\n\twebSocketEventCallback: WebSocketEventListenerCallback\n\tdisableWebSocketRecording: boolean\n\tbodyKeysToRedact: string[]\n\tbackendUrl: string\n\ttracingOrigins: boolean | (string | RegExp)[]\n\turlBlocklist: string[]\n\tsessionSecureID: string\n} & Pick<NetworkRecordingOptions, 'bodyKeysToRecord'>\n\nexport const NetworkListener = ({\n\txhrCallback,\n\tfetchCallback,\n\twebSocketRequestCallback,\n\twebSocketEventCallback,\n\tdisableWebSocketRecording,\n\tbodyKeysToRedact,\n\tbackendUrl,\n\ttracingOrigins,\n\turlBlocklist,\n\tsessionSecureID,\n\tbodyKeysToRecord,\n}: NetworkListenerArguments) => {\n\tconst removeXHRListener = XHRListener(\n\t\txhrCallback,\n\t\tbackendUrl,\n\t\ttracingOrigins,\n\t\turlBlocklist,\n\t\tbodyKeysToRedact,\n\t\tbodyKeysToRecord,\n\t)\n\tconst removeFetchListener = FetchListener(\n\t\tfetchCallback,\n\t\tbackendUrl,\n\t\ttracingOrigins,\n\t\turlBlocklist,\n\t\tbodyKeysToRedact,\n\t\tbodyKeysToRecord,\n\t)\n\n\tconst removeWebSocketListener = !disableWebSocketRecording\n\t\t? WebSocketListener(\n\t\t\t\twebSocketRequestCallback,\n\t\t\t\twebSocketEventCallback,\n\t\t\t\turlBlocklist,\n\t\t  )\n\t\t: () => {}\n\n\treturn () => {\n\t\tremoveXHRListener()\n\t\tremoveFetchListener()\n\t\tremoveWebSocketListener()\n\t}\n}\n", "import { ConsoleListener } from './console-listener'\nimport { ErrorListener } from './error-listener'\n\nimport { ConsoleMessage, ErrorMessage } from '../types/shared-types'\nimport { ALL_CONSOLE_METHODS, ConsoleMethods } from '../types/client'\nimport { ERRORS_TO_IGNORE, ERROR_PATTERNS_TO_IGNORE } from '../constants/errors'\nimport { HighlightClassOptions } from '../index'\nimport stringify from 'json-stringify-safe'\nimport { DEFAULT_URL_BLOCKLIST } from './network-listener/utils/network-sanitizer'\nimport {\n\tRequestResponsePair,\n\tWebSocketEvent,\n\tWebSocketRequest,\n} from './network-listener/utils/models'\nimport { NetworkListener } from './network-listener/network-listener'\nimport {\n\tmatchPerformanceTimingsWithRequestResponsePair,\n\tshouldNetworkRequestBeRecorded,\n} from './network-listener/utils/utils'\n\n// Note: This class is used by both firstload and client. When constructed in client, it will match the current\n// codebase. When constructed in firstload, it will match the codebase at the time the npm package was published.\nexport class FirstLoadListeners {\n\tdisableConsoleRecording: boolean\n\treportConsoleErrors: boolean\n\tenablePromisePatch: boolean\n\tconsoleMethodsToRecord: ConsoleMethods[]\n\tlisteners: (() => void)[]\n\terrors: ErrorMessage[]\n\tmessages: ConsoleMessage[]\n\t// The properties below were added in 4.0.0 (Feb 2022), and are patched in by client via setupNetworkListeners()\n\toptions: HighlightClassOptions\n\thasNetworkRecording: boolean | undefined = true\n\t_backendUrl!: string\n\tdisableNetworkRecording!: boolean\n\tenableRecordingNetworkContents!: boolean\n\txhrNetworkContents!: RequestResponsePair[]\n\tfetchNetworkContents!: RequestResponsePair[]\n\tdisableRecordingWebSocketContents!: boolean\n\twebSocketNetworkContents!: WebSocketRequest[] | undefined\n\twebSocketEventContents!: WebSocketEvent[]\n\ttracingOrigins!: boolean | (string | RegExp)[]\n\tnetworkHeadersToRedact!: string[]\n\tnetworkBodyKeysToRedact: string[] | undefined\n\tnetworkBodyKeysToRecord: string[] | undefined\n\tnetworkHeaderKeysToRecord: string[] | undefined\n\tlastNetworkRequestTimestamp: number\n\turlBlocklist!: string[]\n\trequestResponseSanitizer?: (\n\t\tpair: RequestResponsePair,\n\t) => RequestResponsePair | null\n\n\tconstructor(options: HighlightClassOptions) {\n\t\tthis.options = options\n\t\tthis.disableConsoleRecording = !!options.disableConsoleRecording\n\t\tthis.reportConsoleErrors = options.reportConsoleErrors ?? false\n\t\tthis.enablePromisePatch = options.enablePromisePatch ?? true\n\t\tthis.consoleMethodsToRecord = options.consoleMethodsToRecord || [\n\t\t\t...ALL_CONSOLE_METHODS,\n\t\t]\n\t\tthis.listeners = []\n\t\tthis.errors = []\n\t\tthis.messages = []\n\t\tthis.lastNetworkRequestTimestamp = 0\n\t}\n\n\tisListening() {\n\t\treturn this.listeners.length > 0\n\t}\n\n\tstartListening() {\n\t\tif (this.isListening()) return\n\t\tconst highlightThis = this\n\t\tif (!this.disableConsoleRecording) {\n\t\t\tthis.listeners.push(\n\t\t\t\tConsoleListener(\n\t\t\t\t\t(c: ConsoleMessage) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.reportConsoleErrors &&\n\t\t\t\t\t\t\t(c.type === 'Error' || c.type === 'error') &&\n\t\t\t\t\t\t\tc.value &&\n\t\t\t\t\t\t\tc.trace\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst errorValue = stringify(c.value)\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tERRORS_TO_IGNORE.includes(errorValue) ||\n\t\t\t\t\t\t\t\tERROR_PATTERNS_TO_IGNORE.some((pattern) =>\n\t\t\t\t\t\t\t\t\terrorValue.includes(pattern),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thighlightThis.errors.push({\n\t\t\t\t\t\t\t\tevent: errorValue,\n\t\t\t\t\t\t\t\ttype: 'console.error',\n\t\t\t\t\t\t\t\turl: window.location.href,\n\t\t\t\t\t\t\t\tsource: c.trace[0]?.fileName\n\t\t\t\t\t\t\t\t\t? c.trace[0].fileName\n\t\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\tlineNumber: c.trace[0]?.lineNumber\n\t\t\t\t\t\t\t\t\t? c.trace[0].lineNumber\n\t\t\t\t\t\t\t\t\t: 0,\n\t\t\t\t\t\t\t\tcolumnNumber: c.trace[0]?.columnNumber\n\t\t\t\t\t\t\t\t\t? c.trace[0].columnNumber\n\t\t\t\t\t\t\t\t\t: 0,\n\t\t\t\t\t\t\t\tstackTrace: c.trace,\n\t\t\t\t\t\t\t\ttimestamp: new Date().toISOString(),\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\thighlightThis.messages.push(c)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlevel: this.consoleMethodsToRecord,\n\t\t\t\t\t\tlogger: 'console',\n\t\t\t\t\t\tstringifyOptions: {\n\t\t\t\t\t\t\tdepthOfLimit: 10,\n\t\t\t\t\t\t\tnumOfKeysLimit: 100,\n\t\t\t\t\t\t\tstringLengthLimit: 1000,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t)\n\t\t}\n\t\tthis.listeners.push(\n\t\t\tErrorListener(\n\t\t\t\t(e: ErrorMessage) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tERRORS_TO_IGNORE.includes(e.event) ||\n\t\t\t\t\t\tERROR_PATTERNS_TO_IGNORE.some((pattern) =>\n\t\t\t\t\t\t\te.event.includes(pattern),\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\thighlightThis.errors.push(e)\n\t\t\t\t},\n\t\t\t\t{ enablePromisePatch: this.enablePromisePatch },\n\t\t\t),\n\t\t)\n\t\tif (this.options.enableOtelTracing) {\n\t\t\timport('@highlight-run/client/src/otel').then(({ shutdown }) => {\n\t\t\t\tthis.listeners.push(shutdown)\n\t\t\t})\n\t\t}\n\t\tFirstLoadListeners.setupNetworkListener(this, this.options)\n\t}\n\n\tstopListening() {\n\t\tthis.listeners.forEach((stop: () => void) => stop())\n\t\tthis.listeners = []\n\t}\n\n\t// We define this as a static method because versions earlier than 4.0.0 (Feb 2022) don't have this code.\n\t// For those versions, calling this from client will monkey-patch the network listeners onto the old FirstLoadListener object.\n\tstatic setupNetworkListener(\n\t\tsThis: FirstLoadListeners,\n\t\toptions: HighlightClassOptions,\n\t): void {\n\t\tsThis._backendUrl =\n\t\t\toptions?.backendUrl ||\n\t\t\timport.meta.env.REACT_APP_PUBLIC_GRAPH_URI ||\n\t\t\t'https://pub.highlight.run'\n\n\t\tsThis.xhrNetworkContents = []\n\t\tsThis.fetchNetworkContents = []\n\t\tsThis.webSocketNetworkContents = []\n\t\tsThis.webSocketEventContents = []\n\t\tsThis.networkHeadersToRedact = []\n\t\tsThis.urlBlocklist = []\n\t\tsThis.tracingOrigins = options.tracingOrigins || []\n\n\t\t// Old versions of `firstload` use `disableNetworkRecording`. We fork here to ensure backwards compatibility.\n\t\tif (options?.disableNetworkRecording !== undefined) {\n\t\t\tsThis.disableNetworkRecording = options?.disableNetworkRecording\n\t\t\tsThis.enableRecordingNetworkContents = false\n\t\t\tsThis.disableRecordingWebSocketContents = true\n\t\t\tsThis.networkHeadersToRedact = []\n\t\t\tsThis.networkBodyKeysToRedact = []\n\t\t\tsThis.urlBlocklist = []\n\t\t\tsThis.networkBodyKeysToRecord = []\n\t\t\tsThis.networkBodyKeysToRecord = []\n\t\t} else if (typeof options?.networkRecording === 'boolean') {\n\t\t\tsThis.disableNetworkRecording = !options.networkRecording\n\t\t\tsThis.enableRecordingNetworkContents = false\n\t\t\tsThis.disableRecordingWebSocketContents = true\n\t\t\tsThis.networkHeadersToRedact = []\n\t\t\tsThis.networkBodyKeysToRedact = []\n\t\t\tsThis.urlBlocklist = []\n\t\t} else {\n\t\t\tif (options.networkRecording?.enabled !== undefined) {\n\t\t\t\tsThis.disableNetworkRecording =\n\t\t\t\t\t!options.networkRecording.enabled\n\t\t\t} else {\n\t\t\t\tsThis.disableNetworkRecording = false\n\t\t\t}\n\t\t\tsThis.enableRecordingNetworkContents =\n\t\t\t\toptions.networkRecording?.recordHeadersAndBody || false\n\t\t\tsThis.disableRecordingWebSocketContents =\n\t\t\t\toptions.networkRecording?.disableWebSocketEventRecordings ||\n\t\t\t\tfalse\n\t\t\tsThis.networkHeadersToRedact =\n\t\t\t\toptions.networkRecording?.networkHeadersToRedact?.map(\n\t\t\t\t\t(header) => header.toLowerCase(),\n\t\t\t\t) || []\n\t\t\tsThis.networkBodyKeysToRedact =\n\t\t\t\toptions.networkRecording?.networkBodyKeysToRedact?.map(\n\t\t\t\t\t(bodyKey) => bodyKey.toLowerCase(),\n\t\t\t\t) || []\n\t\t\tsThis.urlBlocklist =\n\t\t\t\toptions.networkRecording?.urlBlocklist?.map((url) =>\n\t\t\t\t\turl.toLowerCase(),\n\t\t\t\t) || []\n\t\t\tsThis.urlBlocklist = [\n\t\t\t\t...sThis.urlBlocklist,\n\t\t\t\t...DEFAULT_URL_BLOCKLIST,\n\t\t\t]\n\n\t\t\tsThis.requestResponseSanitizer =\n\t\t\t\toptions.networkRecording?.requestResponseSanitizer\n\n\t\t\tsThis.networkHeaderKeysToRecord =\n\t\t\t\toptions.networkRecording?.headerKeysToRecord\n\t\t\t// `headerKeysToRecord` override `networkHeadersToRedact`.\n\t\t\tif (sThis.networkHeaderKeysToRecord) {\n\t\t\t\tsThis.networkHeadersToRedact = []\n\t\t\t\tsThis.networkHeaderKeysToRecord =\n\t\t\t\t\tsThis.networkHeaderKeysToRecord.map((key) =>\n\t\t\t\t\t\tkey.toLocaleLowerCase(),\n\t\t\t\t\t)\n\t\t\t}\n\n\t\t\tsThis.networkBodyKeysToRecord =\n\t\t\t\toptions.networkRecording?.bodyKeysToRecord\n\t\t\t// `bodyKeysToRecord` override `networkBodyKeysToRedact`.\n\t\t\tif (sThis.networkBodyKeysToRecord) {\n\t\t\t\tsThis.networkBodyKeysToRedact = []\n\t\t\t\tsThis.networkBodyKeysToRecord =\n\t\t\t\t\tsThis.networkBodyKeysToRecord.map((key) =>\n\t\t\t\t\t\tkey.toLocaleLowerCase(),\n\t\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!sThis.disableNetworkRecording &&\n\t\t\tsThis.enableRecordingNetworkContents\n\t\t) {\n\t\t\tsThis.listeners.push(\n\t\t\t\tNetworkListener({\n\t\t\t\t\txhrCallback: (requestResponsePair) => {\n\t\t\t\t\t\tsThis.xhrNetworkContents.push(requestResponsePair)\n\t\t\t\t\t},\n\t\t\t\t\tfetchCallback: (requestResponsePair) => {\n\t\t\t\t\t\tsThis.fetchNetworkContents.push(requestResponsePair)\n\t\t\t\t\t},\n\t\t\t\t\twebSocketRequestCallback: (event) => {\n\t\t\t\t\t\tif (sThis.webSocketNetworkContents) {\n\t\t\t\t\t\t\tsThis.webSocketNetworkContents.push(event)\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\twebSocketEventCallback: (event) => {\n\t\t\t\t\t\tsThis.webSocketEventContents.push(event)\n\t\t\t\t\t},\n\t\t\t\t\tdisableWebSocketRecording:\n\t\t\t\t\t\tsThis.disableRecordingWebSocketContents,\n\t\t\t\t\tbodyKeysToRedact: sThis.networkBodyKeysToRedact,\n\t\t\t\t\tbackendUrl: sThis._backendUrl,\n\t\t\t\t\ttracingOrigins: sThis.tracingOrigins,\n\t\t\t\t\turlBlocklist: sThis.urlBlocklist,\n\t\t\t\t\tsessionSecureID: options.sessionSecureID,\n\t\t\t\t\tbodyKeysToRecord: sThis.networkBodyKeysToRecord,\n\t\t\t\t}),\n\t\t\t)\n\t\t}\n\t}\n\n\tstatic getRecordedNetworkResources(\n\t\tsThis: FirstLoadListeners,\n\t\trecordingStartTime: number,\n\t): Array<PerformanceResourceTiming | WebSocketRequest> {\n\t\tlet httpResources: Array<PerformanceResourceTiming> = []\n\t\tlet webSocketResources: Array<WebSocketRequest> = []\n\n\t\tif (!sThis.disableNetworkRecording) {\n\t\t\tconst documentTimeOrigin = window?.performance?.timeOrigin || 0\n\t\t\t// get all resources that don't include 'api.highlight.run'\n\t\t\thttpResources = performance.getEntriesByType(\n\t\t\t\t'resource',\n\t\t\t) as PerformanceResourceTiming[]\n\n\t\t\t// Subtract session start time from performance.timeOrigin\n\t\t\t// Subtract diff to the times to do the offsets\n\t\t\tconst offset = (recordingStartTime - documentTimeOrigin) * 2\n\n\t\t\thttpResources = httpResources\n\t\t\t\t.filter((r) => {\n\t\t\t\t\tif (r.responseEnd < sThis.lastNetworkRequestTimestamp) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\n\t\t\t\t\treturn shouldNetworkRequestBeRecorded(\n\t\t\t\t\t\tr.name,\n\t\t\t\t\t\tsThis._backendUrl,\n\t\t\t\t\t\tsThis.tracingOrigins,\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t\t.map((resource) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...resource.toJSON(),\n\t\t\t\t\t\toffsetStartTime: resource.startTime - offset,\n\t\t\t\t\t\toffsetResponseEnd: resource.responseEnd - offset,\n\t\t\t\t\t\toffsetFetchStart: resource.fetchStart - offset,\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\tsThis.lastNetworkRequestTimestamp =\n\t\t\t\thttpResources.at(-1)?.responseEnd ||\n\t\t\t\tsThis.lastNetworkRequestTimestamp\n\n\t\t\tif (sThis.enableRecordingNetworkContents) {\n\t\t\t\tconst sanitizeOptions = {\n\t\t\t\t\theadersToRedact: sThis.networkHeadersToRedact,\n\t\t\t\t\theadersToRecord: sThis.networkHeaderKeysToRecord,\n\t\t\t\t\trequestResponseSanitizer: sThis.requestResponseSanitizer,\n\t\t\t\t}\n\n\t\t\t\thttpResources = matchPerformanceTimingsWithRequestResponsePair(\n\t\t\t\t\thttpResources,\n\t\t\t\t\tsThis.xhrNetworkContents,\n\t\t\t\t\t'xmlhttprequest',\n\t\t\t\t\tsanitizeOptions,\n\t\t\t\t)\n\t\t\t\thttpResources = matchPerformanceTimingsWithRequestResponsePair(\n\t\t\t\t\thttpResources,\n\t\t\t\t\tsThis.fetchNetworkContents,\n\t\t\t\t\t'fetch',\n\t\t\t\t\tsanitizeOptions,\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\tif (!sThis.disableRecordingWebSocketContents) {\n\t\t\twebSocketResources = sThis.webSocketNetworkContents || []\n\t\t}\n\n\t\treturn [...httpResources, ...webSocketResources]\n\t}\n\n\tstatic getRecordedWebSocketEvents(\n\t\tsThis: FirstLoadListeners,\n\t): Array<WebSocketEvent> {\n\t\tlet webSocketEvents: Array<WebSocketEvent> = []\n\n\t\tif (\n\t\t\t!sThis.disableNetworkRecording &&\n\t\t\t!sThis.disableRecordingWebSocketContents\n\t\t) {\n\t\t\twebSocketEvents = sThis.webSocketEventContents\n\t\t}\n\n\t\treturn webSocketEvents\n\t}\n\n\tstatic clearRecordedNetworkResources(sThis: FirstLoadListeners): void {\n\t\tif (!sThis.disableNetworkRecording) {\n\t\t\tsThis.xhrNetworkContents = []\n\t\t\tsThis.fetchNetworkContents = []\n\t\t\tsThis.webSocketNetworkContents = []\n\t\t\tsThis.webSocketEventContents = []\n\t\t\tperformance.clearResourceTimings()\n\t\t}\n\t}\n}\n", "export const GenerateSecureID = (): string => {\n\tconst ID_LENGTH = 28\n\tconst CHARACTER_SET =\n\t\t'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n\tvar secureID = ''\n\n\tconst hasCrypto =\n\t\ttypeof window !== 'undefined' && window.crypto?.getRandomValues\n\tconst cryptoRandom = new Uint32Array(ID_LENGTH)\n\tif (hasCrypto) {\n\t\twindow.crypto.getRandomValues(cryptoRandom)\n\t}\n\n\tfor (let i = 0; i < ID_LENGTH; i++) {\n\t\tif (hasCrypto) {\n\t\t\tsecureID += CHARACTER_SET.charAt(\n\t\t\t\tcryptoRandom[i] % CHARACTER_SET.length,\n\t\t\t)\n\t\t} else {\n\t\t\tsecureID += CHARACTER_SET.charAt(\n\t\t\t\tMath.floor(Math.random() * CHARACTER_SET.length),\n\t\t\t)\n\t\t}\n\t}\n\n\treturn secureID\n}\n", "import type { HighlightPublicInterface } from '@highlight-run/client/src/types/types'\n\ninterface SegmentContext {\n\tpayload: any\n\tnext: any\n\tintegrations?: any\n}\n\nexport const HighlightSegmentMiddleware = ({\n\tnext,\n\tpayload,\n}: SegmentContext) => {\n\tif (\n\t\ttypeof window !== 'undefined' &&\n\t\ttypeof document !== 'undefined' &&\n\t\t'H' in window\n\t) {\n\t\tif (payload.obj.type === 'track') {\n\t\t\tconst trackEventName = payload.obj.event\n\t\t\tconst trackEventProperties = payload.obj.properties\n\t\t\twindow.H.track(trackEventName, trackEventProperties)\n\t\t} else if (payload.obj.type === 'identify') {\n\t\t\tconst identifier = payload.obj.userId\n\t\t\t// only send identify call if segment identify was called\n\t\t\t// with a user ID, since highlight identify requires a user ID.\n\t\t\tif (identifier?.length) {\n\t\t\t\tconst identifyMetadata = payload.obj.traits\n\t\t\t\twindow.H.identify(identifier, identifyMetadata)\n\t\t\t}\n\t\t}\n\t}\n\n\tnext(payload)\n}\n\ninterface HighlightWindow extends Window {\n\tH: HighlightPublicInterface\n}\n\ndeclare var window: HighlightWindow\n", "/*\nGiven a `BrowserWindow`, sets up event listeners for Highlight.\n */\nexport default function configureElectronHighlight(window: any) {\n\tif (window.on && window.webContents?.send) {\n\t\twindow.on('focus', () => {\n\t\t\twindow.webContents.send('highlight.run', { visible: true })\n\t\t})\n\n\t\twindow.on('blur', () => {\n\t\t\twindow.webContents.send('highlight.run', { visible: false })\n\t\t})\n\n\t\twindow.on('close', () => {\n\t\t\twindow.webContents.send('highlight.run', { visible: false })\n\t\t})\n\t}\n}\n", "export default \"9.1.2\"", "import type { HighlightFetchWindow } from '@highlight-run/client/src/listeners/network-listener/utils/fetch-listener'\nimport type { HighlightPublicInterface } from '@highlight-run/client/src/types/types'\n\ntype HighlightWindow = Window & {\n\tH: HighlightPublicInterface\n} & HighlightFetchWindow\n\ndeclare var window: HighlightWindow\n\nexport const initializeFetchListener = () => {\n\tif (typeof window !== 'undefined') {\n\t\t// avoid initializing fetch listener more than once.\n\t\tif (typeof window._highlightFetchPatch !== 'undefined') {\n\t\t\treturn\n\t\t}\n\t\twindow._originalFetch = window.fetch\n\t\twindow._fetchProxy = (\n\t\t\tinput: RequestInfo,\n\t\t\tinit: RequestInit | undefined,\n\t\t) => {\n\t\t\treturn window._originalFetch(input, init)\n\t\t}\n\n\t\twindow._highlightFetchPatch = (\n\t\t\tinput: RequestInfo,\n\t\t\tinit: RequestInit | undefined,\n\t\t) => {\n\t\t\treturn window._fetchProxy.call(window || global, input, init)\n\t\t}\n\n\t\twindow.fetch = window._highlightFetchPatch\n\t}\n}\n", "import { createNetworkRequestId } from '@highlight-run/client/src/listeners/network-listener/utils/utils'\nimport type { HighlightWebSocketWindow } from '@highlight-run/client/src/listeners/network-listener/utils/web-socket-listener'\n\ndeclare var window: HighlightWebSocketWindow\n\nconst placeholderCallback = () => null\n\nexport const initializeWebSocketListener = () => {\n\tif (typeof window !== 'undefined') {\n\t\t// avoid initializing fetch listener more than once.\n\t\tif (typeof window._highlightWebSocketRequestCallback !== 'undefined') {\n\t\t\treturn\n\t\t}\n\n\t\twindow._highlightWebSocketRequestCallback = placeholderCallback\n\t\twindow._highlightWebSocketEventCallback = placeholderCallback\n\n\t\tconst WebSocketProxy = new Proxy(window.WebSocket, {\n\t\t\tconstruct(\n\t\t\t\ttarget,\n\t\t\t\targs: [url: string, protocols?: string | string[]],\n\t\t\t) {\n\t\t\t\tconst [, socketId] = createNetworkRequestId()\n\t\t\t\tconst webSocket = new target(...args)\n\n\t\t\t\tconst openHandler = (event: Event) => {\n\t\t\t\t\twindow._highlightWebSocketRequestCallback({\n\t\t\t\t\t\tsocketId,\n\t\t\t\t\t\tinitiatorType: 'websocket',\n\t\t\t\t\t\ttype: 'open',\n\t\t\t\t\t\tname: webSocket.url,\n\t\t\t\t\t\tstartTimeAbs: performance.timeOrigin + event.timeStamp,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst closeHandler = (event: CloseEvent) => {\n\t\t\t\t\twindow._highlightWebSocketRequestCallback({\n\t\t\t\t\t\tsocketId,\n\t\t\t\t\t\tinitiatorType: 'websocket',\n\t\t\t\t\t\ttype: 'close',\n\t\t\t\t\t\tname: webSocket.url,\n\t\t\t\t\t\tresponseEndAbs:\n\t\t\t\t\t\t\tperformance.timeOrigin + event.timeStamp,\n\t\t\t\t\t})\n\n\t\t\t\t\twebSocket.removeEventListener('open', openHandler)\n\t\t\t\t\twebSocket.removeEventListener('error', errorHandler)\n\t\t\t\t\twebSocket.removeEventListener('message', messageHandler)\n\t\t\t\t\twebSocket.removeEventListener('close', closeHandler)\n\t\t\t\t}\n\n\t\t\t\tconst messageHandler = (event: MessageEvent) => {\n\t\t\t\t\tconst { data } = event\n\t\t\t\t\tconst message =\n\t\t\t\t\t\ttypeof data === 'string' ? event.data : undefined\n\n\t\t\t\t\tlet size: number\n\t\t\t\t\tif (typeof data === 'string') {\n\t\t\t\t\t\tsize = data.length\n\t\t\t\t\t} else if (data instanceof Blob) {\n\t\t\t\t\t\tsize = data.size\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsize = data.byteLength || 0\n\t\t\t\t\t}\n\n\t\t\t\t\twindow._highlightWebSocketEventCallback({\n\t\t\t\t\t\tsocketId,\n\t\t\t\t\t\ttype: 'received',\n\t\t\t\t\t\tname: webSocket.url,\n\t\t\t\t\t\ttimeStamp: performance.timeOrigin + event.timeStamp,\n\t\t\t\t\t\tsize,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst errorHandler = (event: Event) => {\n\t\t\t\t\twindow._highlightWebSocketEventCallback({\n\t\t\t\t\t\tsocketId,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tname: webSocket.url,\n\t\t\t\t\t\ttimeStamp: performance.timeOrigin + event.timeStamp,\n\t\t\t\t\t\tsize: 0,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\twebSocket.addEventListener('open', openHandler)\n\t\t\t\twebSocket.addEventListener('error', errorHandler)\n\t\t\t\twebSocket.addEventListener('message', messageHandler)\n\t\t\t\twebSocket.addEventListener('close', closeHandler)\n\n\t\t\t\tconst sendProxy = new Proxy(webSocket.send, {\n\t\t\t\t\tapply: function (\n\t\t\t\t\t\tsendTarget,\n\t\t\t\t\t\tthisArg,\n\t\t\t\t\t\targs: [data: string | Blob | ArrayBuffer],\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst data = args[0]\n\t\t\t\t\t\tconst message =\n\t\t\t\t\t\t\ttypeof data === 'string' ? data : undefined\n\n\t\t\t\t\t\tlet size: number\n\t\t\t\t\t\tif (typeof data === 'string') {\n\t\t\t\t\t\t\tsize = data.length\n\t\t\t\t\t\t} else if (data instanceof Blob) {\n\t\t\t\t\t\t\tsize = data.size\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsize = data.byteLength || 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twindow._highlightWebSocketEventCallback({\n\t\t\t\t\t\t\tsocketId,\n\t\t\t\t\t\t\ttype: 'sent',\n\t\t\t\t\t\t\tname: webSocket.url,\n\t\t\t\t\t\t\ttimeStamp:\n\t\t\t\t\t\t\t\tperformance.timeOrigin + performance.now(),\n\t\t\t\t\t\t\tsize,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tsendTarget.apply(thisArg, args)\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\twebSocket.send = sendProxy\n\n\t\t\t\treturn webSocket\n\t\t\t},\n\t\t})\n\n\t\twindow.WebSocket = WebSocketProxy\n\t}\n}\n", "import { H } from '../index'\n\nexport const listenToChromeExtensionMessage = () => {\n\t// typeof checks to see if chrome is defined. chrome is not defined outside of the context of an extension or Chromium browser.\n\tif (typeof chrome !== 'undefined' && chrome?.runtime?.onMessage) {\n\t\tchrome?.runtime?.onMessage.addListener(\n\t\t\t(message, _sender, sendResponse) => {\n\t\t\t\tconst action = message.action\n\t\t\t\tconsole.log(\n\t\t\t\t\t`[highlight] received '${action}' event from extension.`,\n\t\t\t\t)\n\t\t\t\tswitch (action) {\n\t\t\t\t\tcase 'init': {\n\t\t\t\t\t\tH.init(1, {\n\t\t\t\t\t\t\tdebug: true,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tH.getSessionURL().then((url) => {\n\t\t\t\t\t\t\tsendResponse({ url })\n\t\t\t\t\t\t})\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase 'stop': {\n\t\t\t\t\t\tH.stop()\n\t\t\t\t\t\tsendResponse({ success: true })\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t},\n\t\t)\n\t}\n}\n", "import {\n\ttype AmplitudeAPI,\n\tsetupAmplitudeIntegration,\n} from './integrations/amplitude.js'\nimport { SESSION_STORAGE_KEYS } from '@highlight-run/client/src/utils/sessionStorage/sessionStorageKeys.js'\nimport type { Highlight, HighlightClassOptions } from '@highlight-run/client'\nimport type {\n\tHighlightOptions,\n\tHighlightPublicInterface,\n\tMetadata,\n\tMetric,\n\tOnHighlightReadyOptions,\n\tSessionDetails,\n} from '@highlight-run/client/src/types/types.js'\nimport {\n\ttype MixpanelAPI,\n\tsetupMixpanelIntegration,\n} from './integrations/mixpanel.js'\n\nimport { FirstLoadListeners } from '@highlight-run/client/src/listeners/first-load-listeners.js'\nimport { GenerateSecureID } from '@highlight-run/client/src/utils/secure-id.js'\nimport { HighlightSegmentMiddleware } from './integrations/segment.js'\nimport configureElectronHighlight from './environments/electron.js'\nimport firstloadVersion from './__generated/version.js'\nimport {\n\tgetPreviousSessionData,\n\tgetSessionSecureID,\n\ttype SessionData,\n} from '@highlight-run/client/src/utils/sessionStorage/highlightSession.js'\nimport { initializeFetchListener } from './listeners/fetch'\nimport { initializeWebSocketListener } from './listeners/web-socket'\nimport { listenToChromeExtensionMessage } from './browserExtension/extensionListener.js'\nimport { setItem } from '@highlight-run/client/src/utils/storage.js'\nimport { ErrorMessageType } from '@highlight-run/client/src/types/shared-types'\nimport type { Context, Span, SpanOptions, Tracer } from '@opentelemetry/api'\n\nenum MetricCategory {\n\tDevice = 'Device',\n\tWebVital = 'WebVital',\n\tFrontend = 'Frontend',\n\tBackend = 'Backend',\n}\n\nconst HighlightWarning = (context: string, msg: any) => {\n\tconsole.warn(`highlight.run warning: (${context}): `, msg)\n}\n\ninterface HighlightWindow extends Window {\n\tHighlightIO: new (\n\t\toptions: HighlightClassOptions,\n\t\tfirstLoadListeners: FirstLoadListeners,\n\t) => Highlight\n\tH: HighlightPublicInterface\n\tmixpanel?: MixpanelAPI\n\tamplitude?: AmplitudeAPI\n\tIntercom?: any\n}\n\nconst READY_WAIT_LOOP_MS = 200\n\ndeclare var window: HighlightWindow\n\nlet onHighlightReadyQueue: {\n\toptions?: OnHighlightReadyOptions\n\tfunc: () => void | Promise<void>\n}[] = []\nlet onHighlightReadyTimeout: number | undefined = undefined\n\nlet highlight_obj: Highlight\nlet first_load_listeners: FirstLoadListeners\nlet init_called = false\ntype Callback = (span: Span) => any\nlet getTracer: () => Tracer\nconst H: HighlightPublicInterface = {\n\toptions: undefined,\n\tinit: (projectID?: string | number, options?: HighlightOptions) => {\n\t\ttry {\n\t\t\tH.options = options\n\n\t\t\t// Don't run init when called outside of the browser.\n\t\t\tif (\n\t\t\t\ttypeof window === 'undefined' ||\n\t\t\t\ttypeof document === 'undefined'\n\t\t\t) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Don't initialize if an projectID is not set.\n\t\t\tif (!projectID) {\n\t\t\t\tconsole.info(\n\t\t\t\t\t'Highlight is not initializing because projectID was passed undefined.',\n\t\t\t\t)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tlet previousSession = getPreviousSessionData()\n\t\t\tlet sessionSecureID = GenerateSecureID()\n\t\t\tif (previousSession?.sessionSecureID) {\n\t\t\t\tsessionSecureID = previousSession.sessionSecureID\n\t\t\t} else {\n\t\t\t\tconst sessionData: SessionData = {\n\t\t\t\t\t...previousSession,\n\t\t\t\t\tprojectID: +projectID,\n\t\t\t\t\tsessionSecureID,\n\t\t\t\t}\n\n\t\t\t\tsetItem(\n\t\t\t\t\tSESSION_STORAGE_KEYS.SESSION_DATA,\n\t\t\t\t\tJSON.stringify(sessionData),\n\t\t\t\t)\n\t\t\t}\n\n\t\t\t// `init` was already called, do not reinitialize\n\t\t\tif (init_called) {\n\t\t\t\treturn { sessionSecureID }\n\t\t\t}\n\t\t\tinit_called = true\n\n\t\t\tif (options?.enableOtelTracing) {\n\t\t\t\timport('@highlight-run/client/src/otel').then(\n\t\t\t\t\t({ setupBrowserTracing, getTracer: otelGetTracer }) => {\n\t\t\t\t\t\tsetupBrowserTracing({\n\t\t\t\t\t\t\tendpoint: options?.otlpEndpoint,\n\t\t\t\t\t\t\tprojectId: projectID,\n\t\t\t\t\t\t\tsessionSecureId: sessionSecureID,\n\t\t\t\t\t\t\tenvironment: options?.environment ?? 'production',\n\t\t\t\t\t\t\tnetworkRecordingOptions:\n\t\t\t\t\t\t\t\ttypeof options?.networkRecording === 'object'\n\t\t\t\t\t\t\t\t\t? options.networkRecording\n\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\ttracingOrigins: options?.tracingOrigins,\n\t\t\t\t\t\t\tserviceName:\n\t\t\t\t\t\t\t\toptions?.serviceName ?? 'highlight-browser',\n\t\t\t\t\t\t})\n\t\t\t\t\t\tgetTracer = otelGetTracer\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tinitializeFetchListener()\n\t\t\tinitializeWebSocketListener()\n\t\t\timport('@highlight-run/client').then(async ({ Highlight }) => {\n\t\t\t\thighlight_obj = new Highlight(\n\t\t\t\t\tclient_options,\n\t\t\t\t\tfirst_load_listeners,\n\t\t\t\t)\n\t\t\t\tinitializeFetchListener()\n\t\t\t\tinitializeWebSocketListener()\n\t\t\t\tif (!options?.manualStart) {\n\t\t\t\t\tawait highlight_obj.initialize()\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tconst client_options: HighlightClassOptions = {\n\t\t\t\torganizationID: projectID,\n\t\t\t\tdebug: options?.debug,\n\t\t\t\tbackendUrl: options?.backendUrl,\n\t\t\t\ttracingOrigins: options?.tracingOrigins,\n\t\t\t\tdisableNetworkRecording: options?.disableNetworkRecording,\n\t\t\t\tnetworkRecording: options?.networkRecording,\n\t\t\t\tdisableBackgroundRecording: options?.disableBackgroundRecording,\n\t\t\t\tdisableConsoleRecording: options?.disableConsoleRecording,\n\t\t\t\tdisableSessionRecording: options?.disableSessionRecording,\n\t\t\t\treportConsoleErrors: options?.reportConsoleErrors,\n\t\t\t\tconsoleMethodsToRecord: options?.consoleMethodsToRecord,\n\t\t\t\tprivacySetting: options?.privacySetting,\n\t\t\t\tenableSegmentIntegration: options?.enableSegmentIntegration,\n\t\t\t\tenableCanvasRecording: options?.enableCanvasRecording,\n\t\t\t\tenablePerformanceRecording: options?.enablePerformanceRecording,\n\t\t\t\tenablePromisePatch: options?.enablePromisePatch,\n\t\t\t\tsamplingStrategy: options?.samplingStrategy,\n\t\t\t\tinlineImages: options?.inlineImages,\n\t\t\t\tinlineStylesheet: options?.inlineStylesheet,\n\t\t\t\trecordCrossOriginIframe: options?.recordCrossOriginIframe,\n\t\t\t\tfirstloadVersion,\n\t\t\t\tenvironment: options?.environment || 'production',\n\t\t\t\tappVersion: options?.version,\n\t\t\t\tserviceName: options?.serviceName,\n\t\t\t\tsessionShortcut: options?.sessionShortcut,\n\t\t\t\tsessionSecureID: sessionSecureID,\n\t\t\t\tstorageMode: options?.storageMode,\n\t\t\t\tsendMode: options?.sendMode,\n\t\t\t}\n\t\t\tfirst_load_listeners = new FirstLoadListeners(client_options)\n\t\t\tif (!options?.manualStart) {\n\t\t\t\t// Start some of the listeners before client is loaded, then hand the\n\t\t\t\t// listeners over for client to manage\n\t\t\t\tfirst_load_listeners.startListening()\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!options?.integrations?.mixpanel?.disabled &&\n\t\t\t\toptions?.integrations?.mixpanel?.projectToken\n\t\t\t) {\n\t\t\t\tsetupMixpanelIntegration(options.integrations.mixpanel)\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!options?.integrations?.amplitude?.disabled &&\n\t\t\t\toptions?.integrations?.amplitude?.apiKey\n\t\t\t) {\n\t\t\t\tsetupAmplitudeIntegration(options.integrations.amplitude)\n\t\t\t}\n\n\t\t\treturn { sessionSecureID }\n\t\t} catch (e) {\n\t\t\tHighlightWarning('init', e)\n\t\t}\n\t},\n\tsnapshot: async (element: HTMLCanvasElement) => {\n\t\ttry {\n\t\t\tif (highlight_obj && highlight_obj.ready) {\n\t\t\t\treturn await highlight_obj.snapshot(element)\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tHighlightWarning('snapshot', e)\n\t\t}\n\t},\n\taddSessionFeedback: ({\n\t\tverbatim,\n\t\tuserName,\n\t\tuserEmail,\n\t\ttimestampOverride,\n\t}) => {\n\t\ttry {\n\t\t\tH.onHighlightReady(() =>\n\t\t\t\thighlight_obj.addSessionFeedback({\n\t\t\t\t\tverbatim,\n\t\t\t\t\ttimestamp: timestampOverride || new Date().toISOString(),\n\t\t\t\t\tuser_email: userEmail,\n\t\t\t\t\tuser_name: userName,\n\t\t\t\t}),\n\t\t\t)\n\t\t} catch (e) {\n\t\t\tHighlightWarning('error', e)\n\t\t}\n\t},\n\tconsumeError: (\n\t\terror: Error,\n\t\tmessage?: string,\n\t\tpayload?: { [key: string]: string },\n\t) => {\n\t\ttry {\n\t\t\tH.onHighlightReady(() =>\n\t\t\t\thighlight_obj.consumeCustomError(\n\t\t\t\t\terror,\n\t\t\t\t\tmessage,\n\t\t\t\t\tJSON.stringify(payload),\n\t\t\t\t),\n\t\t\t)\n\t\t} catch (e) {\n\t\t\tHighlightWarning('error', e)\n\t\t}\n\t},\n\tconsume: (\n\t\terror: Error,\n\t\topts: {\n\t\t\tmessage?: string\n\t\t\tpayload?: object\n\t\t\tsource?: string\n\t\t\ttype?: ErrorMessageType\n\t\t},\n\t) => {\n\t\ttry {\n\t\t\tH.onHighlightReady(() => highlight_obj.consumeError(error, opts))\n\t\t} catch (e) {\n\t\t\tHighlightWarning('error', e)\n\t\t}\n\t},\n\terror: (message: string, payload?: { [key: string]: string }) => {\n\t\ttry {\n\t\t\tH.onHighlightReady(() =>\n\t\t\t\thighlight_obj.pushCustomError(message, JSON.stringify(payload)),\n\t\t\t)\n\t\t} catch (e) {\n\t\t\tHighlightWarning('error', e)\n\t\t}\n\t},\n\ttrack: (event: string, metadata: Metadata = {}) => {\n\t\ttry {\n\t\t\tH.onHighlightReady(() =>\n\t\t\t\thighlight_obj.addProperties({ ...metadata, event: event }),\n\t\t\t)\n\t\t\tconst highlightUrl = highlight_obj?.getCurrentSessionURL()\n\n\t\t\tif (!H.options?.integrations?.mixpanel?.disabled) {\n\t\t\t\tif (window.mixpanel?.track) {\n\t\t\t\t\twindow.mixpanel.track(event, {\n\t\t\t\t\t\t...metadata,\n\t\t\t\t\t\thighlightSessionURL: highlightUrl,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!H.options?.integrations?.amplitude?.disabled) {\n\t\t\t\tif (window.amplitude?.getInstance) {\n\t\t\t\t\twindow.amplitude.getInstance().logEvent(event, {\n\t\t\t\t\t\t...metadata,\n\t\t\t\t\t\thighlightSessionURL: highlightUrl,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!H.options?.integrations?.intercom?.disabled) {\n\t\t\t\tif (window.Intercom) {\n\t\t\t\t\twindow.Intercom('trackEvent', event, metadata)\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tHighlightWarning('track', e)\n\t\t}\n\t},\n\tstart: (options) => {\n\t\tif (highlight_obj?.state === 'Recording' && !options?.forceNew) {\n\t\t\tif (!options?.silent) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'Highlight is already recording. Please `H.stop()` the current session before starting a new one.',\n\t\t\t\t)\n\t\t\t}\n\t\t} else {\n\t\t\tfirst_load_listeners.startListening()\n\t\t\tH.onHighlightReady(\n\t\t\t\tasync () => {\n\t\t\t\t\tawait highlight_obj.initialize(options)\n\t\t\t\t},\n\t\t\t\t{ waitForReady: false },\n\t\t\t)\n\t\t}\n\t},\n\tstop: (options) => {\n\t\tif (highlight_obj?.state !== 'Recording') {\n\t\t\tif (!options?.silent) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'Highlight is already stopped. Please call `H.start()`.',\n\t\t\t\t)\n\t\t\t}\n\t\t} else {\n\t\t\tH.onHighlightReady(() => highlight_obj.stopRecording(true))\n\t\t}\n\t},\n\tidentify: (identifier: string, metadata: Metadata = {}) => {\n\t\ttry {\n\t\t\tH.onHighlightReady(() =>\n\t\t\t\thighlight_obj.identify(identifier, metadata),\n\t\t\t)\n\t\t} catch (e) {\n\t\t\tHighlightWarning('identify', e)\n\t\t}\n\t\tif (!H.options?.integrations?.mixpanel?.disabled) {\n\t\t\tif (window.mixpanel?.identify) {\n\t\t\t\twindow.mixpanel.identify(\n\t\t\t\t\ttypeof metadata?.email === 'string'\n\t\t\t\t\t\t? metadata?.email\n\t\t\t\t\t\t: identifier,\n\t\t\t\t)\n\t\t\t\tif (metadata) {\n\t\t\t\t\twindow.mixpanel.track('identify', metadata)\n\t\t\t\t\twindow.mixpanel.people.set(metadata)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!H.options?.integrations?.amplitude?.disabled) {\n\t\t\tif (window.amplitude?.getInstance) {\n\t\t\t\twindow.amplitude.getInstance().setUserId(identifier)\n\n\t\t\t\tif (Object.keys(metadata).length > 0) {\n\t\t\t\t\tconst amplitudeUserProperties = Object.keys(\n\t\t\t\t\t\tmetadata,\n\t\t\t\t\t).reduce((acc, key) => {\n\t\t\t\t\t\tacc.set(key, metadata[key])\n\n\t\t\t\t\t\treturn acc\n\t\t\t\t\t}, new window.amplitude.Identify())\n\n\t\t\t\t\twindow.amplitude\n\t\t\t\t\t\t.getInstance()\n\t\t\t\t\t\t.identify(amplitudeUserProperties)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tmetrics: (metrics: Metric[]) => {\n\t\ttry {\n\t\t\tH.onHighlightReady(() =>\n\t\t\t\thighlight_obj.recordMetric(\n\t\t\t\t\tmetrics.map((m) => ({\n\t\t\t\t\t\t...m,\n\t\t\t\t\t\tcategory: MetricCategory.Frontend,\n\t\t\t\t\t})),\n\t\t\t\t),\n\t\t\t)\n\t\t} catch (e) {\n\t\t\tHighlightWarning('metrics', e)\n\t\t}\n\t},\n\tstartSpan: (\n\t\tname: string,\n\t\toptions: SpanOptions | ((span: Span) => any),\n\t\tcontext?: Context | ((span: Span) => any),\n\t\tfn?: (span?: Span) => any,\n\t): any => {\n\t\tconst tracer = typeof getTracer === 'function' ? getTracer() : undefined\n\t\tif (!tracer) {\n\t\t\tif (typeof fn === 'function') {\n\t\t\t\treturn fn()\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tconst wrapCallback = async (\n\t\t\tspan: Span,\n\t\t\tcallback: (span: Span) => any,\n\t\t) => {\n\t\t\ttry {\n\t\t\t\tconst result = await callback(span)\n\t\t\t\treturn result\n\t\t\t} finally {\n\t\t\t\tspan.end()\n\t\t\t}\n\t\t}\n\n\t\tif (fn === undefined && context === undefined) {\n\t\t\treturn tracer.startActiveSpan(name, (span) =>\n\t\t\t\twrapCallback(span, options as Callback),\n\t\t\t)\n\t\t} else if (fn === undefined) {\n\t\t\treturn tracer.startActiveSpan(\n\t\t\t\tname,\n\t\t\t\toptions as SpanOptions,\n\t\t\t\t(span) => wrapCallback(span, context as Callback),\n\t\t\t)\n\t\t} else {\n\t\t\treturn tracer.startActiveSpan(\n\t\t\t\tname,\n\t\t\t\toptions as SpanOptions,\n\t\t\t\tcontext as Context,\n\t\t\t\t(span) => wrapCallback(span, fn),\n\t\t\t)\n\t\t}\n\t},\n\tstartManualSpan: (\n\t\tname: string,\n\t\toptions: SpanOptions | ((span: Span) => any),\n\t\tcontext?: Context | ((span: Span) => any),\n\t\tfn?: (span: Span) => any,\n\t): any => {\n\t\tif (typeof getTracer !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\tconst tracer = getTracer()\n\n\t\tif (fn === undefined && context === undefined) {\n\t\t\treturn tracer.startActiveSpan(name, options as Callback)\n\t\t} else if (fn === undefined) {\n\t\t\treturn tracer.startActiveSpan(\n\t\t\t\tname,\n\t\t\t\toptions as SpanOptions,\n\t\t\t\tcontext as Callback,\n\t\t\t)\n\t\t} else {\n\t\t\treturn tracer.startActiveSpan(\n\t\t\t\tname,\n\t\t\t\toptions as SpanOptions,\n\t\t\t\tcontext as Context,\n\t\t\t\tfn,\n\t\t\t)\n\t\t}\n\t},\n\tgetSessionURL: () => {\n\t\treturn new Promise<string>((resolve, reject) => {\n\t\t\tconst res = getSessionSecureID()\n\t\t\tif (res) {\n\t\t\t\tresolve(res)\n\t\t\t} else {\n\t\t\t\treject(new Error('Unable to get session URL'))\n\t\t\t}\n\t\t})\n\t},\n\tgetSessionDetails: () => {\n\t\treturn new Promise<SessionDetails>((resolve, reject) => {\n\t\t\tH.onHighlightReady(() => {\n\t\t\t\tconst baseUrl = highlight_obj.getCurrentSessionURL()\n\t\t\t\tif (baseUrl) {\n\t\t\t\t\tconst currentSessionTimestamp =\n\t\t\t\t\t\thighlight_obj.getCurrentSessionTimestamp()\n\t\t\t\t\tconst now = new Date().getTime()\n\t\t\t\t\tconst url = new URL(baseUrl)\n\t\t\t\t\tconst urlWithTimestamp = new URL(baseUrl)\n\t\t\t\t\turlWithTimestamp.searchParams.set(\n\t\t\t\t\t\t'ts',\n\t\t\t\t\t\t// The delta between when the session recording started and now.\n\t\t\t\t\t\t((now - currentSessionTimestamp) / 1000).toString(),\n\t\t\t\t\t)\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\turl: url.toString(),\n\t\t\t\t\t\turlWithTimestamp: urlWithTimestamp.toString(),\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\treject(new Error('Could not get session URL'))\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t},\n\tgetRecordingState: () => {\n\t\treturn highlight_obj?.state ?? 'NotRecording'\n\t},\n\tonHighlightReady: (func, options) => {\n\t\tonHighlightReadyQueue.push({ options, func })\n\t\tif (onHighlightReadyTimeout === undefined) {\n\t\t\tconst fn = () => {\n\t\t\t\tconst newOnHighlightReadyQueue: {\n\t\t\t\t\toptions?: OnHighlightReadyOptions\n\t\t\t\t\tfunc: () => void | Promise<void>\n\t\t\t\t}[] = []\n\t\t\t\tfor (const f of onHighlightReadyQueue) {\n\t\t\t\t\tif (\n\t\t\t\t\t\thighlight_obj &&\n\t\t\t\t\t\t(f.options?.waitForReady === false ||\n\t\t\t\t\t\t\thighlight_obj.ready)\n\t\t\t\t\t) {\n\t\t\t\t\t\tf.func()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewOnHighlightReadyQueue.push(f)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tonHighlightReadyQueue = newOnHighlightReadyQueue\n\t\t\t\tonHighlightReadyTimeout = undefined\n\t\t\t\tif (onHighlightReadyQueue.length > 0) {\n\t\t\t\t\tonHighlightReadyTimeout = setTimeout(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\tREADY_WAIT_LOOP_MS,\n\t\t\t\t\t) as unknown as number\n\t\t\t\t}\n\t\t\t}\n\t\t\tfn()\n\t\t}\n\t},\n}\n\nif (typeof window !== 'undefined') {\n\twindow.H = H\n}\n\nlistenToChromeExtensionMessage()\ninitializeFetchListener()\ninitializeWebSocketListener()\n\nexport type { HighlightOptions }\nexport {\n\tH,\n\tHighlightSegmentMiddleware,\n\tMetricCategory,\n\tconfigureElectronHighlight,\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUO,IAAMA,KAAyC,CAAC,EACtD,QAAAC,EAAAA,MACiC;AAC/B,GAAA,SAAU,GAAGC,GAAC;AACX,QAAAC,IAAI,EAAE,aAAa,EAAE,IAAI,CAAA,GAAI,KAAK,CAAA,EAAA,GAClCC,IAAIF,EAAE,cAAc,QAAQ;AAChCE,MAAE,OAAO,mBACTA,EAAE,YACD,2EACDA,EAAE,cAAc,aAChBA,EAAE,QAAQ,MACVA,EAAE,MAAM,6DACRA,EAAE,SAAS,WAAA;AACL,QAAE,UAAU,sBAChB,QAAQ,IAAI,uCAAuC,GAE1C,UAAA,YAAA,EAAc,KAAKH,CAAM;IAAA;AAEpC,QAAII,IAAIH,EAAE,qBAAqB,QAAQ,EAAE,CAAC;AACxCG,MAAA,WAAW,aAAaD,GAAGC,CAAC;AACrB,aAAAC,EAAEC,GAAGL,GAAC;AACdK,QAAE,UAAUL,CAAC,IAAI,WAAA;AAChB,eAAA,KAAK,GAAG,KACP,CAACA,CAAC,EAAE,OAAO,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,GAE9C;MAAA;IAET;AAiBA,aAhBIM,IAAI,WAAA;AACP,aAAA,KAAK,KAAK,CAAA,GACH;IAAA,GAEJC,IAAI;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,GAEQ,IAAI,GAAG,IAAIA,EAAE,QAAQ;AAC3BH,QAAAE,GAAGC,EAAE,CAAC,CAAC;AAEVN,MAAE,WAAWK;AAYb,aAXIE,IAAI,WAAA;AACP,aAAA,KAAK,KAAK,CAAA,GACH;IAAA,GAEJC,IAAI;MACP;MACA;MACA;MACA;MACA;IAAA,GAEQC,IAAI,GAAGA,IAAID,EAAE,QAAQC;AAC3BN,QAAAI,GAAGC,EAAEC,CAAC,CAAC;AAEVT,MAAE,UAAUO;AACZ,QAAIG,IAAI;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA;AAED,aAASC,EAAEP,GAAC;AACX,eAASL,EAAEA,GAAC;AACXK,UAAEL,CAAC,IAAI,WAAA;AACNK,YAAE,GAAG,KACJ,CAACL,CAAC,EAAE,OAAO,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;QAAA;MAGvD;AACA,eAASC,IAAI,GAAGA,IAAIU,EAAE,QAAQV;AAC7BD,UAAEW,EAAEV,CAAC,CAAC;IAER;AACAW,MAAEX,CAAC,GACDA,EAAA,cAAc,SAAUI,GAAC;AAC1BA,aAAAA,KAAK,CAACA,KAAKA,EAAE,WAAW,IAAI,sBAAsBA,GAAG,YAAA,GAChD,OAAO,UAAU,eAAe,KAAKJ,EAAE,KAAKI,CAAC,MACjDJ,EAAE,IAAII,CAAC,IAAI,EAAE,IAAI,CAAE,EAAA,GACjBO,EAAAX,EAAE,IAAII,CAAC,CAAC,IAEJJ,EAAE,IAAII,CAAC;IAAA,GAEf,EAAE,YAAYJ;EAAA,GACZ,QAAQ,QAAQ;AACpB;ACxHY,IAAAY;CAAZ,SAAYA,GAAoB;AAC/BA,IAAA,uBAAA,+BACAA,EAAA,6BAAA,wCACAA,EAAA,eAAA,eACAA,EAAA,oBAAA,mBACAA,EAAA,kBAAA,uBACAA,EAAA,cAAA,uBACAA,EAAA,aAAA;AACD,GARYA,MAAAA,IAQX,CAAA,EAAA;ACEM,IAAMC,KAAwC,CAAC,EACrD,cAAAC,EAAAA,MACgC;AAChC,MAAI,OAAO;AACV;AAGC,GAAA,SAAUC,GAAGC,GAAC;AACX,QAAA,CAACA,EAAE,MAAM;AACZ,UAAId,GAAGe;AACP,aAAO,WAAWD,GAClBA,EAAE,KAAK,CAAA,GACPA,EAAE,OAAO,SAAUZ,GAAGW,GAAGG,GAAC;AAChB,iBAAAC,EAAEb,GAAGI,GAAC;AACVM,cAAAA,IAAIN,EAAE,MAAM,GAAG;AACdM,YAAE,UAAFA,MAAcV,IAAIA,EAAEU,EAAE,CAAC,CAAC,GAAKN,IAAIM,EAAE,CAAC,IACzCV,EAAEI,CAAC,IAAI,WAAA;AACNJ,cAAE,KACD,CAACI,CAAC,EAAE,OACH,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC,CAAC,CACxC;UAAA;QAGJ;AACA,YAAIJ,IAAIU;AAgBR,aAfgB,OAAOE,KAAP,cAAYZ,IAAIU,EAAEE,CAAC,IAAI,CAAA,IAAOA,IAAI,YAChDZ,EAAA,SAASA,EAAE,UAAU,CAAA,GACrBA,EAAA,WAAW,SAAUA,GAAC;AACvB,cAAII,IAAI;AACO,iBAAAQ,MAAA,eAAMR,KAAK,MAAMQ,IAChCZ,MAAMI,KAAK,YACJA;QAAA,GAENJ,EAAA,OAAO,WAAW,WAAA;AACZ,iBAAAA,EAAE,SAAS,CAAC,IAAI;QAAA,GAGvBJ,IAAA,0dAA0d,MACzd,GAAG,GAEAe,IAAI,GAAGA,IAAIf,EAAE,QAAQe;AAAOE,YAAAb,GAAGJ,EAAEe,CAAC,CAAC;AACpC,YAAAG,IAAI,yCAAyC,MAAM,GAAG;AAC1Dd,UAAE,YAAY,WAAA;AACb,mBAASU,EAAEE,GAAC;AACTA,cAAAA,CAAC,IAAI,WAAA;AACO,2BAAA,WACL,QAAA,CAACA,CAAC,EAAE,OACX,MAAM,UAAU,MAAM,KAAK,YAAY,CAAC,CAAC,GAE1CZ,EAAE,KAAK,CAACF,GAAG,KAAK,CAAC;YAAA;UAEnB;AAEK,mBAAAM,IAAI,CAAA,GACPN,IAAI,CAAC,WAAW,EAAE,OACjB,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC,CAAC,GAEzCc,IAAI,GACLA,IAAIE,EAAE,QACNF;AAEAF,cAAEI,EAAEF,CAAC,CAAC;AACA,iBAAAR;QAAA,GAERM,EAAE,GAAG,KAAK,CAACZ,GAAGW,GAAGG,CAAC,CAAC;MAAA,GAEpBF,EAAE,OAAO;IACV;EACE,GAAA,UAAU,OAAO,YAAY,CAAE,CAAA;AAC5B,QAAAK,IAAS,SAAS,cAAc,QAAQ;AAC9CA,IAAO,MAAMC,IACJ,SAAA,KAAK,YAAYD,CAAM,GAEzBA,EAAA,iBAAiB,QAAQ,MAAK;AFzE/B,QAAAE;AE0EE,KAAAA,IAAA,OAAA,aAAA,QAAAA,EAAU,KAAKT,CAAAA;EAAY,CAClC;AACF;AA5EO,IA8EDQ,KAAiB;ACtFP,SAAAE,GAEfC,GACAC,GAEAC,GAAoC;AAEhC,MAAA;AACC,QAAA,EAAED,KAAQD;AACb,aAAO,MAAO;MAAA;AAGT,UAAAG,IAAWH,EAAOC,CAAI,GACtBG,IAAUF,EAAYC,CAAQ;AAKhC,WAAA,OAAOC,KAAY,eACdA,EAAA,YAAYA,EAAQ,aAAa,CAAA,GACzC,OAAO,iBAAiBA,GAAS;MAChC,oBAAoB;QACnB,YAAY;QACZ,OAAOD;MACP;IAAA,CACD,IAGFH,EAAOC,CAAI,IAAIG,GAER,MAAK;AACXJ,QAAOC,CAAI,IAAIE;IAAA;EAChB,SACOxB,GAAA;AACP,WAAO,MAAO;IAAA;EACf;AACD;AAMA,SAAS0B,GAAeC,GAAiB;AACxC,MAAI,CAACA,KAAQ,CAACA,EAAK;AACX,WAAA;AAGR,MAAIC,IAAO;AACX,SAAOD,EAAK,iBAAe;AAC1B,QAAIL,IAAOK,EAAK;AAChB,QAAI,CAACL;AACJ;AAEDA,QAAOA,EAAK,YAAA;AACZ,QAAIO,IAASF,EAAK,eAEdG,IAAc,CAAA;AAElB,QAAID,EAAO,YAAYA,EAAO,SAAS,SAAS;AAE/C,eAAS/B,IAAI,GAAGA,IAAI+B,EAAO,SAAS,QAAQ/B,KAAK;AAC5C,YAAAiC,IAAUF,EAAO,SAAS/B,CAAC;AAC3BiC,UAAQ,aAAaA,EAAQ,UAAU,eACtCA,EAAQ,UAAU,YAAa,MAAKT,KACvCQ,EAAY,KAAKC,CAAO;MAG3B;AAGGD,MAAY,SAAS,MACxBR,KAAQ,SAASQ,EAAY,QAAQH,CAAI,IAAI,MAEvCC,IAAAN,KAAQM,IAAO,MAAMA,IAAO,KAC5BD,IAAAE;EACR;AAEO,SAAAD;AACR;AAKA,SAASI,EAASC,GAAQ;AACzB,SAAO,OAAO,UAAU,SAAS,KAAKA,CAAG,MAAM;AAChD;AAKA,SAASC,GAAaD,GAAUE,GAAa;AAC5C,MAAIA,MAAU;AACN,WAAA;AAGF,QAAAC,IAAO,OAAO,KAAKH,CAAG;AAC5B,aAAWI,KAAOD;AACb,QAAAJ,EAASC,EAAII,CAAG,CAAC,KAAKH,GAAaD,EAAII,CAAG,GAAGF,IAAQ,CAAC;AAClD,aAAA;AAIF,SAAA;AACR;AAMgB,SAAAG,EACfL,GACAM,GAAmC;AAEnC,QAAMC,IAA4B;IACjC,gBAAgB;IAChB,cAAc;EAAA;AAER,SAAA,OAAOA,GAASD,CAAgB;AACvC,QAAME,IAAe,CAAA,GACfL,IAAc,CAAA;AACpB,SAAO,KAAK,UAAUH,GAAK,SAAUI,GAAKK,GAAK;AAK1C,QAAAD,EAAM,SAAS,GAAG;AACf,YAAAE,IAAUF,EAAM,QAAQ,IAAI;AACjC,OAAAE,IAAUF,EAAM,OAAOE,IAAU,CAAC,IAAIF,EAAM,KAAK,IAAI,GACrD,CAAAE,IAAUP,EAAK,OAAOO,GAAS,IAAA,GAAUN,CAAG,IAAID,EAAK,KAAKC,CAAG,GAC1D,CAACI,EAAM,QAAQC,CAAK,MACnBD,EAAM,CAAC,MAAMC,IACRA,IAAA,iBAGPA,IAAA,iBACAN,EAAK,MAAM,GAAGK,EAAM,QAAQC,CAAK,CAAC,EAAE,KAAK,GAAG,IAC5C;IAEH;AAEAD,QAAM,KAAKC,CAAK;AAIb,QAAAA,KAAU;AACN,aAAAA;AAEJ,QAAAE,EAAaF,CAAK;AACrB,aAAOG,EAASH,CAAK;AAEtB,QAAIA,aAAiB,OAAO;AAC3B,YAAMI,IAAmB,CAAA;AACzB,iBAAWC,KAAYL,GAAO;AACvB,cAAAM,IAAcN,EAAcK,CAAQ;AACtC,cAAM,QAAQC,CAAU,IACfF,EAAAC,CAAQ,IAAIrB,GACvBsB,EAAW,SAASA,EAAW,CAAC,IAAI,IAAI,IAGzCF,EAAYC,CAAQ,IAAIC;MAE1B;AACO,aAAAF;IAAA,OACR;AAAA,UAAWJ,aAAiB;AAC3B,eAAIA,aAAiB,cACbA,IAAQA,EAAM,YAAY,KAE3BA,EAAM;AACd,UAAWA,aAAiB;AACpB,eAAAA,EAAM,OAAO,OAAOA,EAAM;IAAA;AAE3B,WAAAA;EAAA,CACP;AAKD,WAASE,EAAaK,GAAY;AAU7B,WAPHjB,EAASiB,CAAI,KACb,OAAO,KAAKA,CAAI,EAAE,SAAST,EAAQ,kBAMhC,OAAOS,KAAS,aACZ,OAMJA,aAAgB,SAASA,EAAK,cAAc,QAC7B,OAAO,KAAKA,CAAI,EAEjB,WAAW,IAQzB,CAAA,EAAAjB,EAASiB,CAAI,KAAKf,GAAae,GAAMT,EAAQ,YAAY;EAK9D;AAKA,WAASK,EAASI,GAAY;AACzB,QAAAC,IAAMD,EAAK,SAAA;AACf,WACCT,EAAQ,qBACRU,EAAI,SAASV,EAAQ,sBAErBU,IAAM,GAAGA,EAAI,MAAM,GAAGV,EAAQ,iBAAiB,CAAC,QAE1CU;EACR;AACD;;;;;;;;;;ACnOA,KAAC,SAASC,GAAMC,GAAS;AAQjBC,QAAA,UAAiBD,EAAAA;IAIxB,GAACE,IAAM,WAAW;AAEf,eAASC,EAAU3D,GAAG;AAClB,eAAO,CAAC,MAAM,WAAWA,CAAC,CAAC,KAAK,SAASA,CAAC;MAC7C;AAED,eAAS4D,EAAYN,GAAK;AACtB,eAAOA,EAAI,OAAO,CAAC,EAAE,YAAW,IAAKA,EAAI,UAAU,CAAC;MACvD;AAED,eAASO,EAAQpD,GAAG;AAChB,eAAO,WAAW;AACd,iBAAO,KAAKA,CAAC;QACzB;MACK;AAED,UAAIqD,IAAe,CAAC,iBAAiB,UAAU,YAAY,YAAY,GACnEC,IAAe,CAAC,gBAAgB,YAAY,GAC5CC,IAAc,CAAC,YAAY,gBAAgB,QAAQ,GACnDC,IAAa,CAAC,MAAM,GACpBC,IAAc,CAAC,YAAY,GAE3BC,IAAQL,EAAa,OAAOC,GAAcC,GAAaC,GAAYC,CAAW;AAElF,eAASE,EAAW/B,GAAK;AACrB,YAAKA;AACL,mBAASnC,IAAI,GAAGA,IAAIiE,EAAM,QAAQjE;AAC1BmC,cAAI8B,EAAMjE,CAAC,CAAC,MAAM,UAClB,KAAK,QAAQ0D,EAAYO,EAAMjE,CAAC,CAAC,CAAC,EAAEmC,EAAI8B,EAAMjE,CAAC,CAAC,CAAC;MAG5D;AAEDkE,QAAW,YAAY;QACnB,SAAS,WAAW;AAChB,iBAAO,KAAK;QACf;QACD,SAAS,SAASzD,GAAG;AACjB,cAAI,OAAO,UAAU,SAAS,KAAKA,CAAC,MAAM;AACtC,kBAAM,IAAI,UAAU,uBAAuB;AAE/C,eAAK,OAAOA;QACf;QAED,eAAe,WAAW;AACtB,iBAAO,KAAK;QACf;QACD,eAAe,SAASA,GAAG;AACvB,cAAIA,aAAayD;AACb,iBAAK,aAAazD;mBACXA,aAAa;AACpB,iBAAK,aAAa,IAAIyD,EAAWzD,CAAC;;AAElC,kBAAM,IAAI,UAAU,6CAA6C;QAExE;QAED,UAAU,WAAW;AACjB,cAAI0D,IAAW,KAAK,YAAW,KAAM,IACjCC,IAAa,KAAK,cAAa,KAAM,IACrCC,IAAe,KAAK,gBAAe,KAAM,IACzCC,IAAe,KAAK,gBAAe,KAAM;AAC7C,iBAAI,KAAK,UAAA,IACDH,IACO,aAAaA,IAAW,MAAMC,IAAa,MAAMC,IAAe,MAEpE,YAAYD,IAAa,MAAMC,IAEtCC,IACOA,IAAe,OAAOH,IAAW,MAAMC,IAAa,MAAMC,IAAe,MAE7EF,IAAW,MAAMC,IAAa,MAAMC;QAC9C;MACT,GAEIH,EAAW,aAAa,SAAgCd,GAAK;AACzD,YAAImB,IAAiBnB,EAAI,QAAQ,GAAG,GAChCoB,IAAepB,EAAI,YAAY,GAAG,GAElCkB,IAAelB,EAAI,UAAU,GAAGmB,CAAc,GAC9CE,IAAOrB,EAAI,UAAUmB,IAAiB,GAAGC,CAAY,EAAE,MAAM,GAAG,GAChEE,IAAiBtB,EAAI,UAAUoB,IAAe,CAAC;AAEnD,YAAIE,EAAe,QAAQ,GAAG,MAAM;AAChC,cAAIC,IAAQ,gCAAgC,KAAKD,GAAgB,EAAE,GAC/DP,KAAWQ,EAAM,CAAC,GAClBP,KAAaO,EAAM,CAAC,GACpBN,KAAeM,EAAM,CAAC;AAG9B,eAAO,IAAIT,EAAW;UAClB,cAAcI;UACd,MAAMG,KAAQ;UACd,UAAUN;UACV,YAAYC,MAAc;UAC1B,cAAcC,MAAgB;QAC1C,CAAS;MACT;AAEI,eAASrE,IAAI,GAAGA,IAAI4D,EAAa,QAAQ5D;AACrCkE,UAAW,UAAU,QAAQR,EAAYE,EAAa5D,CAAC,CAAC,CAAC,IAAI2D,EAAQC,EAAa5D,CAAC,CAAC,GACpFkE,EAAW,UAAU,QAAQR,EAAYE,EAAa5D,CAAC,CAAC,CAAC,IAAK,yBAASO,GAAG;AACtE,iBAAO,SAASE,GAAG;AACf,iBAAKF,CAAC,IAAI,CAAA,CAAQE;UAClC;QACA,EAAWmD,EAAa5D,CAAC,CAAC;AAGtB,eAASkB,IAAI,GAAGA,IAAI2C,EAAa,QAAQ3C;AACrCgD,UAAW,UAAU,QAAQR,EAAYG,EAAa3C,CAAC,CAAC,CAAC,IAAIyC,EAAQE,EAAa3C,CAAC,CAAC,GACpFgD,EAAW,UAAU,QAAQR,EAAYG,EAAa3C,CAAC,CAAC,CAAC,IAAK,yBAASX,GAAG;AACtE,iBAAO,SAASE,GAAG;AACf,gBAAI,CAACgD,EAAUhD,CAAC;AACZ,oBAAM,IAAI,UAAUF,IAAI,mBAAmB;AAE/C,iBAAKA,CAAC,IAAI,OAAOE,CAAC;UAClC;QACA,EAAWoD,EAAa3C,CAAC,CAAC;AAGtB,eAAS0D,IAAI,GAAGA,IAAId,EAAY,QAAQc;AACpCV,UAAW,UAAU,QAAQR,EAAYI,EAAYc,CAAC,CAAC,CAAC,IAAIjB,EAAQG,EAAYc,CAAC,CAAC,GAClFV,EAAW,UAAU,QAAQR,EAAYI,EAAYc,CAAC,CAAC,CAAC,IAAK,yBAASrE,GAAG;AACrE,iBAAO,SAASE,GAAG;AACf,iBAAKF,CAAC,IAAI,OAAOE,CAAC;UAClC;QACA,EAAWqD,EAAYc,CAAC,CAAC;AAGrB,aAAOV;IACX,CAAC;EAAA,EAAA,CAAA,IAAA,EAAA;;;AC9ID,GAAC,SAASb,GAAMC,GAAS;AAQjBC,MAAiB,UAAAD,EAAQuB,GAAqB,CAAA;EAItD,GAAErB,IAAM,SAA0BU,GAAY;AAG1C,QAAIY,IAA8B,gBAC9BC,IAAyB,kCACzBC,IAA4B;AAEhC,WAAO;;;;;;;MAOH,OAAO,SAAiCC,GAAO;AAC3C,YAAI,OAAOA,EAAM,cAAe,eAAe,OAAOA,EAAM,iBAAiB,KAAM;AAC/E,iBAAO,KAAK,WAAWA,CAAK;AACzB,YAAIA,EAAM,SAASA,EAAM,MAAM,MAAMF,CAAsB;AAC9D,iBAAO,KAAK,YAAYE,CAAK;AAC1B,YAAIA,EAAM;AACb,iBAAO,KAAK,gBAAgBA,CAAK;AAEjC,cAAM,IAAI,MAAM,iCAAiC;MAExD;;MAGD,iBAAiB,SAA2CC,GAAS;AAEjE,YAAIA,EAAQ,QAAQ,GAAG,MAAM;AACzB,iBAAO,CAACA,CAAO;AAGnB,YAAIC,IAAS,gCACTR,IAAQQ,EAAO,KAAKD,EAAQ,QAAQ,SAAS,EAAE,CAAC;AACpD,eAAO,CAACP,EAAM,CAAC,GAAGA,EAAM,CAAC,KAAK,QAAWA,EAAM,CAAC,KAAK,MAAS;MACjE;MAED,aAAa,SAAuCM,GAAO;AACvD,YAAIG,IAAWH,EAAM,MAAM,MAAM;CAAI,EAAE,OAAO,SAASI,GAAM;AACzD,iBAAO,CAAC,CAACA,EAAK,MAAMN,CAAsB;QAC7C,GAAE,IAAI;AAEP,eAAOK,EAAS,IAAI,SAASC,GAAM;AAC3BA,YAAK,QAAQ,QAAQ,IAAI,OAEzBA,IAAOA,EAAK,QAAQ,cAAc,MAAM,EAAE,QAAQ,gCAAgC,EAAE;AAExF,cAAIC,IAAgBD,EAAK,QAAQ,QAAQ,EAAE,EAAE,QAAQ,gBAAgB,GAAG,GAIpEE,IAAWD,EAAc,MAAM,0BAA0B;AAG7DA,cAAgBC,IAAWD,EAAc,QAAQC,EAAS,CAAC,GAAG,EAAE,IAAID;AAEpE,cAAIE,IAASF,EAAc,MAAM,KAAK,EAAE,MAAM,CAAC,GAE3CG,IAAgB,KAAK,gBAAgBF,IAAWA,EAAS,CAAC,IAAIC,EAAO,IAAG,CAAE,GAC1ElB,IAAekB,EAAO,KAAK,GAAG,KAAK,QACnCrB,IAAW,CAAC,QAAQ,aAAa,EAAE,QAAQsB,EAAc,CAAC,CAAC,IAAI,KAAK,SAAYA,EAAc,CAAC;AAEnG,iBAAO,IAAIvB,EAAW;YAClB,cAAcI;YACd,UAAUH;YACV,YAAYsB,EAAc,CAAC;YAC3B,cAAcA,EAAc,CAAC;YAC7B,QAAQJ;UAC5B,CAAiB;QACJ,GAAE,IAAI;MACV;MAED,iBAAiB,SAA2CJ,GAAO;AAC/D,YAAIG,IAAWH,EAAM,MAAM,MAAM;CAAI,EAAE,OAAO,SAASI,GAAM;AACzD,iBAAO,CAACA,EAAK,MAAML,CAAyB;QAC/C,GAAE,IAAI;AAEP,eAAOI,EAAS,IAAI,SAASC,GAAM;AAM/B,cAJIA,EAAK,QAAQ,SAAS,IAAI,OAC1BA,IAAOA,EAAK,QAAQ,oDAAoD,KAAK,IAG7EA,EAAK,QAAQ,GAAG,MAAM,MAAMA,EAAK,QAAQ,GAAG,MAAM;AAElD,mBAAO,IAAInB,EAAW;cAClB,cAAcmB;YACtC,CAAqB;AAED,cAAIK,IAAoB,8BACpBC,IAAUN,EAAK,MAAMK,CAAiB,GACtCpB,IAAeqB,KAAWA,EAAQ,CAAC,IAAIA,EAAQ,CAAC,IAAI,QACpDF,IAAgB,KAAK,gBAAgBJ,EAAK,QAAQK,GAAmB,EAAE,CAAC;AAE5E,iBAAO,IAAIxB,EAAW;YAClB,cAAcI;YACd,UAAUmB,EAAc,CAAC;YACzB,YAAYA,EAAc,CAAC;YAC3B,cAAcA,EAAc,CAAC;YAC7B,QAAQJ;UAChC,CAAqB;QAER,GAAE,IAAI;MACV;MAED,YAAY,SAAsCnF,GAAG;AACjD,eAAI,CAACA,EAAE,cAAeA,EAAE,QAAQ,QAAQ;CAAI,IAAI,MAC5CA,EAAE,QAAQ,MAAM;CAAI,EAAE,SAASA,EAAE,WAAW,MAAM;CAAI,EAAE,SACjD,KAAK,YAAYA,CAAC,IACjBA,EAAE,QAGH,KAAK,aAAaA,CAAC,IAFnB,KAAK,aAAaA,CAAC;MAIjC;MAED,aAAa,SAAuCA,GAAG;AAKnD,iBAJI0F,IAAS,qCACTC,IAAQ3F,EAAE,QAAQ,MAAM;CAAI,GAC5B4F,IAAS,CAAA,GAEJ9F,IAAI,GAAG+F,IAAMF,EAAM,QAAQ7F,IAAI+F,GAAK/F,KAAK,GAAG;AACjD,cAAIgG,IAAQJ,EAAO,KAAKC,EAAM7F,CAAC,CAAC;AAC5BgG,eACAF,EAAO,KAAK,IAAI5B,EAAW;YACvB,UAAU8B,EAAM,CAAC;YACjB,YAAYA,EAAM,CAAC;YACnB,QAAQH,EAAM7F,CAAC;UAClB,CAAA,CAAC;QAET;AAED,eAAO8F;MACV;MAED,cAAc,SAAwC5F,GAAG;AAKrD,iBAJI0F,IAAS,8DACTC,IAAQ3F,EAAE,WAAW,MAAM;CAAI,GAC/B4F,IAAS,CAAA,GAEJ9F,IAAI,GAAG+F,IAAMF,EAAM,QAAQ7F,IAAI+F,GAAK/F,KAAK,GAAG;AACjD,cAAIgG,IAAQJ,EAAO,KAAKC,EAAM7F,CAAC,CAAC;AAC5BgG,eACAF,EAAO;YACH,IAAI5B,EAAW;cACX,cAAc8B,EAAM,CAAC,KAAK;cAC1B,UAAUA,EAAM,CAAC;cACjB,YAAYA,EAAM,CAAC;cACnB,QAAQH,EAAM7F,CAAC;YAC3C,CAAyB;UACzB;QAEa;AAED,eAAO8F;MACV;;MAGD,cAAc,SAAwCb,GAAO;AACzD,YAAIG,IAAWH,EAAM,MAAM,MAAM;CAAI,EAAE,OAAO,SAASI,GAAM;AACzD,iBAAO,CAAC,CAACA,EAAK,MAAMP,CAA2B,KAAK,CAACO,EAAK,MAAM,mBAAmB;QACtF,GAAE,IAAI;AAEP,eAAOD,EAAS,IAAI,SAASC,GAAM;AAC/B,cAAIG,IAASH,EAAK,MAAM,GAAG,GACvBI,IAAgB,KAAK,gBAAgBD,EAAO,IAAK,CAAA,GACjDS,IAAgBT,EAAO,MAAO,KAAI,IAClClB,IAAe2B,EACd,QAAQ,kCAAkC,IAAI,EAC9C,QAAQ,cAAc,EAAE,KAAK,QAC9BC;AACAD,YAAa,MAAM,aAAa,MAChCC,IAAUD,EAAa,QAAQ,sBAAsB,IAAI;AAE7D,cAAIxB,IAAQyB,MAAY,UAAaA,MAAY,8BAC7C,SAAYA,EAAQ,MAAM,GAAG;AAEjC,iBAAO,IAAIhC,EAAW;YAClB,cAAcI;YACd,MAAMG;YACN,UAAUgB,EAAc,CAAC;YACzB,YAAYA,EAAc,CAAC;YAC3B,cAAcA,EAAc,CAAC;YAC7B,QAAQJ;UAC5B,CAAiB;QACJ,GAAE,IAAI;MACV;IACT;EACA,CAAC;;;;ACrJe,SAAAc,GACfC,GACAC,GAA4B;AAE5B,QAAMC,IAAaD,EAAW;AAC9B,MAAI,CAACC;AACJ,WAAO,MAAO;IAAA;AAEX,MAAAC;AACA,SAAOD,KAAe,WACzBC,IAAS,OAAOD,CAAU,IAEjBC,IAAAD;AAEV,QAAME,IAAiC,CAAA;AAGvC,MAAIH,EAAW,MAAM,SAAS,OAAO,KAChC,QAAQ;AACL,UAAAI,IAAe,CAACC,MAAqB;AACpC,YAAA,EAAE,SAAAC,GAAS,OAAA1B,EAAU,IAAAyB;AAC3B,UAAIE,IAAe,CAAA;AACf3B,YACK2B,IAAAC,EAAiB,MAAM5B,CAAK;AAErC,YAAM6B,IAAU;QACftE,EAAUmE,GAASN,EAAW,gBAAgB;MAAA;AAEtCD,QAAA;QACR,MAAM;QACN,OAAAQ;QACA,MAAM,KAAK,IAAK;QAChB,OAAOE;MAAA,CACP;IAAA;AAEK,WAAA,iBAAiB,SAASL,CAAY,GAC7CD,EAAe,KAAK,MAAK;AACpB,gBAAe,OAAA,oBAAoB,SAASC,CAAY;IAAA,CAC5D;EACF;AAGU,aAAAM,KAAaV,EAAW;AAClCG,MAAe,KAAKQ,EAAQT,GAAQQ,CAAS,CAAC;AAE/C,SAAO,MAAK;AACXP,MAAe,QAAQ,CAACzF,MAAMA,EAAG,CAAA;EAAA;AAQzB,WAAAiG,EAAQC,GAAiBC,GAAqB;AAClD,WAACD,EAAQC,CAAK,IAIX5F,GAAM2F,GAASC,GAAO,CAACxF,MACtB,IAAIyF,MAAoB;AAErBzF,QAAA,MAAM,MAAMyF,CAAI;AACrB,UAAA;AACH,cAAMP,IAAQC,EAAiB,MAAM,IAAI,MAAO,CAAA,GAC1CF,IAAUN,EAAW,6BACxBc,EAAK,IAAI,CAAChH,MACV,OAAOA,KAAM,WACVqC,EAAUrC,GAAGkG,EAAW,gBAAgB,IACxClG,CAAC,IAEJgH,EACC,OAAO,CAAChH,MAAM,OAAOA,KAAM,QAAQ,EACnC,IAAI,CAACA,MAAM,GAAGA,CAAC,EAAE;AACZiG,UAAA;UACR,MAAMc;UACN,OAAON,EAAM,MAAM,CAAC;UACpB,OAAOD;UACP,YAAYnE,EACX2E,EACE,OAAO,CAAC3G,MAAM,OAAOA,KAAM,QAAQ,EACnC,OAAO,CAACJ,GAAGU,MAAOsG,EAAAA,EAAA,CAAA,GAAKhH,CAAAA,GAAMU,CAAAA,GAAM,CAAE,CAAA,GACvCuF,EAAW,gBAAgB;UAE5B,MAAM,KAAK,IAAK;QAAA,CAChB;MAAA,SACOpB,GAAO;AACNvD,UAAA,2BAA2BuD,GAAO,GAAGkC,CAAI;MACnD;IAAA,CAED,IAlCO,MAAO;IAAA;EAmChB;AACD;;;AChJAE,MAAU9D,EAAAA,UAAiBf,GAC3B6E,EAAA,eAAuBC;AAEvB,WAAS9E,EAAUL,GAAKoF,GAAUC,GAAQC,GAAe;AACvD,WAAO,KAAK,UAAUtF,GAAKmF,EAAWC,GAAUE,CAAa,GAAGD,CAAM;EACvE;AAED,WAASF,EAAWC,GAAUE,GAAe;AAC3C,QAAI9E,IAAQ,CAAA,GAAIL,IAAO,CAAE;AAEzB,WAAImF,KAAiB,SAAMA,IAAgB,SAASlF,GAAKK,GAAO;AAC9D,aAAID,EAAM,CAAC,MAAMC,IAAc,iBACxB,iBAAiBN,EAAK,MAAM,GAAGK,EAAM,QAAQC,CAAK,CAAC,EAAE,KAAK,GAAG,IAAI;IACzE,IAEM,SAASL,GAAKK,GAAO;AAC1B,UAAID,EAAM,SAAS,GAAG;AACpB,YAAIE,IAAUF,EAAM,QAAQ,IAAI;AAChC,SAACE,IAAUF,EAAM,OAAOE,IAAU,CAAC,IAAIF,EAAM,KAAK,IAAI,GACtD,CAACE,IAAUP,EAAK,OAAOO,GAAS,IAAA,GAAUN,CAAG,IAAID,EAAK,KAAKC,CAAG,GAC1D,CAACI,EAAM,QAAQC,CAAK,MAAGA,IAAQ6E,EAAc,KAAK,MAAMlF,GAAKK,CAAK;MACvE;AACID,UAAM,KAAKC,CAAK;AAErB,aAAO2E,KAAY,OAAO3E,IAAQ2E,EAAS,KAAK,MAAMhF,GAAKK,CAAK;IACjE;EACH;;;;ACfA,SAAS8E,EACRtB,GACAM,GACAnF,GACA0D,GAAa;ARLP,MAAA5D,GAAAsG,GAAAC,GAAAC;AQON,MAAIC,IAAqC,CAAA;AACrC,MAAA;AACGA,QAAAjB,EAAiB,MAAM5B,KAAA,OAAAA,IAASyB,CAAK;EAAA,SACnCxG,GAAG;AACX4H,QAAMjB,EAAiB,MAAM,IAAI,MAAO,CAAA;EACzC;AACA,MAAIC,IAAkB,CAAA;AAClBJ,eAAiB,UACpBA,IAAQA,EAAM,SACVA,EAAM,UACCI,IAAA,EAAE,mBAAmBJ,EAAM,MAAA;AAGjC,QAAAqB,IAAcC,GAA6BF,CAAG;AAC3C1B,IAAA;IACR,OAAO5D,EAAUkE,CAAK;IACtB,MAAM;IACN,KAAK,OAAO,SAAS;IACrB,QAAQnF,KAAA,OAAAA,IAAU;IAClB,aAAYF,IAAA0G,EAAY,CAAC,MAAb,QAAA1G,EAAgB,cAAasG,IAAAI,EAAY,CAAC,MAAb,OAAA,SAAAJ,EAAgB,aAAa;IACtE,eAAcC,IAAAG,EAAY,CAAC,MAAb,QAAAH,EAAgB,gBAC3BC,IAAAE,EAAY,CAAC,MAAb,OAAA,SAAAF,EAAgB,eAChB;IACH,YAAYE;IACZ,YAAW,oBAAI,KAAM,GAAC,YAAa;IACnC,SAASjB,IAAUtE,EAAUsE,CAAO,IAAI;EAAA,CACxC;AACF;AAEO,IAAMmB,KAAgB,CAC5B7B,GACA,EAAE,oBAAA8B,EAAAA,MACC;AACH,MAAI,OAAO,UAAW;AAAa,WAAO,MAAO;IAAA;AAE3C,QAAAC,IAAkB,OAAO,UAAU,CACxCzB,GACAnF,GACA6G,GACAC,GACApD,MACS;AACGyC,MAAAtB,GAAUM,GAAOnF,GAAQ0D,CAAK;EAAA,GAGrCqD,IAA+B,OAAO,uBAAuB,CAClE5B,MACG;AACH,QAAIA,EAAM,QAAQ;AACjB,YAAM6B,IAAW7B,EAAM;AACnB6B,QAAS,WACZb,EACCtB,GACAM,EAAM,QACNA,EAAM,MACN6B,EAAS,SAAA,CAAU,IAGpBb,EAAYtB,GAAUM,EAAM,QAAQA,EAAM,IAAI;IAEhD;EAAA,GAGK8B,IAAiB,OAAO,SACxBC,IAAmB,cAAyBD,EAAiB;IAGlE,YACCE,GAGS;AAET,YAAMA,CAAQ;AAREC,QAAA,MAAA,sBAAA;AASX,WAAA,uBAAuB,IAAI,MAAA;IACjC;IAEA,WAAQ;AACP,aAAO,KAAK;IACb;IAEA,OAAO,cAAW;AAEX,YAAAC,IAAgB,OAAO,OAAO,QAAS;AAC7C,aAAOV,KAAsBU;IAC9B;EAAA;AAEG,SAAAH,EAAiB,YAAA,MACpB,OAAO,UAAUA,IAEX,MAAK;AACX,WAAO,UAAUD,GACjB,OAAO,uBAAuBF,GAC9B,OAAO,UAAUH;EAAA;AAEnB;AAlEO,IAoEDH,KAA+B,CACpCa,MACkC;AR1G5B,MAAAxH,GAAAsG;AQ2GF,MAAAkB,EAAO,WAAW;AACd,WAAAA;AAGF,QAAAC,IAAaD,EAAO,CAAC;AAC3B,UACCxH,IAAAyH,EAAW,aAAX,QAAAzH,EAAqB,SAAS,eAAA,MAC9BsG,IAAAmB,EAAW,aAAX,QAAAnB,EAAqB,SAAS,cAAA,KAC9BmB,EAAW,iBAAiB,yBAErBD,EAAO,MAAM,CAAC,IAEfA;AACR;AApFO,IC5CME,KAAsB;EAClC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAiJW,IAAAC;CAAZ,SAAYA,GAAU;AACrBA,IAAA,eAAA,gBACAA,EAAA,iBAAA,kBACAA,EAAA,gBAAA,iBACAA,EAAA,eAAA,gBACAA,EAAA,cAAA,eACAA,EAAA,eAAA;AACD,GAPYA,OAAAA,KAOX,CAAA,EAAA;AACW,IAAAC;CAAZ,SAAYA,GAAc;AACzBA,IAAA,SAAA,UACAA,EAAA,WAAA,YACAA,EAAA,cAAA,eACAA,EAAA,WAAA,YACAA,EAAA,UAAA;AACD,GANYA,OAAAA,KAMX,CAAA,EAAA;ACnLM,IAAMC,KAAmB;EAC/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAlBM,IAqBMC,KAA2B;EACvC;EACA;;AAvBM,ICEMC,KAAmB,CAC/BC,GACAC,GACAC,MACM;AACN,QAAMC,IAAaC,GAClBH,GACAD,EAAS,SACTE,CAAe;AAGT,SAAAG,EAAAtC,EAAA,CAAA,GACHiC,CAAAA,GADG;IAEN,SAASG;EAAA,CAAA;AAEX;ADjBO,ICmBMC,KAAkB,CAC9BH,GACAK,GACAJ,MACG;AXbG,MAAAlI,GAAAsG;AWcA,QAAA6B,IAAapC,EAAA,CAAA,GAAKuC,CAAAA;AAGxB,SAAIJ,MACHlI,IAAA,OAAO,KAAKmI,CAAU,MAAtB,QAAAnI,EAAyB,QAAQ,CAACuI,MAAkB;AAE9C,KAAC,GAAGL,CAAe,EAAE,SAASK,KAAA,OAAA,SAAAA,EAAQ,YAAA,CAAa,MACvDJ,EAAWI,CAAM,IAAI;EACtB,CAAA,GAGMJ,OAGR7B,IAAA,OAAO,KAAK6B,CAAU,MAAtB,QAAA7B,EAAyB,QAAQ,CAACiC,MAAkB;AAGlD,KAAC,GAAGC,IAAmB,GAAGP,CAAe,EAAE,SAC1CM,KAAA,OAAA,SAAAA,EAAQ,YAAA,CAAa,MAGtBJ,EAAWI,CAAM,IAAI;EACtB,CAAA,GAGMJ;AACR;ADlDO,ICqDDK,KAAoB;EACzB;EACA;EACA;EACA;;ADzDM,IC6DMC,KAAwB;EACpC;EACA;;AC7DD,IAAIC,KAAa;AAEjB,IAAMC,KAAN,MAAa;EAAb,cAAA;AACSrB,MAAA,MAAA,WAAqC,CAAA,CAAA;EAAA;EACtC,QAAQpG,GAAW;AZIpB,QAAAlB;AYHE,YAAAA,IAAA,KAAK,QAAQkB,CAAG,MAAhB,OAAAlB,IAAqB;EAC7B;EACO,QAAQkB,GAAaK,GAAa;AACnC,SAAA,QAAQL,CAAG,IAAIK;EACrB;EACO,WAAWL,GAAW;AACrB,WAAA,KAAK,QAAQA,CAAG;EACxB;AACA;AAED,IAAI0H,KAAgB,IAAID,GAAAA;AAExB,IAAME,KAAuB,MAAK;AAC7B,MAAA;AACH,YAAQH,IAAM;MACb,KAAK;AACJ,eAAO,OAAO;MACf,KAAK;AACJ,eAAO,OAAO;IAChB;EAAA,SACQ7J,GAAG;AACJ,WAAA+J;EACR;AACD;AAXA,IAiBaE,KAAU,CAAC5H,MAChB2H,GAAuB,EAAA,QAAQ3H,CAAG;AAlB1C,IAqBa6H,KAAU,CAAC7H,GAAaK,MAC7BsH,GAAAA,EAAuB,QAAQ3H,GAAKK,CAAK;AAtBjD,ICAayH,KAAyB,KAAK,KAAK;ADAhD,IENaC,KAAyB,MAA8B;AACnE,MAAIC,IAAoB,KAAK,MAC5BJ,GAAQzJ,EAAqB,YAAY,KAAK,IAAI;AAGlD,MAAA6J,KACAA,EAAkB,gBAClB,KAAK,IAAA,IAAQA,EAAkB,eAAeF;AAEvC,WAAAE;AAET;AFLA,IEiBaC,KAAqB,WAAA;Ad1B3B,MAAAnJ;Ac2BC,UAAAA,IAAA8I,GAAQzJ,EAAqB,iBAAiB,MAA9C,OAAAW,IAAmD;AAC3D;;AClCO,IAAMoJ,KAA2B;AAAjC,IAEMC,KAAe,CAACC,MAAe;AAC3C,MAAIC,IAAcD;AASd,SAAA,CAACA,EAAI,WAAW,UAAU,KAAK,CAACA,EAAI,WAAW,SAAS,MAC3DC,IAAc,GAAG,OAAO,SAAS,MAAM,GAAGA,CAAW,KAI/CA,EAAY,QAAQ,QAAQ,EAAE;AACtC;AAlBO,IAuCDC,KAA8B,CACnCC,GACA,EACC,iBAAAxB,GACA,iBAAAC,GACA,0BAAAwB,EAAAA,MAE8B;AfxCzB,MAAA1J,GAAAsG;Ae0CN,MAAIqD,IAA4CF;AAGhD,MAAIC,GAA0B;AAC7B,QAAIE,IAAuB;AACvB,QAAA;AACHD,QAAc,QAAQ,OAAO,KAAK,MAAMA,EAAc,QAAQ,IAAI;IAAA,SAC1DE,GAAK;AACUD,UAAA;IACxB;AAEA,QAAIE,IAAwB;AACxB,QAAA;AACHH,QAAc,SAAS,OAAO,KAAK,MAClCA,EAAc,SAAS,IAAI;IAAA,SAEpBE,GAAK;AACWC,UAAA;IACzB;AAEI,QAAA;AACHH,UAAgBD,EAAyBC,CAAa;IAAA,SAC9CE,GAAK;IAAA,UAAA;AAEbD,UACCA,KAAwB,CAAC,GAAC5J,IAAA2J,KAAA,OAAA,SAAAA,EAAe,YAAf,QAAA3J,EAAwB,OACnD8J,IACCA,KAAyB,CAAC,GAACxD,IAAAqD,KAAA,OAAA,SAAAA,EAAe,aAAf,QAAArD,EAAyB,OAEjDsD,MACHD,EAAe,QAAQ,OAAO,KAAK,UAClCA,EAAe,QAAQ,IAAI,IAGzBG,MACHH,EAAe,SAAS,OAAO,KAAK,UACnCA,EAAe,SAAS,IAAI;IAG/B;AAEA,QAAI,CAACA;AACG,aAAA;EAET;AAGA,QAAuCpD,IAAAoD,GAA/B,EAAA,SAAAI,GAAS,UAAAC,EfzFX,IeyFiCzD,GAAT0D,IAAAC,EAAS3D,GAAT,CAAtB,WAAS,UAAA,CAAA;AAEV,SAAAR,EAAA;IACN,SAASgC,GAAiBgC,GAAS9B,GAAiBC,CAAe;IACnE,UAAUH,GAAiBiC,GAAU/B,GAAiBC,CAAe;EAAA,GAClE+B,CAAAA;AAEL;AAtGO,IAwGME,KAAiD,CAC7DC,GACAC,GACAC,GACAC,MACG;AAEHH,IAAmB,KAAK,CAACrL,GAAGU,MAAMV,EAAE,cAAcU,EAAE,WAAW;AAE/D,QAAM+K,IAA8D;IACnE,gBAAgB,CAAE;IAClB,QAAQ,CAAE;IACV,OAAO,CAAE;EAAA,GAGJC,IAEFL,EAAmB,OAAO,CAACM,GAAUC,MAAqB;AACvD,UAAArB,IAAMD,GAAasB,EAAkB,IAAI;AAC3C,WAAAA,EAAkB,kBAAkBL,IAC9BI,EAAAJ,CAAI,EAAEhB,CAAG,IAAI;MACrB,GAAIoB,EAASJ,CAAI,EAAEhB,CAAG,KAAK,CAAA;MAC3BqB;IAAA,IAGQD,EAAA,OAAOpB,CAAG,IAAI;MACtB,GAAIoB,EAAS,OAAOpB,CAAG,KAAK,CAAA;MAC5BqB;IAAA,GAGKD;EAAA,GACLF,CAAgC;AAEnC,MAAII,IAEA,CAAA;AACJA,MAA8BP,EAAqB,OAClD,CAACK,GAAUG,MAAuB;AACjC,UAAMvB,IAAMD,GAAawB,EAAoB,QAAQ,GAAG;AAC/C,WAAAH,EAAApB,CAAG,IAAI,CAAC,GAAIoB,EAASpB,CAAG,KAAK,CAAA,GAAKuB,CAAmB,GACvDH;EAAA,GAERE,CAA2B;AAGnB,WAAAtB,KAAOmB,EAA0BH,CAAI,GAAG;AAChD,UAAMQ,IAA2BL,EAA0BH,CAAI,EAAEhB,CAAG,GAC9DyB,IAA6BH,EAA4BtB,CAAG;AAClE,QAAI,CAACyB;AACJ;AAQD,UAAMC,IAAS,KAAK,IACnBF,EAAyB,SAASC,EAA2B,QAC7D,CAAC;AAEF,aAASpM,IAAIqM,GAAQrM,IAAImM,EAAyB,QAAQnM;AACrDmM,QAAyBnM,CAAC,MAC7BmM,EAAyBnM,CAAC,EAAE,sBAC3BoM,EAA2BpM,IAAIqM,CAAM;EAGzC;AAEA,MAAIvG,IAA6D,CAAA;AACjE,WAAS6F,KAAQG;AACP,aAAAnB,KAAOmB,EAA0BH,CAAI;AAC7C7F,UAASA,EAAO,OAAOgG,EAA0BH,CAAI,EAAEhB,CAAG,CAAC;AAI7D,SAAO7E,EACL,KAAK,CAAC1F,GAAGU,MAAMV,EAAE,aAAaU,EAAE,UAAU,EAC1C,OACA,CACCwL,GACAN,MACG;AACH,QAAIE,IACHF,EAAkB;AAEnB,WAAIE,MACmBA,IAAArB,GACrBmB,EAAkB,qBAClBJ,CAAe,GAIZ,CAACM,OAKNF,EAAkB,SAAS,WAAA;AAEpB,YAAA7L,IAAI,OAAO,YAAY;AACtB,aAAA;QACN,eAAe,KAAK;QACpB,cAAcA,IAAI,KAAK;QACvB,iBAAiBA,IAAI,KAAK;QAC1B,eAAeA,IAAI,KAAK;QACxB,sBAAsBA,IAAI,KAAK;QAC/B,oBAAoBA,IAAI,KAAK;QAC7B,eAAeA,IAAI,KAAK;QACxB,kBAAkBA,IAAI,KAAK;QAC3B,gBAAgBA,IAAI,KAAK;QACzB,iBAAiBA,IAAI,KAAK;QAC1B,kBAAkBA,IAAI,KAAK;QAC3B,gBAAgBA,IAAI,KAAK;QACzB,0BACCA,IAAI,KAAK;QACV,gBAAgBA,IAAI,KAAK;QACzB,MAAM,KAAK;QACX,cAAc,KAAK;QACnB,iBAAiB,KAAK;QACtB,iBAAiB,KAAK;QACtB,iBAAiB,KAAK;QACtB,sBAAsB+L;MAAA;IAAA,GAIxBI,EAAU,KAAKN,CAAiB,IACzBM;EACR,GACA,CAAE,CAAA;AAEL;AA3OO,IAiPDC,KAAmC,CAAC/K,GAAcgL,MAAAA;Af3OjD,MAAAnL;Ae4ON,SAAAG,EACE,kBAAmB,EACnB,UACAiL,IAAAA,GAAgB,+BAAhBA,OAAAA,IAA8C,cAAc,KAE9DjL,EAAK,kBAAA,EAAoB,SAAS,cAAc,KAChDA,EAAK,kBAAoB,EAAA,SAASgL,CAAU;AAAA;AAxPtC,IA0PME,IAAiC,CAC7C/B,GACAgC,GACAC,MAGC,CAACL,GAAiC5B,GAAKgC,CAAmB,KAC1DE,EAA6BlC,GAAKiC,CAAc;AAjQ3C,IAqQMC,IAA+B,CAC3ClC,GACAiC,MACG;AflQG,MAAAvL;AemQN,MAAIyL,IAAgC,CAAA;AAChCF,QAAmB,QACXE,IAAA,CAAC,aAAa,KAAK,IAC1BzL,IAAA,UAAA,OAAA,SAAA,OAAQ,aAAR,QAAAA,EAAkB,QACZyL,EAAA,KAAK,OAAO,SAAS,IAAI,KAEzBF,aAA0B,UACzBE,IAAAF;AAGZ,MAAI9G,IAAS;AACJ,SAAAgH,EAAA,QAAQ,CAACC,MAAW;AACxBpC,MAAI,MAAMoC,CAAO,MACXjH,IAAA;EACV,CACA,GACMA;AACR;AAEA,SAASkH,GAAOC,GAAc;AAK7B,WAJInH,IAAS,IACToH,IACH,kEACGC,IAAmBD,EAAW,QACzBlN,IAAI,GAAGA,IAAIiN,GAAQjN;AACjB8F,SAAAoH,EAAW,OACpB,KAAK,MAAM,KAAK,OAAM,IAAKC,CAAgB,CAAC;AAGvC,SAAArH;AACR;AAEO,IAAMsH,IAAyB,MAE9B,CAAC5C,GAAsB,GAAAwC,GAAO,EAAE,CAAC;AAFlC,IAKMK,KAA4B,CACxCC,GACAC,MAEOD,IAAkB,MAAMC;AATzB,ICrRMC,KAAc,CAC1BpH,GACAoG,GACAI,GACAa,GACAC,GACAC,MACG;AACH,QAAMC,IAAM,eAAe,WAErBC,IAAeD,EAAI,MACnBE,IAAeF,EAAI,MACnBG,IAA2BH,EAAI;AAKjC,SAAAA,EAAA,OAAO,SAA4BI,GAAgBrD,GAAiB;AACnE,WAAA,OAAOA,KAAQ,WAClB,KAAK,OAAOA,IAEP,KAAA,OAAOA,EAAI,SAAA,GAEjB,KAAK,UAAUqD,GACf,KAAK,kBAAkB,CAAA,GACvB,KAAK,6BAA6B,CAACP,EAAa,KAAK,CAACQ,MACrD,KAAK,KAAK,YAAW,EAAG,SAASA,CAAU,CAAC,GAItCJ,EAAa,MAAM,MAAM,SAAS;EAAA,GAGtCD,EAAA,mBAAmB,SAEtBhE,GACAhH,GAAa;AAER,WAAA,KAAA,gBAAgBgH,CAAM,IAAIhH,GAGxBmL,EAAyB,MAAM,MAAM,SAAS;EAAA,GAGlDH,EAAA,OAAO,SAA4BM,GAAa;AACnD,QACC,CAACxB,EACA,KAAK,MACLF,GACAI,CAAc;AAIR,aAAAkB,EAAa,MAAM,MAAM,SAAS;AAG1C,UAAM,CAACR,GAAiBC,CAAS,IAAIH,EAAAA;AACjCP,MAA6B,KAAK,MAAMD,CAAc,KACzD,KAAK,iBACJnC,IACA4C,GAA0BC,GAAiBC,CAAS,CAAC;AAIvD,UAAMY,IAA4B,KAAK,4BACjCC,IAAwB;MAC7B,iBAAAd;MACA,IAAIC;MACJ,KAAK,KAAK;MACV,MAAM,KAAK;MACX,SAASY,IAA4B,KAAK,kBAAkB,CAAE;MAC9D,MAAM;IAAA;AAGP,QAAIA,KACCD,GAAU;AACb,YAAMG,IAAWC,GAAYJ,GAAUE,EAAa,GAAG;AACnDC,YACH,KAAK,QAAQA,GACbD,EAAa,OAAUG,EACtBF,GACAX,GACAC,GACAS,EAAa,OAAO;IAGvB;AAII,WAAA,KAAA,iBAAiB,QAAQ,WAAK;AAAA,aAAAI,EAAA,MAAA,MAAA,aAAA;AAClC,cAAMC,IAA0B;UAC/B,QAAQ,KAAK;UACb,SAAS,CAAE;UACX,MAAM;QAAA;AAGP,YAAIN,GAA2B;AAI9B,gBAAMO,IAHkB,KAAK,sBAAA,EAI3B,KAAM,EACN,MAAM,SAAS,GAGXC,IAAoC,CAAA;AAQ1C,cAP0BD,EAAA,QAAQ,SAAUrJ,GAAI;AACzC,kBAAAV,IAAQU,EAAK,MAAM,IAAI,GACvBuE,IAASjF,EAAM,MAAA;AACrBgK,cAAU/E,CAAM,IAAIjF,EAAM,KAAK,IAAI;UAAA,CACnC,GACD8J,EAAc,UAAUE,GAEpBT,GAAU;AACb,kBAAMG,IAAWC,GAAYJ,GAAUE,EAAa,GAAG;AACnDC,kBACHD,EAAa,OAAUG,EACtBF,GACAX,GACAC,GACAc,EAAc,OAAO;UAGxB;AAEA,cAAI,KAAK,iBAAiB,MAAM,KAAK,iBAAiB;AACvCA,cAAA,OAAUF,EACvB,KAAK,cACLb,GACAC,GACAc,EAAc,OAAO,GAGtBA,EAAc,OAAU,KAAK,aAAa,SAAS;mBACzC,KAAK,iBAAiB,QAAA;AAC5B,gBAAA,KAAK,oBAAoB;AACxB,kBAAA;AACH,sBAAMpD,IAAW,MAAM,KAAK,SAAS,KAAI;AAEzCoD,kBAAc,OAAUF,EACvBlD,GACAqC,GACAC,GACAc,EAAc,OAAO,GAERA,EAAA,OAAU,KAAK,SAAS;cAAA,SAC/BvO,GAAA;cAAC;UAAA;AAGN,gBAAA;AACWuO,gBAAA,OAAUF,EACvB,KAAK,UACLb,GACAC,GACAc,EAAc,OAAO;YAAA,SAEfvO,GAAA;YAAC;QAEX;AAQAkG,UANmC;UAClC,SAASgI;UACT,UAAUK;UACV,YAAY,CAACN;QAAA,CAGA;MAAA,CAAA;IAAA,CACd,GAUI,KAAA,iBAAiB,SAAS,WAAK;AAAA,aAAAK,EAAA,MAAA,MAAA,aAAA;AACnC,cAAMC,IAA0B;UAC/B,QAAQ,KAAK;UACb,SAAS;UACT,MAAM;QAAA;AASPrI,UANmC;UAClC,SAASgI;UACT,UAAUK;UACV,YAAY;QAAA,CAGC;MAAA,CAAA;IAAA,CACd,GAGMX,EAAa,MAAM,MAAM,SAAS;EAAA,GAGnC,MAAK;AACXF,MAAI,OAAOC,GACXD,EAAI,OAAOE,GACXF,EAAI,mBAAmBG;EAAA;AAEzB;AD0EO,ICxEDO,KAAc,CAACJ,GAAevD,MAA2B;AAC1D,MAAA,OAAOuD,KAAa,UAAA;AAGvB,QACC,GACEvD,KAAA,QAAAA,EAAK,SAAS,WAAA,KACdA,KAAA,QAAAA,EAAK,SAAS,eAAA,MACfuD,EAAS,SAAS,aAAa;AAGzB,aAAAA;EAAA,WAGR,OAAOA,KAAa,YACpB,OAAOA,KAAa,YACpB,OAAOA,KAAa;AAEpB,WAAO1L,EAAU0L,CAAQ;AAGnB,SAAA;AACR;ADkDO,IChDDU,KAAqB,KAAK;ADgDzB,IC/CDC,KAAmB;EACxB,oBAAoB,KAAK,OAAO;;EAChC,cAAc,KAAK,OAAO;;;AD6CpB,IC1CMN,IAA8B,CAC1CF,GACAX,GACAC,GACAhE,MACG;AhB9PG,MAAAtI,GAAAsG,GAAAC;AgB+PN,MAAIkH,IAAoBF;AACxB,MAAIjF,GAAS;AACZ,QAAIoF,IAAsB;AACtB,WAAOpF,EAAQ,OAAW,aACfoF,KAAA1N,IAAAsI,EAAQ,IAAI,cAAc,MAA1B,OAAAtI,IAA+B,KAE/B0N,KAAApH,IAAAgC,EAAQ,cAAc,MAAtB,OAAAhC,IAA2B;AAEtC,QAAA;AACHoH,UAAcA,EAAY,MAAM,GAAG,EAAE,CAAC;IAAA,SAC/B7O,GAAA;IAAC;AAER4O,SAAAlH,IAAAiH,GAAiBE,CAA4C,MAA7D,OAAAnH,IACAgH;EACF;AAEA,MAAIP,GAAU;AACb,QAAIX;AACC,UAAA;AACG,cAAAsB,IAAO,KAAK,MAAMX,CAAQ;AAE5B,cAAM,QAAQW,CAAI,IAChBA,EAAA,QAAQ,CAACC,MAAW;AACxB,iBAAO,KAAKA,CAAO,EAAE,QAAQ,CAAC1M,MAAO;AAEnCmL,cAAiB,SAChBnL,EAAI,kBAAmB,CAAA,MAGxB0M,EAAQ1M,CAAG,IAAI;UAChB,CACA;QAAA,CACD,IAED,OAAO,KAAKyM,CAAI,EAAE,QAAQ,CAACzM,MAAO;AAEhCmL,YAAiB,SAASnL,EAAI,kBAAmB,CAAA,MAEjDyM,EAAKzM,CAAG,IAAI;QACb,CACA,GAGS8L,IAAA,KAAK,UAAUW,CAAI;MAAA,SACvB9O,GAAA;MAAC;AAGV,QAAIyN;AACC,UAAA;AACG,cAAAqB,IAAO,KAAK,MAAMX,CAAQ;AAEhC,eAAO,KAAKW,CAAI,EAAE,QAAQ,CAACzM,MAAO;AAC5BoL,YAAiB,SAASpL,EAAI,kBAAmB,CAAA,MACrDyM,EAAKzM,CAAG,IAAI;QACb,CACA,GAEU8L,IAAA,KAAK,UAAUW,CAAI;MAAA,SACvB9O,GAAA;MAAC;EAEX;AAEI,MAAA;AACQmO,QAAAA,EAAS,MAAM,GAAGS,CAAS;EAAA,SAC/B5O,GAAA;EAAC;AAEF,SAAAmO;AACR;AD/BO,IErRMa,KAAgB,CAC5B9I,GACAoG,GACAI,GACAa,GACAC,GACAC,MACG;AACH,QAAMwB,IAAgB,OAAO;AAEtB,SAAA,OAAA,cAAc,SAAUC,GAAOC,GAAI;AACzC,UAAM,EAAE,QAAArB,GAAQ,KAAArD,EAAA,IAAQ2E,GAA0BF,GAAOC,CAAI;AAC7D,QAAI,CAAC3C,EAA+B/B,GAAK6B,GAAYI,CAAc;AAClE,aAAOuC,EAAc,KAAK,MAAMC,GAAOC,CAAI;AAG5C,UAAM,CAAC/B,GAAiBC,CAAS,IAAIH,EAAAA;AACjC,QAAAP,EAA6BlC,GAAKiC,CAAc,GAAG;AACtDyC,UAAOA,KAAQ,CAAA;AAEf,UAAI1F,IAAU,IAAI,QAAQ0F,EAAK,OAAO;AAElCD,mBAAiB,WACnB,CAAC,GAAGA,EAAM,OAAO,EAAE,QAAQ,CAAC,CAAC7M,GAAKK,CAAK,MACvC+G,EAAQ,IAAIpH,GAAKK,CAAK,CAAC,GAIzB+G,EAAQ,IACPc,IACA4C,GAA0BC,GAAiBC,CAAS,CAAC,GAGtD8B,EAAK,UAAU,OAAO,YAAY1F,EAAQ,QAAA,CAAS;IACpD;AAEA,UAAMyB,IAA4B;MACjC,iBAAAkC;MACA,IAAIC;MACJ,SAAS,CAAE;MACX,MAAM;MACN,KAAA5C;MACA,MAAMqD;IAAA,GAEDG,IAA4B,CAACV,EAAa,KAAK,CAACQ,MACrDtD,EAAI,YAAa,EAAC,SAASsD,CAAU,CAAC;AAEnCE,UACK/C,EAAA,UAAU,OAAO,YACxB,IAAI,QAAQiE,KAAA,OAAA,SAAAA,EAAM,OAAO,EAAE,QAAA,CAAS,GAErCjE,EAAQ,OAAOmD,EACdc,KAAA,OAAA,SAAAA,EAAM,MACN3B,GACAC,GACA0B,KAAA,OAAA,SAAAA,EAAM,OAAO;AAIf,QAAIE,IAAkBJ,EAAc,KAAK,MAAMC,GAAOC,CAAI;AAC1D,WAAAG,GACCD,GACAnE,GACAhF,GACA+H,GACAT,GACAC,CAAgB,GAEV4B;EAAA,GAGD,MAAK;AACX,WAAO,cAAcJ;EAAA;AAEvB;AF2MO,IEzMMG,KAA4B,CACxCF,GACAC,MACG;AACG,QAAArB,IACJqB,KAAQA,EAAK,UACb,OAAOD,KAAU,YAAY,YAAYA,KAASA,EAAM,UACzD;AACG,MAAAzE;AACA,SAAA,OAAOyE,KAAU,WAChB,SAASA,KAASA,EAAM,MAC3BzE,IAAMyE,EAAM,MAEZzE,IAAMyE,EAAM,SAAA,IAGPzE,IAAAyE,GAGA;IACN,QAAApB;IACA,KAAArD;EAAA;AAEF;AFkLO,IE/KD6E,KAAa,CAClBD,GACAE,GACArJ,GACA+H,GACAT,GACAC,MACG;AACG,QAAA+B,IAA0B,CAAOrE,MAA8BmD,EAAA,QAAA,MAAA,aAAA;AACpE,QAAImB,IAAqC;MACxC,MAAM;MACN,SAAS;MACT,QAAQ;MACR,MAAM;IAAA,GAEHC,IAAiB,OACjBC,IAAa,CAAC1B;AAEd,eAAW9C,KAAYA,aAAoB,SAC5BsE,IAAAjG,EAAAtC,EAAA,CAAA,GACduI,CAAAA,GADc;MAEjB,MAAMtE,EAAS;MACf,QAAQ;MACR,MAAM;IAAA,CAAA,GAGUuE,IAAA,QACP,YAAYvE,MACJsE,IAAAjG,EAAAtC,EAAA,CAAA,GACduI,CAAAA,GADc;MAEjB,QAAQtE,EAAS;IAAA,CAAA,GAGd8C,MACHwB,EAAgB,OAAO,MAAMG,GAC5BzE,GACAsC,GACAD,CAAgB,GAGjBiC,EAAgB,UAAU,OAAO,YAChCtE,EAAS,QAAQ,QAAA,CAAS,GAEXsE,EAAA,OAAOA,EAAgB,KAAK,SAAS,KAIrDtE,EAAS,SAAS,YAClBA,EAAS,SAAS,sBAELwE,IAAA,MACKF,IAAAjG,EAAAtC,EAAA,CAAA,GACduI,CAAAA,GADc;MAEjB,MAAM;IAAA,CAAA,IAISC,IAAA,OAGdA,KAOHxJ,EANmC;MAClC,SAASqJ;MACT,UAAUE;MACV,YAAAE;IAAA,CAGa;EACf,CAAA;AAGDN,IAAgB,KAAKG,CAAuB,EAAE,MAAM,MAAO;EAAA,CAAC;AAC7D;AFuGO,IErGMI,KAAkB,CAC9BzE,GACAsC,GACAD,MACGc,EAAA,QAAA,MAAA,aAAA;AACC,MAAAuB;AACA,MAAA;AAOH,UAAMC,IADQ3E,EAAS,MAAA,EACJ;AACnB,QAAI2E,GAAM;AACL,UAAAC,IAASD,EAAK,UAAA,GACdE,IAAc,IAAI,YAAA,GAClBC,GAEArK,IAAS;AAEb,aAAO,EAAEqK,IAAY,MAAMF,EAAO,KAAA,GAAQ,QAAM;AAC/C,YAAIG,IAAcD,EAAU;AAClBrK,aAAAoK,EAAY,OAAOE,CAAW;MACzC;AACOL,UAAAjK,GACPiK,IAAOxB,EACNwB,GACArC,GACAC,GACAtC,EAAS,OAAO;IAAA;AAGV0E,UAAA;EAAA,SAEA7P,GAAG;AACX6P,QAAO,6BAA6B7P,CAAW;EAChD;AAEO,SAAA6P;AACR,CAAA;AF6DO,IGzRDM,KAAoB,CACzBC,GACAC,GACA9C,MACG;AACH,QAAM+C,IACL,OAAO;AACR,SAAO,qCAAqCF;AAE5C,QAAMG,IACL,OAAO;AACD,SAAA,OAAA,mCAAmC,CAACC,MAA6B;AACvE,UAA+CrP,IAAAqP,GAAvC,EAAA,SAAA/J,GAAS,MAAAgK,ElBtBZ,IkBsB0CtP,GAArBuP,IAAArF,EAAqBlK,GAArB,CAAlB,WAAS,MAAA,CAAA,GAKXwP,IAJapD,EAAa,KAAK,CAACQ,MACrCyC,EAAU,KAAK,YAAa,EAAC,SAASzC,CAAU,CAAC,IAGX2C,IAAmBF;AAE1DH,MAAcM,CAAiB;EAAA,GAGzB,MAAK;AACX,WAAO,qCACNL,GACD,OAAO,mCACNC;EAAA;AAEH;AH6PO,IIlRMK,KAAkB,CAAC,EAC/B,aAAAC,GACA,eAAAC,GACA,0BAAAC,GACA,wBAAAC,GACA,2BAAAC,GACA,kBAAAzD,GACA,YAAAlB,GACA,gBAAAI,GACA,cAAAa,GACA,iBAAAH,GACA,kBAAAK,EAAAA,MAC8B;AAC9B,QAAMyD,IAAoB5D,GACzBuD,GACAvE,GACAI,GACAa,GACAC,GACAC,CAAgB,GAEX0D,IAAsBnC,GAC3B8B,GACAxE,GACAI,GACAa,GACAC,GACAC,CAAgB,GAGX2D,IAA2BH,IAM9B,MAAK;EAAA,IALLd,GACAY,GACAC,GACAzD,CAAY;AAIf,SAAO,MAAK;;;AAKb;;IChDa8D,UAAAA,GAAkB;EA8B9B,YAAY7O,GAA8B;AA7B1CiG,MAAA,MAAA,yBAAA;AACAA,MAAA,MAAA,qBAAA;AACAA,MAAA,MAAA,oBAAA;AACAA,MAAA,MAAA,wBAAA;AACAA,MAAA,MAAA,WAAA;AACAA,MAAA,MAAA,QAAA;AACAA,MAAA,MAAA,UAAA;AAEAA,MAAA,MAAA,SAAA;AACAA,MAAA,MAAA,uBAA2C,IAAA;AAC3CA,MAAA,MAAA,aAAA;AACAA,MAAA,MAAA,yBAAA;AACAA,MAAA,MAAA,gCAAA;AACAA,MAAA,MAAA,oBAAA;AACAA,MAAA,MAAA,sBAAA;AACAA,MAAA,MAAA,mCAAA;AACAA,MAAA,MAAA,0BAAA;AACAA,MAAA,MAAA,wBAAA;AACAA,MAAA,MAAA,gBAAA;AACAA,MAAA,MAAA,wBAAA;AACAA,MAAA,MAAA,yBAAA;AACAA,MAAA,MAAA,yBAAA;AACAA,MAAA,MAAA,2BAAA;AACAA,MAAA,MAAA,6BAAA;AACAA,MAAA,MAAA,cAAA;AACAA,MAAA,MAAA,0BAAA;ApBtCM,QAAAtH,GAAAsG;AoB2CL,SAAK,UAAUjF,GACV,KAAA,0BAA0B,CAAC,CAACA,EAAQ,yBACpC,KAAA,uBAAsBrB,IAAAqB,EAAQ,wBAAR,OAAArB,IAA+B,OACrD,KAAA,sBAAqBsG,IAAAjF,EAAQ,uBAAR,OAAAiF,IAA8B,MACnD,KAAA,yBAAyBjF,EAAQ,0BAA0B;MAC/D,GAAGqG;IAAA,GAEJ,KAAK,YAAY,CAAA,GACjB,KAAK,SAAS,CAAA,GACd,KAAK,WAAW,CAAA,GAChB,KAAK,8BAA8B;EACpC;EAEA,cAAW;AACH,WAAA,KAAK,UAAU,SAAS;EAChC;EAEA,iBAAc;AACb,QAAI,KAAK,YAAa;AAAE;AACxB,UAAMyI,IAAgB;AACjB,SAAK,2BACT,KAAK,UAAU,KACdrL,GACC,CAACnF,MAAqB;ApBlEpB,UAAAK,GAAAsG,GAAAC;AoBoEA,UAAA,KAAK,wBACJ5G,EAAE,SAAS,WAAWA,EAAE,SAAS,YAClCA,EAAE,SACFA,EAAE,OACD;AACK,cAAAyQ,IAAajP,EAAUxB,EAAE,KAAK;AACpC,YACCkI,GAAiB,SAASuI,CAAU,KACpCtI,GAAyB,KAAK,CAAC4D,MAC9B0E,EAAW,SAAS1E,CAAO,CAAC;AAG7B;AAEDyE,UAAc,OAAO,KAAK;UACzB,OAAOC;UACP,MAAM;UACN,KAAK,OAAO,SAAS;UACrB,SAAQpQ,IAAAL,EAAE,MAAM,CAAC,MAAT,QAAAK,EAAY,WACjBL,EAAE,MAAM,CAAC,EAAE,WACX;UACH,aAAY2G,IAAA3G,EAAE,MAAM,CAAC,MAAT,QAAA2G,EAAY,aACrB3G,EAAE,MAAM,CAAC,EAAE,aACX;UACH,eAAc4G,IAAA5G,EAAE,MAAM,CAAC,MAAT,QAAA4G,EAAY,eACvB5G,EAAE,MAAM,CAAC,EAAE,eACX;UACH,YAAYA,EAAE;UACd,YAAW,oBAAI,KAAM,GAAC,YAAa;QAAA,CACnC;MACF;AACcwQ,QAAA,SAAS,KAAKxQ,CAAC;IAAA,GAE9B;MACC,OAAO,KAAK;MACZ,QAAQ;MACR,kBAAkB;QACjB,cAAc;QACd,gBAAgB;QAChB,mBAAmB;MACnB;IACD,CAAA,CACD,GAGH,KAAK,UAAU,KACdiH,GACC,CAAC/H,MAAmB;AAElBgJ,SAAiB,SAAShJ,EAAE,KAAK,KACjCiJ,GAAyB,KAAK,CAAC4D,MAC9B7M,EAAE,MAAM,SAAS6M,CAAO,CAAC,KAKbyE,EAAA,OAAO,KAAKtR,CAAC;IAAA,GAE5B,EAAE,oBAAoB,KAAK,mBAAA,CAAoB,CAC/C,GAEE,KAAK,QAAQ,qBAChB,OAAO,8BAAgC,EAAE,KAAK,CAAC,EAAE,UAAAwR,EAAAA,MAAc;AACzD,WAAA,UAAU,KAAKA,CAAQ;IAAA,CAC5B,GAEiBH,GAAA,qBAAqB,MAAM,KAAK,OAAO;EAC3D;EAEA,gBAAa;AACZ,SAAK,UAAU,QAAQ,CAACI,MAAqBA,EAAM,CAAA,GACnD,KAAK,YAAY,CAAA;EAClB;;;EAIA,OAAO,qBACNC,GACAlP,GAA8B;ApBlJzB,QAAArB,GAAAsG,GAAAC,GAAAC,GAAAgK,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC;AoBoJLR,MAAM,eACLlP,KAAA,OAAA,SAAAA,EAAS,eACT+J,GAAgB,8BAChB,6BAEDmF,EAAM,qBAAqB,CAAA,GAC3BA,EAAM,uBAAuB,CAAA,GAC7BA,EAAM,2BAA2B,CAAA,GACjCA,EAAM,yBAAyB,CAAA,GAC/BA,EAAM,yBAAyB,CAAA,GAC/BA,EAAM,eAAe,CAAA,GACfA,EAAA,iBAAiBlP,EAAQ,kBAAkB,CAAA,IAG7CA,KAAA,OAAA,SAAAA,EAAS,6BAA4B,UACxCkP,EAAM,0BAA0BlP,KAAA,OAAA,SAAAA,EAAS,yBACzCkP,EAAM,iCAAiC,OACvCA,EAAM,oCAAoC,MAC1CA,EAAM,yBAAyB,CAAA,GAC/BA,EAAM,0BAA0B,CAAA,GAChCA,EAAM,eAAe,CAAA,GACrBA,EAAM,0BAA0B,CAAA,GAChCA,EAAM,0BAA0B,CAAA,KACtB,QAAOlP,KAAA,OAAA,SAAAA,EAAS,qBAAqB,aACzCkP,EAAA,0BAA0B,CAAClP,EAAQ,kBACzCkP,EAAM,iCAAiC,OACvCA,EAAM,oCAAoC,MAC1CA,EAAM,yBAAyB,CAAA,GAC/BA,EAAM,0BAA0B,CAAA,GAChCA,EAAM,eAAe,CAAA,QAEjBvQ,IAAAqB,EAAQ,qBAAR,OAAA,SAAArB,EAA0B,aAAY,SACnCuQ,EAAA,0BACL,CAAClP,EAAQ,iBAAiB,UAE3BkP,EAAM,0BAA0B,OAE3BA,EAAA,mCACLjK,IAAAjF,EAAQ,qBAAR,OAAA,SAAAiF,EAA0B,yBAAwB,OAC7CiK,EAAA,sCACLhK,IAAAlF,EAAQ,qBAAR,OAAA,SAAAkF,EAA0B,oCAC1B,OACKgK,EAAA,2BACLC,KAAAhK,IAAAnF,EAAQ,qBAAR,OAAA,SAAAmF,EAA0B,2BAA1B,OAAA,SAAAgK,EAAkD,IACjD,CAACjI,MAAWA,EAAO,YAAa,CAAA,MAC5B,CAAA,GACAgI,EAAA,4BACLG,KAAAD,IAAApP,EAAQ,qBAAR,OAAA,SAAAoP,EAA0B,4BAA1B,OAAA,SAAAC,EAAmD,IAClD,CAACM,MAAYA,EAAQ,YAAa,CAAA,MAC9B,CAAA,GACAT,EAAA,iBACLK,KAAAD,IAAAtP,EAAQ,qBAAR,OAAA,SAAAsP,EAA0B,iBAA1B,OAAA,SAAAC,EAAwC,IAAI,CAACtH,MAC5CA,EAAI,YAAa,CAAA,MACb,CAAA,GACNiH,EAAM,eAAe;MACpB,GAAGA,EAAM;MACT,GAAG9H;IAAA,GAGE8H,EAAA,4BACLM,IAAAxP,EAAQ,qBAAR,OAAA,SAAAwP,EAA0B,0BAErBN,EAAA,6BACLO,IAAAzP,EAAQ,qBAAR,OAAA,SAAAyP,EAA0B,oBAEvBP,EAAM,8BACTA,EAAM,yBAAyB,CAAA,GACzBA,EAAA,4BACLA,EAAM,0BAA0B,IAAI,CAACrP,MACpCA,EAAI,kBAAA,CAAmB,IAIpBqP,EAAA,2BACLQ,IAAA1P,EAAQ,qBAAR,OAAA,SAAA0P,EAA0B,kBAEvBR,EAAM,4BACTA,EAAM,0BAA0B,CAAA,GAC1BA,EAAA,0BACLA,EAAM,wBAAwB,IAAI,CAACrP,MAClCA,EAAI,kBAAA,CAAmB,KAM1B,CAACqP,EAAM,2BACPA,EAAM,kCAEAA,EAAA,UAAU,KACfd,GAAgB;MACf,aAAa,CAAC5E,MAAuB;AAC9B0F,UAAA,mBAAmB,KAAK1F,CAAmB;MAClD;MACA,eAAe,CAACA,MAAuB;AAChC0F,UAAA,qBAAqB,KAAK1F,CAAmB;MACpD;MACA,0BAA0B,CAACxF,MAAS;AAC/BkL,UAAM,4BACHA,EAAA,yBAAyB,KAAKlL,CAAK;MAE3C;MACA,wBAAwB,CAACA,MAAS;AAC3BkL,UAAA,uBAAuB,KAAKlL,CAAK;MACxC;MACA,2BACCkL,EAAM;MACP,kBAAkBA,EAAM;MACxB,YAAYA,EAAM;MAClB,gBAAgBA,EAAM;MACtB,cAAcA,EAAM;MACpB,iBAAiBlP,EAAQ;MACzB,kBAAkBkP,EAAM;IACxB,CAAA,CAAC;EAGL;EAEA,OAAO,4BACNA,GACAU,GAA0B;ApB5QrB,QAAAjR,GAAAsG;AoB8QL,QAAI4K,IAAkD,CAAA,GAClDC,IAA8C,CAAA;AAE9C,QAAA,CAACZ,EAAM,yBAAyB;AAC7B,YAAAa,MAAqBpR,IAAA,UAAA,OAAA,SAAA,OAAQ,gBAAR,OAAA,SAAAA,EAAqB,eAAc;AAE9CkR,UAAA,YAAY,iBAC3B,UAAU;AAKL,YAAAlG,KAAUiG,IAAqBG,KAAsB;AA2B3D,UAzBgBF,IAAAA,EACd,OAAO,CAACxS,MACJA,EAAE,cAAc6R,EAAM,8BAClB,QAGDlF,EACN3M,EAAE,MACF6R,EAAM,aACNA,EAAM,cAAc,CAErB,EACA,IAAI,CAACvI,MACEK,EAAAtC,EAAA,CAAA,GACHiC,EAAS,OAAQ,CAAA,GADd;QAEN,iBAAiBA,EAAS,YAAYgD;QACtC,mBAAmBhD,EAAS,cAAcgD;QAC1C,kBAAkBhD,EAAS,aAAagD;MAAA,CAAA,CAEzC,GAEFuF,EAAM,gCACLjK,IAAA4K,EAAc,GAAG,EAAE,MAAnB,OAAA,SAAA5K,EAAsB,gBACtBiK,EAAM,6BAEHA,EAAM,gCAAgC;AACzC,cAAMhG,IAAkB;UACvB,iBAAiBgG,EAAM;UACvB,iBAAiBA,EAAM;UACvB,0BAA0BA,EAAM;QAAA;AAGjCW,YAAgB/G,GACf+G,GACAX,EAAM,oBACN,kBACAhG,CAAe,GAEhB2G,IAAgB/G,GACf+G,GACAX,EAAM,sBACN,SACAhG,CAAe;MAEjB;IACD;AAEI,WAACgG,EAAM,sCACWY,IAAAZ,EAAM,4BAA4B,CAAA,IAGjD,CAAC,GAAGW,GAAe,GAAGC,CAAkB;EAChD;EAEA,OAAO,2BACNZ,GAAyB;AAEzB,QAAIc,IAAyC,CAAA;AAE7C,WACC,CAACd,EAAM,2BACP,CAACA,EAAM,sCAEPc,IAAkBd,EAAM,yBAGlBc;EACR;EAEA,OAAO,8BAA8Bd,GAAyB;AACxDA,MAAM,4BACVA,EAAM,qBAAqB,CAAA,GAC3BA,EAAM,uBAAuB,CAAA,GAC7BA,EAAM,2BAA2B,CAAA,GACjCA,EAAM,yBAAyB,CAAA,GAC/B,YAAY,qBAAoB;EAElC;AACA;ACpXM,IAAMe,KAAmB,MAAa;ArBUtC,MAAAtR;AqBRN,QAAMuR,IACL;AACD,MAAIC,IAAW;AAEf,QAAMC,IACL,OAAO,UAAW,iBAAezR,IAAA,OAAO,WAAP,OAAA,SAAAA,EAAe,kBAC3C0R,IAAe,IAAI,YAAY,EAAS;AAC1CD,OACI,OAAA,OAAO,gBAAgBC,CAAY;AAG3C,WAAS/S,IAAI,GAAGA,IAAI,IAAWA;AAC1B8S,QACHD,KAAYD,EAAc,OACzBG,EAAa/S,CAAC,IAAI4S,EAAc,MAAM,IAG3BC,KAAAD,EAAc,OACzB,KAAK,MAAM,KAAK,OAAA,IAAWA,EAAc,MAAM,CAAC;AAK5C,SAAAC;AACR;AG1BA,IAAAG,KAAe;AAAf,ICSaC,IAA0B,MAAK;AACvC,MAAA,OAAO,UAAW,aAAa;AAE9B,QAAA,OAAO,OAAO,wBAAyB;AAC1C;AAED,WAAO,iBAAiB,OAAO,OACxB,OAAA,cAAc,CACpBC,GACAC,MAEO,OAAO,eAAeD,GAAOC,CAAI,GAGlC,OAAA,uBAAuB,CAC7BD,GACAC,MAEO,OAAO,YAAY,KAAK,UAAU,QAAQD,GAAOC,CAAI,GAG7D,OAAO,QAAQ,OAAO;EACvB;AACD;ADhCA,IEKMC,KAAsB,MAAM;AFLlC,IEOaC,IAA8B,MAAK;AAC3C,MAAA,OAAO,UAAW,aAAa;AAE9B,QAAA,OAAO,OAAO,sCAAuC;AACxD;AAGD,WAAO,qCAAqCD,IAC5C,OAAO,mCAAmCA;AAE1C,UAAME,IAAiB,IAAI,MAAM,OAAO,WAAW;MAClD,UACCC,GACAC,GAAkD;AAElD,cAAM,CAAG,EAAAC,CAAQ,IAAIC,EAAAA,GACfC,IAAY,IAAIJ,EAAO,GAAGC,CAAI,GAE9BI,IAAc,CAACC,MAAgB;AACpC,iBAAO,mCAAmC;YACzC,UAAAJ;YACA,eAAe;YACf,MAAM;YACN,MAAME,EAAU;YAChB,cAAc,YAAY,aAAaE,EAAM;UAAA,CAC7C;QAAA,GAGIC,IAAe,CAACD,MAAqB;AAC1C,iBAAO,mCAAmC;YACzC,UAAAJ;YACA,eAAe;YACf,MAAM;YACN,MAAME,EAAU;YAChB,gBACC,YAAY,aAAaE,EAAM;UAAA,CAChC,GAESF,EAAA,oBAAoB,QAAQC,CAAW,GACvCD,EAAA,oBAAoB,SAASI,CAAY,GACzCJ,EAAA,oBAAoB,WAAWK,CAAc,GAC7CL,EAAA,oBAAoB,SAASG,CAAY;QAAA,GAG9CE,IAAiB,CAACH,MAAuB;AACxC,gBAAA,EAAE,MAAAI,EAAS,IAAAJ,GACXK,IACL,OAAOD,KAAS,WAAWJ,EAAM,OAAO;AAErC,cAAAM;AACA,iBAAOF,KAAS,WACnBE,IAAOF,EAAK,SACFA,aAAgB,OAC1BE,IAAOF,EAAK,OAEZE,IAAOF,EAAK,cAAc,GAG3B,OAAO,iCAAiC;YACvC,UAAAR;YACA,MAAM;YACN,MAAME,EAAU;YAChB,WAAW,YAAY,aAAaE,EAAM;YAC1C,MAAAM;YACA,SAAAD;UAAA,CACA;QAAA,GAGIH,IAAe,CAACF,MAAgB;AACrC,iBAAO,iCAAiC;YACvC,UAAAJ;YACA,MAAM;YACN,MAAME,EAAU;YAChB,WAAW,YAAY,aAAaE,EAAM;YAC1C,MAAM;UAAA,CACN;QAAA;AAGQF,UAAA,iBAAiB,QAAQC,CAAW,GACpCD,EAAA,iBAAiB,SAASI,CAAY,GACtCJ,EAAA,iBAAiB,WAAWK,CAAc,GAC1CL,EAAA,iBAAiB,SAASG,CAAY;AAEhD,cAAMM,IAAY,IAAI,MAAMT,EAAU,MAAM;UAC3C,OAAO,SACNU,GACAC,GACAd,GAAyC;AAEnC,kBAAAS,IAAOT,EAAK,CAAC,GACbU,IACL,OAAOD,KAAS,WAAWA,IAAO;AAE/B,gBAAAE;AACA,mBAAOF,KAAS,WACnBE,IAAOF,EAAK,SACFA,aAAgB,OAC1BE,IAAOF,EAAK,OAEZE,IAAOF,EAAK,cAAc,GAG3B,OAAO,iCAAiC;cACvC,UAAAR;cACA,MAAM;cACN,MAAME,EAAU;cAChB,WACC,YAAY,aAAa,YAAY,IAAK;cAC3C,MAAAQ;cACA,SAAAD;YAAA,CACA,GAEUG,EAAA,MAAMC,GAASd,CAAI;UAC/B;QAAA,CACA;AAED,eAAAG,EAAU,OAAOS,GAEVT;MACR;IAAA,CACA;AAED,WAAO,YAAYL;EACpB;AACD;AFnIA,IGEaiB,KAAiC,MAAK;A3BQ5C,MAAAC,GAAAC;A2BNF,SAAO,UAAW,iBAAeD,IAAA,UAAA,OAAA,SAAA,OAAQ,YAAR,QAAAA,EAAiB,gBACrDC,IAAA,UAAA,OAAA,SAAA,OAAQ,YAAR,QAAAA,EAAiB,UAAU,YAC1B,CAACP,GAASQ,GAASC,MAAgB;AAClC,UAAMC,IAASV,EAAQ;AAIvB,YAHQ,QAAA,IACP,yBAAyBU,CAAM,yBAAyB,GAEjDA,GAAQ;MACf,KAAK,QAAQ;AACZC,UAAE,KAAK,GAAG;UACT,OAAO;QAAA,CACP,GACDA,EAAE,cAAe,EAAC,KAAK,CAACC,MAAO;AACjBH,YAAA,EAAE,KAAAG,EAAAA,CAAK;QAAA,CACpB;AACD;MACD;MACA,KAAK,QAAQ;AACZD,UAAE,KAAI,GACOF,EAAA,EAAE,SAAS,KAAA,CAAM;AAC9B;MACD;IAID;AACO,WAAA;EAAA,CAAA;AAIX;ACEK,IAAAI;CAAL,SAAKA,GAAc;AAClBA,IAAA,SAAA,UACAA,EAAA,WAAA,YACAA,EAAA,WAAA,YACAA,EAAA,UAAA;AACD,GALKA,MAAAA,IAKJ,CAAA,EAAA;AAED,IAAMC,IAAmB,CAACC,GAAiBC,MAAY;AACtD,UAAQ,KAAK,2BAA2BD,CAAO,OAAOC,CAAG;AAC1D;AAFA,IAeMC,KAAqB;AAI3B,IAAIC,IAGE,CAAA;AAHN,IAIIC;AAJJ,IAMIC;AANJ,IAOIC;AAPJ,IAQIC,KAAc;AARlB,IAUIC;AACJ,IAAMZ,IAA8B;EACnC,SAAS;EACT,MAAM,CAACa,GAA6BC,MAA8B;A5BjE5D,QAAAnB,GAAAC,GAAAmB,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC;A4BkED,QAAA;AAIH,UAHApB,EAAE,UAAUc,GAIX,OAAO,UAAW,eAClB,OAAO,YAAa;AAEpB;AAID,UAAI,CAACD,GAAW;AACf,gBAAQ,KACP,uEAAuE;AAExE;MACD;AAEA,UAAIQ,IAAkBC,GAAAA,GAClBC,IAAkBC,GAAAA;AACtB,UAAIH,KAAA,QAAAA,EAAiB;AACpBE,YAAkBF,EAAgB;WAC5B;AACN,cAAMI,IAA2BC,EAAAC,EAAA,CAAA,GAC7BN,CAAAA,GAD6B;UAEhC,WAAW,CAACR;UACZ,iBAAAU;QAAA,CAAA;AAGDK,WACCC,EAAqB,cACrB,KAAK,UAAUJ,CAAW,CAAC;MAE7B;AAGA,UAAId;AACH,eAAO,EAAE,iBAAAY,EAAe;AAEXZ,WAAA,MAEVG,KAAA,QAAAA,EAAS,qBACL,OAAA,8BAAgC,EAAE,KACxC,CAAC,EAAE,qBAAAgB,GAAqB,WAAWC,EAAAA,MAAmB;A5B9GpD,YAAApC,GAAAC;A4B+GmBkC,UAAA;UACnB,UAAUhB,KAAA,OAAA,SAAAA,EAAS;UACnB,WAAWD;UACX,iBAAiBU;UACjB,cAAa5B,IAAAmB,KAAA,OAAA,SAAAA,EAAS,gBAAT,OAAAnB,IAAwB;UACrC,yBACC,QAAOmB,KAAA,OAAA,SAAAA,EAAS,qBAAqB,WAClCA,EAAQ,mBACR;UACJ,gBAAgBA,KAAA,OAAA,SAAAA,EAAS;UACzB,cACClB,IAAAkB,KAAA,OAAA,SAAAA,EAAS,gBAAT,OAAAlB,IAAwB;QAAA,CACzB,GACWgB,IAAAmB;MAAA,CACZ,GAAA,EAAA,GAAA,EAAA,GAMH,OAAO,8BAAuB,EAAA,KAAA,CAAAC,MAAAA,EAAA,CAAA,EAAE,KAAK,CAAOC,MAAiBC,EAAA,QAAA,CAAjBD,CAAAA,GAAiB,WAAjB,EAAE,WAAAE,EAAAA,GAAe;AAC5C1B,YAAA,IAAI0B,EACnBC,GACA1B,CAAoB,GAAA,EAAA,GAAA,EAAA,GAIhBI,KAAA,QAAAA,EAAS,gBACb,MAAML,EAAc,WAAA;MACrB,CAAA,CACA;AAED,YAAM2B,IAAwC;QAC7C,gBAAgBvB;QAChB,OAAOC,KAAA,OAAA,SAAAA,EAAS;QAChB,YAAYA,KAAA,OAAA,SAAAA,EAAS;QACrB,gBAAgBA,KAAA,OAAA,SAAAA,EAAS;QACzB,yBAAyBA,KAAA,OAAA,SAAAA,EAAS;QAClC,kBAAkBA,KAAA,OAAA,SAAAA,EAAS;QAC3B,4BAA4BA,KAAA,OAAA,SAAAA,EAAS;QACrC,yBAAyBA,KAAA,OAAA,SAAAA,EAAS;QAClC,yBAAyBA,KAAA,OAAA,SAAAA,EAAS;QAClC,qBAAqBA,KAAA,OAAA,SAAAA,EAAS;QAC9B,wBAAwBA,KAAA,OAAA,SAAAA,EAAS;QACjC,gBAAgBA,KAAA,OAAA,SAAAA,EAAS;QACzB,0BAA0BA,KAAA,OAAA,SAAAA,EAAS;QACnC,uBAAuBA,KAAA,OAAA,SAAAA,EAAS;QAChC,4BAA4BA,KAAA,OAAA,SAAAA,EAAS;QACrC,oBAAoBA,KAAA,OAAA,SAAAA,EAAS;QAC7B,kBAAkBA,KAAA,OAAA,SAAAA,EAAS;QAC3B,cAAcA,KAAA,OAAA,SAAAA,EAAS;QACvB,kBAAkBA,KAAA,OAAA,SAAAA,EAAS;QAC3B,yBAAyBA,KAAA,OAAA,SAAAA,EAAS;QAClC,kBAAA3C;QACA,cAAa2C,KAAA,OAAA,SAAAA,EAAS,gBAAe;QACrC,YAAYA,KAAA,OAAA,SAAAA,EAAS;QACrB,aAAaA,KAAA,OAAA,SAAAA,EAAS;QACtB,iBAAiBA,KAAA,OAAA,SAAAA,EAAS;QAC1B,iBAAAS;QACA,aAAaT,KAAA,OAAA,SAAAA,EAAS;QACtB,UAAUA,KAAA,OAAA,SAAAA,EAAS;MAAA;AAEG,aAAAJ,IAAA,IAAI2B,EAAmBD,CAAc,GACvDtB,KAAA,QAAAA,EAAS,eAGbJ,EAAqB,eAAc,GAInC,GAACd,KAAAD,IAAAmB,KAAA,OAAA,SAAAA,EAAS,iBAAT,OAAA,SAAAnB,EAAuB,aAAvB,QAAAC,EAAiC,eAClCoB,KAAAD,IAAAD,KAAA,OAAA,SAAAA,EAAS,iBAAT,OAAA,SAAAC,EAAuB,aAAvB,QAAAC,EAAiC,iBAERsB,GAAAxB,EAAQ,aAAa,QAAQ,GAItD,GAACI,KAAAD,IAAAH,KAAA,OAAA,SAAAA,EAAS,iBAAT,OAAA,SAAAG,EAAuB,cAAvB,QAAAC,EAAkC,eACnCE,KAAAD,IAAAL,KAAA,OAAA,SAAAA,EAAS,iBAAT,OAAA,SAAAK,EAAuB,cAAvB,QAAAC,EAAkC,WAERmB,GAAAzB,EAAQ,aAAa,SAAS,GAGlD,EAAE,iBAAAS,EAAe;IAAA,SAChBiB,GAAG;AACXrC,QAAiB,QAAQqC,CAAC;IAC3B;EACD;EACA,UAAU,CAAOC,MAA8BP,EAAA,QAAA,MAAA,aAAA;AAC1C,QAAA;AACC,UAAAzB,KAAiBA,EAAc;AAC3B,eAAA,MAAMA,EAAc,SAASgC,CAAO;IAAA,SAEpC,GAAG;AACXtC,QAAiB,YAAY,CAAC;IAC/B;EACD,CAAA;EACA,oBAAoB,CAAC,EACpB,UAAAuC,GACA,UAAAC,GACA,WAAAC,GACA,mBAAAC,EAAAA,MACI;AACA,QAAA;AACD7C,QAAA,iBAAiB,MAClBS,EAAc,mBAAmB;QAChC,UAAAiC;QACA,WAAWG,MAAyB,oBAAA,KAAA,GAAO,YAAa;QACxD,YAAYD;QACZ,WAAWD;MACX,CAAA,CAAC;IAAA,SAEKH,GAAG;AACXrC,QAAiB,SAASqC,CAAC;IAC5B;EACD;EACA,cAAc,CACbM,GACAzD,GACA0D,MACG;AACC,QAAA;AACD/C,QAAA,iBAAiB,MAClBS,EAAc,mBACbqC,GACAzD,GACA,KAAK,UAAU0D,CAAO,CAAC,CACvB;IAAA,SAEMP,GAAG;AACXrC,QAAiB,SAASqC,CAAC;IAC5B;EACD;EACA,SAAS,CACRM,GACAE,MAMG;AACC,QAAA;AACHhD,QAAE,iBAAiB,MAAMS,EAAc,aAAaqC,GAAOE,CAAI,CAAC;IAAA,SACxDR,GAAG;AACXrC,QAAiB,SAASqC,CAAC;IAC5B;EACD;EACA,OAAO,CAACnD,GAAiB0D,MAAuC;AAC3D,QAAA;AACD/C,QAAA,iBAAiB,MAClBS,EAAc,gBAAgBpB,GAAS,KAAK,UAAU0D,CAAO,CAAC,CAAC;IAAA,SAExDP,GAAG;AACXrC,QAAiB,SAASqC,CAAC;IAC5B;EACD;EACA,OAAO,CAACxD,GAAeiE,IAAqB,CAAA,MAAM;A5B5Q5C,QAAAtD,GAAAC,GAAAmB,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA8B,GAAAC,GAAAC;A4B6QD,QAAA;AACDpD,QAAA,iBAAiB,MAClBS,EAAc,cAAciB,EAAAC,EAAA,CAAA,GAAKsB,CAAAA,GAAL,EAAe,OAAAjE,EAAc,CAAA,CAAA,CAAC;AAErD,YAAAqE,IAAe5C,KAAA,OAAA,SAAAA,EAAe,qBAAA;AAEpC,OAAKM,KAAAnB,KAAAD,IAAAK,EAAE,YAAF,OAAA,SAAAL,EAAW,iBAAX,OAAA,SAAAC,EAAyB,aAAzB,QAAAmB,EAAmC,aACnCC,IAAA,OAAO,aAAP,QAAAA,EAAiB,SACb,OAAA,SAAS,MAAMhC,GAAO0C,EAAAC,EAAA,CAAA,GACzBsB,CAAAA,GADyB;QAE5B,qBAAqBI;MAAA,CAAA,CACrB,IAIElC,KAAAD,KAAAD,IAAAjB,EAAE,YAAF,OAAA,SAAAiB,EAAW,iBAAX,OAAA,SAAAC,EAAyB,cAAzB,QAAAC,EAAoC,aACpCC,IAAA,OAAO,cAAP,QAAAA,EAAkB,eACrB,OAAO,UAAU,YAAA,EAAc,SAASpC,GAAO0C,EAAAC,EAAA,CAAA,GAC3CsB,CAAAA,GAD2C;QAE9C,qBAAqBI;MAAA,CAAA,CACrB,IAIED,KAAAD,KAAAD,IAAAlD,EAAE,YAAF,OAAA,SAAAkD,EAAW,iBAAX,OAAA,SAAAC,EAAyB,aAAzB,QAAAC,EAAmC,YACnC,OAAO,YACH,OAAA,SAAS,cAAcpE,GAAOiE,CAAQ;IAAA,SAGvCT,GAAG;AACXrC,QAAiB,SAASqC,CAAC;IAC5B;EACD;EACA,OAAO,CAAC1B,MAAW;AAClB,KAAIL,KAAA,OAAA,SAAAA,EAAe,WAAU,eAAe,EAACK,KAAA,QAAAA,EAAS,YAChDA,KAAA,QAAAA,EAAS,UACb,QAAQ,KACP,kGAAkG,KAIpGJ,EAAqB,eAAc,GACnCV,EAAE,iBACD,MAAWkC,EAAA,QAAA,MAAA,aAAA;AACJ,YAAAzB,EAAc,WAAWK,CAAO;IAAA,CAAA,GAEvC,EAAE,cAAc,MAAA,CAAO;EAG1B;EACA,MAAM,CAACA,MAAW;AACb,KAAAL,KAAA,OAAA,SAAAA,EAAe,WAAU,cACvBK,KAAA,QAAAA,EAAS,UACb,QAAQ,KACP,wDAAwD,IAI1Dd,EAAE,iBAAiB,MAAMS,EAAc,cAAc,IAAI,CAAC;EAE5D;EACA,UAAU,CAAC6C,GAAoBL,IAAqB,CAAA,MAAM;A5B1UpD,QAAAtD,GAAAC,GAAAmB,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC;A4B2UD,QAAA;AACHpB,QAAE,iBAAiB,MAClBS,EAAc,SAAS6C,GAAYL,CAAQ,CAAC;IAAA,SAErCT,GAAG;AACXrC,QAAiB,YAAYqC,CAAC;IAC/B;AAeA,SAdKzB,KAAAnB,KAAAD,IAAAK,EAAE,YAAF,OAAA,SAAAL,EAAW,iBAAX,OAAA,SAAAC,EAAyB,aAAzB,QAAAmB,EAAmC,aACnCC,IAAA,OAAO,aAAP,QAAAA,EAAiB,aACb,OAAA,SAAS,SACf,QAAOiC,KAAA,OAAA,SAAAA,EAAU,UAAU,WACxBA,KAAA,OAAA,SAAAA,EAAU,QACVK,CAAU,GAEVL,MACI,OAAA,SAAS,MAAM,YAAYA,CAAQ,GACnC,OAAA,SAAS,OAAO,IAAIA,CAAQ,KAKlC,GAAC9B,KAAAD,KAAAD,IAAAjB,EAAE,YAAF,OAAA,SAAAiB,EAAW,iBAAX,OAAA,SAAAC,EAAyB,cAAzB,QAAAC,EAAoC,cACpCC,IAAA,OAAO,cAAP,QAAAA,EAAkB,gBACrB,OAAO,UAAU,YAAc,EAAA,UAAUkC,CAAU,GAE/C,OAAO,KAAKL,CAAQ,EAAE,SAAS,IAAG;AAC/B,YAAAM,IAA0B,OAAO,KACtCN,CAAQ,EACP,OAAO,CAACO,GAAKC,OACdD,EAAI,IAAIC,GAAKR,EAASQ,CAAG,CAAC,GAEnBD,IACL,IAAI,OAAO,UAAU,SAAU,CAAA;AAElC,aAAO,UACL,YACA,EAAA,SAASD,CAAuB;IACnC;EAGH;EACA,SAAS,CAACG,MAAqB;AAC1B,QAAA;AACH1D,QAAE,iBAAiB,MAClBS,EAAc,aACbiD,EAAQ,IAAI,CAACC,MAAOjC,EAAAC,EAAA,CAAA,GAChBgC,CAAAA,GADgB;QAEnB,UAAUzD,EAAe;MAAA,CAAA,CACxB,CAAC,CACH;IAAA,SAEM,GAAG;AACXC,QAAiB,WAAW,CAAC;IAC9B;EACD;EACA,WAAW,CACVyD,GACA9C,GACAV,GACAyD,MACQ;AACR,UAAMC,IAAS,OAAOlD,KAAc,aAAaA,EAAAA,IAAc;AAC/D,QAAI,CAACkD;AACA,aAAA,OAAOD,KAAO,aACVA,EAAAA,IAER;AAGK,UAAAE,IAAe,CACpBC,GACAC,MACG/B,EAAA,QAAA,MAAA,aAAA;AACC,UAAA;AAEI,eADQ,MAAM+B,EAASD,CAAI;MAC3B,UAAA;AAEPA,UAAK,IAAG;MACT;IAAA,CAAA;AAGG,WAAAH,MAAO,UAAazD,MAAY,SAC5B0D,EAAO,gBAAgBF,GAAM,CAACI,MACpCD,EAAaC,GAAMlD,CAAmB,CAAC,IAE9B+C,MAAO,SACVC,EAAO,gBACbF,GACA9C,GACA,CAACkD,MAASD,EAAaC,GAAM5D,CAAmB,CAAC,IAG3C0D,EAAO,gBACbF,GACA9C,GACAV,GACA,CAAC4D,MAASD,EAAaC,GAAMH,CAAE,CAAC;EAGnC;EACA,iBAAiB,CAChBD,GACA9C,GACAV,GACAyD,MACQ;AACJ,QAAA,OAAOjD,KAAc;AACxB;AAGD,UAAMkD,IAASlD,EAAAA;AAEX,WAAAiD,MAAO,UAAazD,MAAY,SAC5B0D,EAAO,gBAAgBF,GAAM9C,CAAmB,IAC7C+C,MAAO,SACVC,EAAO,gBACbF,GACA9C,GACAV,CAAmB,IAGb0D,EAAO,gBACbF,GACA9C,GACAV,GACAyD,CAAE;EAGL;EACA,eAAe,MACP,IAAI,QAAgB,CAACK,GAASC,MAAU;AAC9C,UAAMC,IAAMC,GAAAA;AACRD,QACHF,EAAQE,CAAG,IAEJD,EAAA,IAAI,MAAM,2BAA2B,CAAC;EAC9C,CACA;EAEF,mBAAmB,MACX,IAAI,QAAwB,CAACD,GAASC,MAAU;AACtDnE,MAAE,iBAAiB,MAAK;AACjB,YAAAsE,IAAU7D,EAAc,qBAAA;AAC9B,UAAI6D,GAAS;AACN,cAAAC,IACL9D,EAAc,2BAAA,GACT+D,KAAM,oBAAI,KAAA,GAAO,QAAA,GACjBvE,IAAM,IAAI,IAAIqE,CAAO,GACrBG,IAAmB,IAAI,IAAIH,CAAO;AACxCG,UAAiB,aAAa;UAC7B;;YAEED,IAAMD,KAA2B,KAAM,SAAU;QAAA,GAG5CL,EAAA;UACP,KAAKjE,EAAI,SAAU;UACnB,kBAAkBwE,EAAiB,SAAU;QAAA,CAC7C;MAAA;AAEMN,UAAA,IAAI,MAAM,2BAA2B,CAAC;IAC9C,CACA;EAAA,CACD;EAEF,mBAAmB,MAAK;A5BhflB,QAAAxE;A4BifL,YAAOA,IAAAc,KAAA,OAAA,SAAAA,EAAe,UAAf,OAAAd,IAAwB;EAChC;EACA,kBAAkB,CAAC+E,GAAM5D,MAAW;AAEnC,QADAP,EAAsB,KAAK,EAAE,SAAAO,GAAS,MAAA4D,EAAM,CAAA,GACxClE,MAA4B,QAAW;AAC1C,YAAMqD,IAAK,MAAK;A5BtfZ,YAAAlE;A4BufH,cAAMgF,IAGA,CAAA;AACN,mBAAWC,KAAKrE;AAEdE,kBACCd,IAAAiF,EAAE,YAAF,OAAA,SAAAjF,EAAW,kBAAiB,SAC5Bc,EAAc,SAEfmE,EAAE,KAAI,IAEND,EAAyB,KAAKC,CAAC;AAGTrE,YAAAoE,GACEnE,IAAA,QACtBD,EAAsB,SAAS,MACRC,IAAA,WACzBqD,GACAvD,EAAkB;MAEpB;;IAGF;EACD;;AAGG,OAAO,UAAW,gBACrB,OAAO,IAAIN;AAGZN,GAAAA;AACAtB,EAAAA;AACAI,EAAAA;",
  "names": ["setupAmplitudeIntegration", "apiKey", "t", "n", "r", "i", "s", "e", "o", "a", "u", "l", "p", "d", "v", "SESSION_STORAGE_KEYS", "setupMixpanelIntegration", "projectToken", "f", "b", "h", "c", "g", "j", "script", "MixpanelBundle", "_a", "patch", "source", "name", "replacement", "original", "wrapped", "pathToSelector", "node", "path", "parent", "domSiblings", "sibling", "isObject", "obj", "isObjTooDeep", "limit", "keys", "key", "stringify", "stringifyOptions", "options", "stack", "value", "thisPos", "shouldIgnore", "toString", "eventResult", "eventKey", "eventValue", "_obj", "str", "root", "factory", "module", "this", "_isNumber", "_capitalize", "_getter", "booleanProps", "numericProps", "stringProps", "arrayProps", "objectProps", "props", "StackFrame", "fileName", "lineNumber", "columnNumber", "functionName", "argsStartIndex", "argsEndIndex", "args", "locationString", "parts", "k", "require$$0", "FIREFOX_SAFARI_STACK_REGEXP", "CHROME_IE_STACK_REGEXP", "SAFARI_NATIVE_CODE_REGEXP", "error", "urlLike", "regExp", "filtered", "line", "sanitizedLine", "location", "tokens", "locationParts", "functionNameRegex", "matches", "lineRE", "lines", "result", "len", "match", "functionCall", "argsRaw", "ConsoleListener", "callback", "logOptions", "loggerType", "logger", "cancelHandlers", "errorHandler", "event", "message", "trace", "ErrorStackParser", "payload", "levelType", "replace", "_logger", "level", "data", "__spreadValues", "exports", "serializer", "replacer", "spaces", "cycleReplacer", "handleError", "_b", "_c", "_d", "res", "framesToUse", "removeHighlightFrameIfExists", "ErrorListener", "enablePromisePatch", "initialOnError", "lineno", "colno", "initialOnUnhandledRejection", "hPromise", "initialPromise", "highlightPromise", "executor", "__publicField", "zoneUndefined", "frames", "firstFrame", "ALL_CONSOLE_METHODS", "MetricName", "MetricCategory", "ERRORS_TO_IGNORE", "ERROR_PATTERNS_TO_IGNORE", "sanitizeResource", "resource", "headersToRedact", "headersToRecord", "newHeaders", "sanitizeHeaders", "__spreadProps", "headers", "header", "SENSITIVE_HEADERS", "DEFAULT_URL_BLOCKLIST", "mode", "Storage", "globalStorage", "getPersistentStorage", "getItem", "setItem", "SESSION_PUSH_THRESHOLD", "getPreviousSessionData", "storedSessionData", "getSessionSecureID", "HIGHLIGHT_REQUEST_HEADER", "normalizeUrl", "url", "urlToMutate", "sanitizeRequestResponsePair", "pair", "requestResponseSanitizer", "sanitizedPair", "stringifyRequestBody", "err", "stringifyResponseBody", "request", "response", "rest", "__objRest", "matchPerformanceTimingsWithRequestResponsePair", "performanceTimings", "requestResponsePairs", "type", "sanitizeOptions", "initialGroupedPerformanceTimings", "groupedPerformanceTimings", "previous", "performanceTiming", "groupedRequestResponsePairs", "requestResponsePair", "performanceTimingsForUrl", "requestResponsePairsForUrl", "offset", "resources", "isHighlightNetworkResourceFilter", "backendUrl", "define_import_meta_env_default", "shouldNetworkRequestBeRecorded", "highlightBackendUrl", "tracingOrigins", "shouldNetworkRequestBeTraced", "patterns", "pattern", "makeId", "length", "characters", "charactersLength", "createNetworkRequestId", "getHighlightRequestHeader", "sessionSecureID", "requestId", "XHRListener", "urlBlocklist", "bodyKeysToRedact", "bodyKeysToRecord", "XHR", "originalOpen", "originalSend", "originalSetRequestHeader", "method", "blockedUrl", "postData", "shouldRecordHeaderAndBody", "requestModel", "bodyData", "getBodyData", "getBodyThatShouldBeRecorded", "__async", "responseModel", "normalizedResponseHeaders", "headerMap", "DEFAULT_BODY_LIMIT", "BODY_SIZE_LIMITS", "bodyLimit", "contentType", "json", "element", "FetchListener", "originalFetch", "input", "init", "getFetchRequestProperties", "responsePromise", "logRequest", "requestPayload", "onPromiseResolveHandler", "responsePayload", "requestHandled", "urlBlocked", "getResponseBody", "text", "body", "reader", "utf8Decoder", "nextChunk", "partialData", "WebSocketListener", "requestCallback", "eventCallback", "initialHighlightWebSocketRequestCallback", "initialHighlightWebSocketEventCallback", "eventData", "size", "visibleEventData", "redactedEventData", "NetworkListener", "xhrCallback", "fetchCallback", "webSocketRequestCallback", "webSocketEventCallback", "disableWebSocketRecording", "removeXHRListener", "removeFetchListener", "removeWebSocketListener", "FirstLoadListeners", "highlightThis", "errorValue", "shutdown", "stop", "sThis", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "bodyKey", "recordingStartTime", "httpResources", "webSocketResources", "documentTimeOrigin", "webSocketEvents", "GenerateSecureID", "CHARACTER_SET", "secureID", "hasCrypto", "cryptoRandom", "firstloadVersion", "initializeFetchListener", "input", "init", "placeholderCallback", "initializeWebSocketListener", "WebSocketProxy", "target", "args", "socketId", "createNetworkRequestId", "webSocket", "openHandler", "event", "closeHandler", "errorHandler", "messageHandler", "data", "message", "size", "sendProxy", "sendTarget", "thisArg", "listenToChromeExtensionMessage", "_a", "_b", "_sender", "sendResponse", "action", "H", "url", "MetricCategory", "HighlightWarning", "context", "msg", "READY_WAIT_LOOP_MS", "onHighlightReadyQueue", "onHighlightReadyTimeout", "highlight_obj", "first_load_listeners", "init_called", "getTracer", "projectID", "options", "_c", "_d", "_e", "_f", "_g", "_h", "previousSession", "getPreviousSessionData", "sessionSecureID", "GenerateSecureID", "sessionData", "__spreadProps", "__spreadValues", "setItem", "SESSION_STORAGE_KEYS", "setupBrowserTracing", "otelGetTracer", "n", "_0", "__async", "Highlight", "client_options", "FirstLoadListeners", "setupMixpanelIntegration", "setupAmplitudeIntegration", "e", "element", "verbatim", "userName", "userEmail", "timestampOverride", "error", "payload", "opts", "metadata", "_i", "_j", "_k", "highlightUrl", "identifier", "amplitudeUserProperties", "acc", "key", "metrics", "m", "name", "fn", "tracer", "wrapCallback", "span", "callback", "resolve", "reject", "res", "getSessionSecureID", "baseUrl", "currentSessionTimestamp", "now", "urlWithTimestamp", "func", "newOnHighlightReadyQueue", "f"]
}
