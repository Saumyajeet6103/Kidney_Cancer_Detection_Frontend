{
  "version": 3,
  "sources": ["../../.pnpm/@builder.io+partytown@0.10.2/node_modules/@builder.io/partytown/react/index.mjs", "../../.pnpm/@builder.io+partytown@0.10.2/node_modules/@builder.io/partytown/integration/index.mjs"],
  "sourcesContent": ["import React from 'react';\nimport { partytownSnippet } from '../integration/index.mjs';\n\n/**\n * The React `<Partytown/>` component should be placed within the `<head>`\n * of the document. This component should work for SSR/SSG only HTML\n * (static HTML without javascript), clientside javascript only\n * (entire React app is build with clientside javascript),\n * and both SSR/SSG HTML that's then hydrated by the client.\n *\n * @public\n */\nconst Partytown = ({ nonce, ...props } = {}) => {\n    // purposely not using useState() or useEffect() so this component\n    // can also work as a React Server Component\n    // this check is only be done on the client, and skipped over on the server\n    if (typeof document !== 'undefined' && !document._partytown) {\n        if (!document.querySelector('script[data-partytown]')) {\n            // the append script to document code should only run on the client\n            // and only if the SSR'd script doesn't already exist within the document.\n            // If the SSR'd script isn't found in the document, then this\n            // must be a clientside only render. Append the partytown script\n            // to the <head>.\n            const scriptElm = document.createElement('script');\n            scriptElm.dataset.partytown = '';\n            scriptElm.innerHTML = partytownSnippet(props);\n            scriptElm.nonce = nonce;\n            document.head.appendChild(scriptElm);\n        }\n        // should only append this script once per document, and is not dynamic\n        document._partytown = true;\n    }\n    // `dangerouslySetInnerHTML` only works for scripts rendered as HTML from SSR.\n    // The added code will set the [type=\"data-pt-script\"] attribute to the SSR rendered\n    // <script>. If this code renders as SSR HTML, then on the client it'll execute\n    // and add the attribute which will tell the Client JS of the component to NOT\n    // add the same script to the <head>.\n    const innerHTML = partytownSnippet(props) + 'document.currentScript.dataset.partytown=\"\";';\n    return (React.createElement(\"script\", { suppressHydrationWarning: true, dangerouslySetInnerHTML: { __html: innerHTML }, nonce: nonce }));\n};\n\nexport { Partytown };\n", "const PartytownSnippet = \"/* Partytown 0.10.2 - MIT builder.io */\\nconst t={preserveBehavior:!1},e=e=>{if(\\\"string\\\"==typeof e)return[e,t];const[n,r=t]=e;return[n,{...t,...r}]},n=Object.freeze((t=>{const e=new Set;let n=[];do{Object.getOwnPropertyNames(n).forEach((t=>{\\\"function\\\"==typeof n[t]&&e.add(t)}))}while((n=Object.getPrototypeOf(n))!==Object.prototype);return Array.from(e)})());!function(t,r,o,i,a,s,c,d,l,p,u=t,f){function h(){f||(f=1,\\\"/\\\"==(c=(s.lib||\\\"/~partytown/\\\")+(s.debug?\\\"debug/\\\":\\\"\\\"))[0]&&(l=r.querySelectorAll('script[type=\\\"text/partytown\\\"]'),i!=t?i.dispatchEvent(new CustomEvent(\\\"pt1\\\",{detail:t})):(d=setTimeout(v,1e4),r.addEventListener(\\\"pt0\\\",w),a?y(1):o.serviceWorker?o.serviceWorker.register(c+(s.swPath||\\\"partytown-sw.js\\\"),{scope:c}).then((function(t){t.active?y():t.installing&&t.installing.addEventListener(\\\"statechange\\\",(function(t){\\\"activated\\\"==t.target.state&&y()}))}),console.error):v())))}function y(e){p=r.createElement(e?\\\"script\\\":\\\"iframe\\\"),t._pttab=Date.now(),e||(p.style.display=\\\"block\\\",p.style.width=\\\"0\\\",p.style.height=\\\"0\\\",p.style.border=\\\"0\\\",p.style.visibility=\\\"hidden\\\",p.setAttribute(\\\"aria-hidden\\\",!0)),p.src=c+\\\"partytown-\\\"+(e?\\\"atomics.js?v=0.10.2\\\":\\\"sandbox-sw.html?\\\"+t._pttab),r.querySelector(s.sandboxParent||\\\"body\\\").appendChild(p)}function v(n,o){for(w(),i==t&&(s.forward||[]).map((function(n){const[r]=e(n);delete t[r.split(\\\".\\\")[0]]})),n=0;n<l.length;n++)(o=r.createElement(\\\"script\\\")).innerHTML=l[n].innerHTML,o.nonce=s.nonce,r.head.appendChild(o);p&&p.parentNode.removeChild(p)}function w(){clearTimeout(d)}s=t.partytown||{},i==t&&(s.forward||[]).map((function(r){const[o,{preserveBehavior:i}]=e(r);u=t,o.split(\\\".\\\").map((function(e,r,o){var a;u=u[o[r]]=r+1<o.length?u[o[r]]||(a=o[r+1],n.includes(a)?[]:{}):(()=>{let e=null;if(i){const{methodOrProperty:n,thisObject:r}=((t,e)=>{let n=t;for(let t=0;t<e.length-1;t+=1)n=n[e[t]];return{thisObject:n,methodOrProperty:e.length>0?n[e[e.length-1]]:void 0}})(t,o);\\\"function\\\"==typeof n&&(e=(...t)=>n.apply(r,...t))}return function(){let n;return e&&(n=e(arguments)),(t._ptf=t._ptf||[]).push(o,arguments),n}})()}))})),\\\"complete\\\"==r.readyState?h():(t.addEventListener(\\\"DOMContentLoaded\\\",h),t.addEventListener(\\\"load\\\",h))}(window,document,navigator,top,window.crossOriginIsolated);\";\n\n/**\n * The `type` attribute for Partytown scripts, which does two things:\n *\n * 1. Prevents the `<script>` from executing on the main thread.\n * 2. Is used as a selector so the Partytown library can find all scripts to execute in a web worker.\n *\n * @public\n */\nconst SCRIPT_TYPE = `text/partytown`;\nconst getMethods = (obj) => {\n    const properties = new Set();\n    let currentObj = obj;\n    do {\n        Object.getOwnPropertyNames(currentObj).forEach((item) => {\n            if (typeof currentObj[item] === 'function') {\n                properties.add(item);\n            }\n        });\n    } while ((currentObj = Object.getPrototypeOf(currentObj)) !== Object.prototype);\n    return Array.from(properties);\n};\nObject.freeze(getMethods([]));\nfunction serializeConfig(config) {\n    return JSON.stringify(config, (key, value) => {\n        if (typeof value === 'function') {\n            value = String(value);\n            if (value.startsWith(key + '(')) {\n                value = 'function ' + value;\n            }\n        }\n        if (key === 'loadScriptsOnMainThread') {\n            value = value.map((scriptUrl) => Array.isArray(scriptUrl)\n                ? scriptUrl\n                : [\n                    typeof scriptUrl === 'string' ? 'string' : 'regexp',\n                    typeof scriptUrl === 'string' ? scriptUrl : scriptUrl.source,\n                ]);\n        }\n        return value;\n    });\n}\n\nconst createSnippet = (config, snippetCode) => {\n    const { forward = [], ...filteredConfig } = config || {};\n    const configStr = serializeConfig(filteredConfig);\n    return [\n        `!(function(w,p,f,c){`,\n        `if(!window.crossOriginIsolated && !navigator.serviceWorker) return;`,\n        Object.keys(filteredConfig).length > 0\n            ? `c=w[p]=Object.assign(w[p]||{},${configStr});`\n            : `c=w[p]=w[p]||{};`,\n        `c[f]=(c[f]||[])`,\n        forward.length > 0 ? `.concat(${JSON.stringify(forward)})` : ``,\n        `})(window,'partytown','forward');`,\n        snippetCode,\n    ].join('');\n};\n\n/**\n * Function that returns the Partytown snippet as a string, which can be\n * used as the innerHTML of the inlined Partytown script in the head.\n *\n * @public\n */\nconst partytownSnippet = (config) => createSnippet(config, PartytownSnippet);\n\nexport { SCRIPT_TYPE, partytownSnippet };\n"],
  "mappings": ";;;;;;;;AAAA,mBAAkB;;;ACAlB,IAAM,mBAAmB;AAAA;AAWzB,IAAM,aAAa,CAAC,QAAQ;AACxB,QAAM,aAAa,oBAAI,IAAI;AAC3B,MAAI,aAAa;AACjB,KAAG;AACC,WAAO,oBAAoB,UAAU,EAAE,QAAQ,CAAC,SAAS;AACrD,UAAI,OAAO,WAAW,IAAI,MAAM,YAAY;AACxC,mBAAW,IAAI,IAAI;AAAA,MACvB;AAAA,IACJ,CAAC;AAAA,EACL,UAAU,aAAa,OAAO,eAAe,UAAU,OAAO,OAAO;AACrE,SAAO,MAAM,KAAK,UAAU;AAChC;AACA,OAAO,OAAO,WAAW,CAAC,CAAC,CAAC;AAC5B,SAAS,gBAAgB,QAAQ;AAC7B,SAAO,KAAK,UAAU,QAAQ,CAAC,KAAK,UAAU;AAC1C,QAAI,OAAO,UAAU,YAAY;AAC7B,cAAQ,OAAO,KAAK;AACpB,UAAI,MAAM,WAAW,MAAM,GAAG,GAAG;AAC7B,gBAAQ,cAAc;AAAA,MAC1B;AAAA,IACJ;AACA,QAAI,QAAQ,2BAA2B;AACnC,cAAQ,MAAM,IAAI,CAAC,cAAc,MAAM,QAAQ,SAAS,IAClD,YACA;AAAA,QACE,OAAO,cAAc,WAAW,WAAW;AAAA,QAC3C,OAAO,cAAc,WAAW,YAAY,UAAU;AAAA,MAC1D,CAAC;AAAA,IACT;AACA,WAAO;AAAA,EACX,CAAC;AACL;AAEA,IAAM,gBAAgB,CAAC,QAAQ,gBAAgB;AAC3C,QAAM,EAAE,UAAU,CAAC,GAAG,GAAG,eAAe,IAAI,UAAU,CAAC;AACvD,QAAM,YAAY,gBAAgB,cAAc;AAChD,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA,OAAO,KAAK,cAAc,EAAE,SAAS,IAC/B,iCAAiC,SAAS,OAC1C;AAAA,IACN;AAAA,IACA,QAAQ,SAAS,IAAI,WAAW,KAAK,UAAU,OAAO,CAAC,MAAM;AAAA,IAC7D;AAAA,IACA;AAAA,EACJ,EAAE,KAAK,EAAE;AACb;AAQA,IAAM,mBAAmB,CAAC,WAAW,cAAc,QAAQ,gBAAgB;;;ADtD3E,IAAM,YAAY,CAAC,EAAE,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM;AAI5C,MAAI,OAAO,aAAa,eAAe,CAAC,SAAS,YAAY;AACzD,QAAI,CAAC,SAAS,cAAc,wBAAwB,GAAG;AAMnD,YAAM,YAAY,SAAS,cAAc,QAAQ;AACjD,gBAAU,QAAQ,YAAY;AAC9B,gBAAU,YAAY,iBAAiB,KAAK;AAC5C,gBAAU,QAAQ;AAClB,eAAS,KAAK,YAAY,SAAS;AAAA,IACvC;AAEA,aAAS,aAAa;AAAA,EAC1B;AAMA,QAAM,YAAY,iBAAiB,KAAK,IAAI;AAC5C,SAAQ,aAAAA,QAAM,cAAc,UAAU,EAAE,0BAA0B,MAAM,yBAAyB,EAAE,QAAQ,UAAU,GAAG,MAAa,CAAC;AAC1I;",
  "names": ["React"]
}
