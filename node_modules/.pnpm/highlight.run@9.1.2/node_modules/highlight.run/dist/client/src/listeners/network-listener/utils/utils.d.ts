import { RequestResponsePair } from './models';
export declare const HIGHLIGHT_REQUEST_HEADER = "X-Highlight-Request";
export declare const normalizeUrl: (url: string) => string;
type PerformanceResourceTimingWithRequestResponsePair = PerformanceResourceTiming & {
    requestResponsePair: RequestResponsePair;
};
type SanitizeOptions = {
    headersToRedact: string[];
    headersToRecord?: string[];
    requestResponseSanitizer?: (pair: RequestResponsePair) => RequestResponsePair | null;
};
export declare const matchPerformanceTimingsWithRequestResponsePair: (performanceTimings: PerformanceResourceTiming[], requestResponsePairs: RequestResponsePair[], type: "xmlhttprequest" | "fetch", sanitizeOptions: SanitizeOptions) => PerformanceResourceTimingWithRequestResponsePair[];
export declare const shouldNetworkRequestBeRecorded: (url: string, highlightBackendUrl: string, tracingOrigins?: boolean | (string | RegExp)[]) => boolean;
export declare const shouldNetworkRequestBeTraced: (url: string, tracingOrigins?: boolean | (string | RegExp)[]) => boolean;
export declare const createNetworkRequestId: () => string[];
export declare const getHighlightRequestHeader: (sessionSecureID: string, requestId: string) => string;
export {};
