import { NetworkListenerCallback } from '../network-listener';
export interface HighlightFetchWindow extends WindowOrWorkerGlobalScope {
    _originalFetch: WindowOrWorkerGlobalScope['fetch'];
    _highlightFetchPatch: WindowOrWorkerGlobalScope['fetch'];
    _fetchProxy: WindowOrWorkerGlobalScope['fetch'];
}
export declare const FetchListener: (callback: NetworkListenerCallback, backendUrl: string, tracingOrigins: boolean | (string | RegExp)[], urlBlocklist: string[], bodyKeysToRedact?: string[], bodyKeysToRecord?: string[]) => () => void;
export declare const getFetchRequestProperties: (input: RequestInfo | URL, init?: RequestInit) => {
    method: string;
    url: string;
};
export declare const getResponseBody: (response: Response, bodyKeysToRecord: string[] | undefined, bodyKeysToRedact: string[] | undefined) => Promise<string>;
