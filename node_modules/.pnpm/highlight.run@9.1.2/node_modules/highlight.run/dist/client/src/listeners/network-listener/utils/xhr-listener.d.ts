import { NetworkListenerCallback } from '../network-listener';
import { Headers } from './models';
export interface BrowserXHR extends XMLHttpRequest {
    _method: string;
    _url: string;
    _requestHeaders: Headers;
    _responseSize?: number;
    _shouldRecordHeaderAndBody: boolean;
    _body?: any;
}
/**
 * Listens to all XMLHttpRequests made.
 */
export declare const XHRListener: (callback: NetworkListenerCallback, backendUrl: string, tracingOrigins: boolean | (string | RegExp)[], urlBlocklist: string[], bodyKeysToRedact?: string[], bodyKeysToRecord?: string[]) => () => void;
export declare const getBodyThatShouldBeRecorded: (bodyData: any, bodyKeysToRedact?: string[], bodyKeysToRecord?: string[], headers?: Headers | {
    [key: string]: string;
}) => any;
